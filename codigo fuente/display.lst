;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 13/07/2009 0:42:20
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$EF57	F001			GOTO	_main
$1D60	$	_RES032:
$1D60	$0100	    			MOVLB	0
$1D62	$6A02	    			CLRF	STACK_2, 0
$1D64	$6A01	    			CLRF	STACK_1, 0
$1D66	$6A00	    			CLRF	STACK_0, 0
$1D68	$6A08	    			CLRF	STACK_8, 0
$1D6A	$6A03	    			CLRF	STACK_3, 0
$1D6C	$0E00	    			MOVLW	0
$1D6E	$0012	    			RETURN
$1D2A	$	_SETFUN32:
$1D2A	$0100	    			MOVLB	0
$1D2C	$840B	    			BSF	STACK_11, 2, 0
$1D2E	$AE0B	    			BTFSS	STACK_11, 7, 0
$1D30	$EFA1	F00E			GOTO	SETFUN32EEE
$1D34	$0E01	    			MOVLW	0x01
$1D36	$6E03	    			MOVWF	STACK_3, 0
$1D38	$6A02	    			CLRF	STACK_2, 0
$1D3A	$6A01	    			CLRF	STACK_1, 0
$1D3C	$6A00	    			CLRF	STACK_0, 0
$1D3E	$360A	    			RLCF	STACK_10, F, 0
$1D40	$3202	    			RRCF	STACK_2, F, 0
$1D42	$	SETFUN32EEE:
$1D42	$0EFF	    			MOVLW	0xFF
$1D44	$0012	    			RETURN
$1D7C	$	_FIXSIGN32:
$1D7C	$0100	    			MOVLB	0
$1D7E	$AE0A	    			BTFSS	STACK_10, 7, 0
$1D80	$9E02	    			BCF	STACK_2, 7, 0
$1D82	$0E00	    			MOVLW	0
$1D84	$0012	    			RETURN
$1A3A	$	_NRM3232:
$1A3A	$0100	    			MOVLB	0
$1A3C	$6A0C	    			CLRF	STACK_12, 0
$1A3E	$6A0E	    			CLRF	STACK_14, 0
$1A40	$5002	    			MOVF	STACK_2, W, 0
$1A42	$A4D8	    			BTFSS	STATUS, Z, 0
$1A44	$EF37	F00D			GOTO	NORM3232
$1A48	$C001	F002			MOVFF	STACK_1, STACK_2
$1A4C	$C000	F001			MOVFF	STACK_0, STACK_1
$1A50	$6A00	    			CLRF	STACK_0, 0
$1A52	$860E	    			BSF	STACK_14, 3, 0
$1A54	$5002	    			MOVF	STACK_2, W, 0
$1A56	$A4D8	    			BTFSS	STATUS, Z, 0
$1A58	$EF37	F00D			GOTO	NORM3232
$1A5C	$C001	F002			MOVFF	STACK_1, STACK_2
$1A60	$6A01	    			CLRF	STACK_1, 0
$1A62	$960E	    			BCF	STACK_14, 3, 0
$1A64	$880E	    			BSF	STACK_14, 4, 0
$1A66	$5002	    			MOVF	STACK_2, W, 0
$1A68	$B4D8	    			BTFSC	STATUS, Z, 0
$1A6A	$EF49	F00D			GOTO	JPNRES032
$1A6E	$	NORM3232:
$1A6E	$500E	    			MOVF	STACK_14, W, 0
$1A70	$5E03	    			SUBWF	STACK_3, F, 0
$1A72	$A4D8	    			BTFSS	STATUS, Z, 0
$1A74	$A0D8	    			BTFSS	STATUS, C, 0
$1A76	$EF4F	F00D			GOTO	JPNSETFUN32
$1A7A	$90D8	    			BCF	STATUS, C, 0
$1A7C	$	NORM3232A:
$1A7C	$BE02	    			BTFSC	STACK_2, 7, 0
$1A7E	$EF55	F00D			GOTO	JMPNFIXSIGN32
$1A82	$3600	    			RLCF	STACK_0, F, 0
$1A84	$3601	    			RLCF	STACK_1, F, 0
$1A86	$3602	    			RLCF	STACK_2, F, 0
$1A88	$2E03	    			DECFSZ	STACK_3, F, 0
$1A8A	$EF3E	F00D			GOTO	NORM3232A
$1A8E	$EF4F	F00D			GOTO	JPNSETFUN32
$1A92	$	JPNRES032:
$1A92	$0E01	    			MOVLW	0x01
$1A94	$6E0C	    			MOVWF	STACK_12, 0
$1A96	$ECB0	F00E			CALL	_RES032
$1A9A	$EF59	F00D			GOTO	NORM32EEE
$1A9E	$	JPNSETFUN32:
$1A9E	$0E02	    			MOVLW	0x02
$1AA0	$6E0C	    			MOVWF	STACK_12, 0
$1AA2	$EC95	F00E			CALL	_SETFUN32
$1AA6	$EF59	F00D			GOTO	NORM32EEE
$1AAA	$	JMPNFIXSIGN32:
$1AAA	$0E04	    			MOVLW	0x04
$1AAC	$6E0C	    			MOVWF	STACK_12, 0
$1AAE	$ECBE	F00E			CALL	_FIXSIGN32
$1AB2	$	NORM32EEE:
$1AB2	$0012	    			RETURN
$1C86	$	_Div_16x16_U:
$1C86	$0100	    			MOVLB	0
$1C88	$6A08	    			CLRF	STACK_8, 0
$1C8A	$6A09	    			CLRF	STACK_9, 0
$1C8C	$0E10	    			MOVLW	16
$1C8E	$6E0C	    			MOVWF	STACK_12, 0
$1C90	$3401	    			RLCF	STACK_1, W, 0
$1C92	$3608	    			RLCF	STACK_8, F, 0
$1C94	$3609	    			RLCF	STACK_9, F, 0
$1C96	$5004	    			MOVF	STACK_4, W, 0
$1C98	$5E08	    			SUBWF	STACK_8, F, 0
$1C9A	$5005	    			MOVF	STACK_5, W, 0
$1C9C	$A0D8	    			BTFSS	STATUS, C, 0
$1C9E	$3C05	    			INCFSZ	STACK_5, W, 0
$1CA0	$5E09	    			SUBWF	STACK_9, F, 0
$1CA2	$B0D8	    			BTFSC	STATUS, C, 0
$1CA4	$EF5B	F00E			GOTO	$+8
$1CA8	$5004	    			MOVF	STACK_4, W, 0
$1CAA	$2608	    			ADDWF	STACK_8, F, 0
$1CAC	$5005	    			MOVF	STACK_5, W, 0
$1CAE	$B0D8	    			BTFSC	STATUS, C, 0
$1CB0	$3C05	    			INCFSZ	STACK_5, W, 0
$1CB2	$2609	    			ADDWF	STACK_9, F, 0
$1CB4	$90D8	    			BCF	STATUS, C, 0
$1CB6	$3600	    			RLCF	STACK_0, F, 0
$1CB8	$3601	    			RLCF	STACK_1, F, 0
$1CBA	$2E0C	    			DECFSZ	STACK_12, F, 0
$1CBC	$EF48	F00E			GOTO	$-21
$1CC0	$0012	    			RETURN
$1CC2	$	_Word2Double:
$1CC2	$0100	    			MOVLB	0
$1CC4	$5000	    			MOVF	STACK_0, W, 0
$1CC6	$6E08	    			MOVWF	STACK_8, 0
$1CC8	$5001	    			MOVF	STACK_1, W, 0
$1CCA	$6E00	    			MOVWF	STACK_0, 0
$1CCC	$6A01	    			CLRF	STACK_1, 0
$1CCE	$6A02	    			CLRF	STACK_2, 0
$1CD0	$6A03	    			CLRF	STACK_3, 0
$1CD2	$	FLO16U32:
$1CD2	$6A0B	    			CLRF	STACK_11, 0
$1CD4	$6A0C	    			CLRF	STACK_12, 0
$1CD6	$0E96	    			MOVLW	150
$1CD8	$6E03	    			MOVWF	STACK_3, 0
$1CDA	$6A0A	    			CLRF	STACK_10, 0
$1CDC	$C000	F001			MOVFF	STACK_0, STACK_1
$1CE0	$C008	F000			MOVFF	STACK_8, STACK_0
$1CE4	$6A08	    			CLRF	STACK_8, 0
$1CE6	$6A02	    			CLRF	STACK_2, 0
$1CE8	$EC1D	F00D			CALL	_NRM3232
$1CEC	$0012	    			RETURN
$0008	$	_interrupt:
$0008	$C00E	F080			MOVFF	STACK_14, STSAVED_14
$000C	$C00C	F07F			MOVFF	STACK_12, STSAVED_12
$0010	$C00B	F07E			MOVFF	STACK_11, STSAVED_11
$0014	$C00A	F07D			MOVFF	STACK_10, STSAVED_10
$0018	$C009	F07C			MOVFF	STACK_9, STSAVED_9
$001C	$C008	F07B			MOVFF	STACK_8, STSAVED_8
$0020	$C005	F07A			MOVFF	STACK_5, STSAVED_5
$0024	$C004	F079			MOVFF	STACK_4, STSAVED_4
$0028	$C003	F078			MOVFF	STACK_3, STSAVED_3
$002C	$C002	F077			MOVFF	STACK_2, STSAVED_2
$0030	$C001	F076			MOVFF	STACK_1, STSAVED_1
$0034	$C000	F075			MOVFF	STACK_0, STSAVED_0
$0038	$CFE9	F02A			MOVFF	FSR0L, ?saveFSR0
$003C	$CFEA	F02B			MOVFF	FSR0H, ?saveFSR0+1
$0040	$CFE1	F02C			MOVFF	FSR1L, ?saveFSR1
$0044	$CFE2	F02D			MOVFF	FSR1H, ?saveFSR1+1
;display.c,84 :: 			void interrupt(void)
;display.c,89 :: 			INTCON.GIE=0;
$0048	$9EF2	    			BCF	INTCON, 7, 0
;display.c,94 :: 			if (PORTA.F0){
$004A	$A080	    			BTFSS	PORTA, 0, 0
$004C	$D023	    			BRA	L_interrupt_12
;display.c,95 :: 			numeroVueltasJugador--;
$004E	$0615	    			DECF	_numeroVueltasJugador, 1, 0
;display.c,96 :: 			detInterrupcion=9;
$0050	$0E09	    			MOVLW	9
$0052	$6E16	    			MOVWF	_detInterrupcion, 0
$0054	$0E00	    			MOVLW	0
$0056	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,97 :: 			delay_ms(200);
$0058	$0E02	    			MOVLW	2
$005A	$6E0C	    			MOVWF	STACK_12, 0
$005C	$0EFF	    			MOVLW	255
$005E	$6E0B	    			MOVWF	STACK_11, 0
$0060	$0EFF	    			MOVLW	255
$0062	$6E0A	    			MOVWF	STACK_10, 0
$0064	$2E0C	    			DECFSZ	STACK_12, F, 0
$0066	$D001	    			BRA	$+2
$0068	$D007	    			BRA	$+8
$006A	$2E0B	    			DECFSZ	STACK_11, F, 0
$006C	$D001	    			BRA	$+2
$006E	$D003	    			BRA	$+4
$0070	$2E0A	    			DECFSZ	STACK_10, F, 0
$0072	$D7FE	    			BRA	$-1
$0074	$D7FA	    			BRA	$-5
$0076	$D7F6	    			BRA	$-9
$0078	$0E06	    			MOVLW	6
$007A	$6E0B	    			MOVWF	STACK_11, 0
$007C	$0EFF	    			MOVLW	255
$007E	$6E0A	    			MOVWF	STACK_10, 0
$0080	$2E0B	    			DECFSZ	STACK_11, F, 0
$0082	$D001	    			BRA	$+2
$0084	$D003	    			BRA	$+4
$0086	$2E0A	    			DECFSZ	STACK_10, F, 0
$0088	$D7FE	    			BRA	$-1
$008A	$D7FA	    			BRA	$-5
$008C	$0E0A	    			MOVLW	10
$008E	$6E0A	    			MOVWF	STACK_10, 0
$0090	$2E0A	    			DECFSZ	STACK_10, F, 0
$0092	$D7FE	    			BRA	$-1
;display.c,99 :: 			}
$0094	$	L_interrupt_12:
;display.c,100 :: 			if (PORTA.F1) {               //medirá la vuelta completa y calculará el factor de ajuste
$0094	$A280	    			BTFSS	PORTA, 1, 0
$0096	$D082	    			BRA	L_interrupt_13
;display.c,101 :: 			numeroVueltasCoche--;
$0098	$0618	    			DECF	_numeroVueltasCoche, 1, 0
;display.c,102 :: 			contador=0; //reseteamos contador porque paso por un sensor
$009A	$6A19	    			CLRF	_contador, 0
$009C	$6A1A	    			CLRF	_contador+1, 0
$009E	$6A1B	    			CLRF	_contador+2, 0
$00A0	$6A1C	    			CLRF	_contador+3, 0
;display.c,103 :: 			switch (nivelInterrupt)
$00A2	$D041	    			BRA	L_interrupt_14
;display.c,105 :: 			case 0: //tarda 4 segundos 80 interrupciones
$00A4	$	L_interrupt_16:
;display.c,106 :: 			tiempovuelta = interrupcionesvuelta/80;
$00A4	$0E50	    			MOVLW	80
$00A6	$6E04	    			MOVWF	STACK_4, 0
$00A8	$0E00	    			MOVLW	0
$00AA	$6E05	    			MOVWF	STACK_4+1, 0
$00AC	$C023	F000			MOVFF	_interrupcionesvuelta, STACK_0
$00B0	$C024	F001			MOVFF	_interrupcionesvuelta+1, STACK_0+1
$00B4	$EC43	F00E			CALL	_div_16x16_u
$00B8	$EC61	F00E			CALL	_word2double
$00BC	$C000	F01F			MOVFF	STACK_0, _tiempovuelta
$00C0	$C001	F020			MOVFF	STACK_0+1, _tiempovuelta+1
$00C4	$C002	F021			MOVFF	STACK_0+2, _tiempovuelta+2
$00C8	$C003	F022			MOVFF	STACK_0+3, _tiempovuelta+3
;display.c,107 :: 			break;
$00CC	$D042	    			BRA	L_interrupt_15
;display.c,108 :: 			case 1://tarda 6 segundos 120 interrupciones
$00CE	$	L_interrupt_17:
;display.c,109 :: 			tiempovuelta = interrupcionesvuelta/120;
$00CE	$0100	    			MOVLB	0
$00D0	$0E78	    			MOVLW	120
$00D2	$6E04	    			MOVWF	STACK_4, 0
$00D4	$0E00	    			MOVLW	0
$00D6	$6E05	    			MOVWF	STACK_4+1, 0
$00D8	$C023	F000			MOVFF	_interrupcionesvuelta, STACK_0
$00DC	$C024	F001			MOVFF	_interrupcionesvuelta+1, STACK_0+1
$00E0	$EC43	F00E			CALL	_div_16x16_u
$00E4	$EC61	F00E			CALL	_word2double
$00E8	$C000	F01F			MOVFF	STACK_0, _tiempovuelta
$00EC	$C001	F020			MOVFF	STACK_0+1, _tiempovuelta+1
$00F0	$C002	F021			MOVFF	STACK_0+2, _tiempovuelta+2
$00F4	$C003	F022			MOVFF	STACK_0+3, _tiempovuelta+3
;display.c,110 :: 			break;
$00F8	$D02C	    			BRA	L_interrupt_15
;display.c,112 :: 			case 2: //tarda 8 segundos 160 interrupciones
$00FA	$	L_interrupt_18:
;display.c,113 :: 			tiempovuelta = interrupcionesvuelta/160;
$00FA	$0100	    			MOVLB	0
$00FC	$0EA0	    			MOVLW	160
$00FE	$6E04	    			MOVWF	STACK_4, 0
$0100	$0E00	    			MOVLW	0
$0102	$6E05	    			MOVWF	STACK_4+1, 0
$0104	$C023	F000			MOVFF	_interrupcionesvuelta, STACK_0
$0108	$C024	F001			MOVFF	_interrupcionesvuelta+1, STACK_0+1
$010C	$EC43	F00E			CALL	_div_16x16_u
$0110	$EC61	F00E			CALL	_word2double
$0114	$C000	F01F			MOVFF	STACK_0, _tiempovuelta
$0118	$C001	F020			MOVFF	STACK_0+1, _tiempovuelta+1
$011C	$C002	F021			MOVFF	STACK_0+2, _tiempovuelta+2
$0120	$C003	F022			MOVFF	STACK_0+3, _tiempovuelta+3
;display.c,114 :: 			break;
$0124	$D016	    			BRA	L_interrupt_15
;display.c,115 :: 			}
$0126	$	L_interrupt_14:
$0126	$0100	    			MOVLB	0
$0128	$0E00	    			MOVLW	0
$012A	$181E	    			XORWF	_nivelInterrupt+1, 0, 0
$012C	$E102	    			BNZ	L_interrupt_87
$012E	$0E00	    			MOVLW	0
$0130	$181D	    			XORWF	_nivelInterrupt, 0, 0
$0132	$	L_interrupt_87:
$0132	$0100	    			MOVLB	0
$0134	$E0B7	    			BZ	L_interrupt_16
$0136	$0E00	    			MOVLW	0
$0138	$181E	    			XORWF	_nivelInterrupt+1, 0, 0
$013A	$E102	    			BNZ	L_interrupt_88
$013C	$0E01	    			MOVLW	1
$013E	$181D	    			XORWF	_nivelInterrupt, 0, 0
$0140	$	L_interrupt_88:
$0140	$0100	    			MOVLB	0
$0142	$E0C5	    			BZ	L_interrupt_17
$0144	$0E00	    			MOVLW	0
$0146	$181E	    			XORWF	_nivelInterrupt+1, 0, 0
$0148	$E102	    			BNZ	L_interrupt_89
$014A	$0E02	    			MOVLW	2
$014C	$181D	    			XORWF	_nivelInterrupt, 0, 0
$014E	$	L_interrupt_89:
$014E	$0100	    			MOVLB	0
$0150	$E0D4	    			BZ	L_interrupt_18
$0152	$	L_interrupt_15:
;display.c,116 :: 			interrupcionesvuelta=0;
$0152	$0100	    			MOVLB	0
$0154	$6A23	    			CLRF	_interrupcionesvuelta, 0
$0156	$6A24	    			CLRF	_interrupcionesvuelta+1, 0
;display.c,117 :: 			detInterrupcion=10;
$0158	$0E0A	    			MOVLW	10
$015A	$6E16	    			MOVWF	_detInterrupcion, 0
$015C	$0E00	    			MOVLW	0
$015E	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,118 :: 			delay_ms(200);
$0160	$0E02	    			MOVLW	2
$0162	$6E0C	    			MOVWF	STACK_12, 0
$0164	$0EFF	    			MOVLW	255
$0166	$6E0B	    			MOVWF	STACK_11, 0
$0168	$0EFF	    			MOVLW	255
$016A	$6E0A	    			MOVWF	STACK_10, 0
$016C	$2E0C	    			DECFSZ	STACK_12, F, 0
$016E	$D001	    			BRA	$+2
$0170	$D007	    			BRA	$+8
$0172	$2E0B	    			DECFSZ	STACK_11, F, 0
$0174	$D001	    			BRA	$+2
$0176	$D003	    			BRA	$+4
$0178	$2E0A	    			DECFSZ	STACK_10, F, 0
$017A	$D7FE	    			BRA	$-1
$017C	$D7FA	    			BRA	$-5
$017E	$D7F6	    			BRA	$-9
$0180	$0E06	    			MOVLW	6
$0182	$6E0B	    			MOVWF	STACK_11, 0
$0184	$0EFF	    			MOVLW	255
$0186	$6E0A	    			MOVWF	STACK_10, 0
$0188	$2E0B	    			DECFSZ	STACK_11, F, 0
$018A	$D001	    			BRA	$+2
$018C	$D003	    			BRA	$+4
$018E	$2E0A	    			DECFSZ	STACK_10, F, 0
$0190	$D7FE	    			BRA	$-1
$0192	$D7FA	    			BRA	$-5
$0194	$0E0A	    			MOVLW	10
$0196	$6E0A	    			MOVWF	STACK_10, 0
$0198	$2E0A	    			DECFSZ	STACK_10, F, 0
$019A	$D7FE	    			BRA	$-1
;display.c,120 :: 			}
$019C	$	L_interrupt_13:
;display.c,121 :: 			if (PORTA.F2) {
$019C	$0100	    			MOVLB	0
$019E	$A480	    			BTFSS	PORTA, 2, 0
$01A0	$D008	    			BRA	L_interrupt_19
;display.c,122 :: 			detInterrupcion=1;
$01A2	$0E01	    			MOVLW	1
$01A4	$6E16	    			MOVWF	_detInterrupcion, 0
$01A6	$0E00	    			MOVLW	0
$01A8	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,123 :: 			contador =0;
$01AA	$6A19	    			CLRF	_contador, 0
$01AC	$6A1A	    			CLRF	_contador+1, 0
$01AE	$6A1B	    			CLRF	_contador+2, 0
$01B0	$6A1C	    			CLRF	_contador+3, 0
;display.c,124 :: 			}
$01B2	$	L_interrupt_19:
;display.c,125 :: 			if (PORTA.F3) {detInterrupcion=2;
$01B2	$0100	    			MOVLB	0
$01B4	$A680	    			BTFSS	PORTA, 3, 0
$01B6	$D008	    			BRA	L_interrupt_20
$01B8	$0E02	    			MOVLW	2
$01BA	$6E16	    			MOVWF	_detInterrupcion, 0
$01BC	$0E00	    			MOVLW	0
$01BE	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,126 :: 			contador=0;
$01C0	$6A19	    			CLRF	_contador, 0
$01C2	$6A1A	    			CLRF	_contador+1, 0
$01C4	$6A1B	    			CLRF	_contador+2, 0
$01C6	$6A1C	    			CLRF	_contador+3, 0
;display.c,127 :: 			}
$01C8	$	L_interrupt_20:
;display.c,128 :: 			if (PORTA.F4) {
$01C8	$0100	    			MOVLB	0
$01CA	$A880	    			BTFSS	PORTA, 4, 0
$01CC	$D008	    			BRA	L_interrupt_21
;display.c,129 :: 			detInterrupcion=3;
$01CE	$0E03	    			MOVLW	3
$01D0	$6E16	    			MOVWF	_detInterrupcion, 0
$01D2	$0E00	    			MOVLW	0
$01D4	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,130 :: 			contador=0;
$01D6	$6A19	    			CLRF	_contador, 0
$01D8	$6A1A	    			CLRF	_contador+1, 0
$01DA	$6A1B	    			CLRF	_contador+2, 0
$01DC	$6A1C	    			CLRF	_contador+3, 0
;display.c,131 :: 			}
$01DE	$	L_interrupt_21:
;display.c,132 :: 			if (PORTA.F5) {
$01DE	$0100	    			MOVLB	0
$01E0	$AA80	    			BTFSS	PORTA, 5, 0
$01E2	$D008	    			BRA	L_interrupt_22
;display.c,133 :: 			detInterrupcion=4;
$01E4	$0E04	    			MOVLW	4
$01E6	$6E16	    			MOVWF	_detInterrupcion, 0
$01E8	$0E00	    			MOVLW	0
$01EA	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,134 :: 			contador=0;
$01EC	$6A19	    			CLRF	_contador, 0
$01EE	$6A1A	    			CLRF	_contador+1, 0
$01F0	$6A1B	    			CLRF	_contador+2, 0
$01F2	$6A1C	    			CLRF	_contador+3, 0
;display.c,135 :: 			}
$01F4	$	L_interrupt_22:
;display.c,136 :: 			if (PORTB.F6) {
$01F4	$0100	    			MOVLB	0
$01F6	$AC81	    			BTFSS	PORTB, 6, 0
$01F8	$D008	    			BRA	L_interrupt_23
;display.c,137 :: 			detInterrupcion=5;
$01FA	$0E05	    			MOVLW	5
$01FC	$6E16	    			MOVWF	_detInterrupcion, 0
$01FE	$0E00	    			MOVLW	0
$0200	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,138 :: 			contador=0;
$0202	$6A19	    			CLRF	_contador, 0
$0204	$6A1A	    			CLRF	_contador+1, 0
$0206	$6A1B	    			CLRF	_contador+2, 0
$0208	$6A1C	    			CLRF	_contador+3, 0
;display.c,139 :: 			}
$020A	$	L_interrupt_23:
;display.c,140 :: 			if (PORTB.F1) {
$020A	$0100	    			MOVLB	0
$020C	$A281	    			BTFSS	PORTB, 1, 0
$020E	$D008	    			BRA	L_interrupt_24
;display.c,141 :: 			detInterrupcion=6;
$0210	$0E06	    			MOVLW	6
$0212	$6E16	    			MOVWF	_detInterrupcion, 0
$0214	$0E00	    			MOVLW	0
$0216	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,142 :: 			contador=0;
$0218	$6A19	    			CLRF	_contador, 0
$021A	$6A1A	    			CLRF	_contador+1, 0
$021C	$6A1B	    			CLRF	_contador+2, 0
$021E	$6A1C	    			CLRF	_contador+3, 0
;display.c,143 :: 			}
$0220	$	L_interrupt_24:
;display.c,144 :: 			if (PORTB.F2) {
$0220	$0100	    			MOVLB	0
$0222	$A481	    			BTFSS	PORTB, 2, 0
$0224	$D008	    			BRA	L_interrupt_25
;display.c,145 :: 			detInterrupcion=7;
$0226	$0E07	    			MOVLW	7
$0228	$6E16	    			MOVWF	_detInterrupcion, 0
$022A	$0E00	    			MOVLW	0
$022C	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,146 :: 			contador=0;
$022E	$6A19	    			CLRF	_contador, 0
$0230	$6A1A	    			CLRF	_contador+1, 0
$0232	$6A1B	    			CLRF	_contador+2, 0
$0234	$6A1C	    			CLRF	_contador+3, 0
;display.c,147 :: 			}
$0236	$	L_interrupt_25:
;display.c,148 :: 			if (PORTB.F7) {
$0236	$0100	    			MOVLB	0
$0238	$AE81	    			BTFSS	PORTB, 7, 0
$023A	$D008	    			BRA	L_interrupt_26
;display.c,149 :: 			detInterrupcion=8;
$023C	$0E08	    			MOVLW	8
$023E	$6E16	    			MOVWF	_detInterrupcion, 0
$0240	$0E00	    			MOVLW	0
$0242	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,150 :: 			contador=0;
$0244	$6A19	    			CLRF	_contador, 0
$0246	$6A1A	    			CLRF	_contador+1, 0
$0248	$6A1B	    			CLRF	_contador+2, 0
$024A	$6A1C	    			CLRF	_contador+3, 0
;display.c,151 :: 			}
$024C	$	L_interrupt_26:
;display.c,152 :: 			if (INTCON.TMR0IF)
$024C	$0100	    			MOVLB	0
$024E	$A4F2	    			BTFSS	INTCON, 2, 0
$0250	$D00A	    			BRA	L_interrupt_27
;display.c,154 :: 			interrupcionesvuelta++;
$0252	$4A23	    			INFSNZ	_interrupcionesvuelta, 1, 0
$0254	$2A24	    			INCF	_interrupcionesvuelta+1, 1, 0
;display.c,155 :: 			contador++;  // incremento valor de contador en cada IRQ
$0256	$0E01	    			MOVLW	1
$0258	$2619	    			ADDWF	_contador, 1, 0
$025A	$0E00	    			MOVLW	0
$025C	$221A	    			ADDWFC	_contador+1, 1, 0
$025E	$221B	    			ADDWFC	_contador+2, 1, 0
$0260	$221C	    			ADDWFC	_contador+3, 1, 0
;display.c,156 :: 			TMR0L  = 61;
$0262	$0E3D	    			MOVLW	61
$0264	$6ED6	    			MOVWF	TMR0L, 0
;display.c,157 :: 			}
$0266	$	L_interrupt_27:
;display.c,158 :: 			INTCON = 0xB0;
$0266	$0100	    			MOVLB	0
$0268	$0EB0	    			MOVLW	176
$026A	$6EF2	    			MOVWF	INTCON, 0
;display.c,160 :: 			}
$026C	$	L_Interrupt_end:
$026C	$C02A	FFE9			MOVFF	?saveFSR0, FSR0L
$0270	$C02B	FFEA			MOVFF	?saveFSR0+1, FSR0H
$0274	$C02C	FFE1			MOVFF	?saveFSR1, FSR1L
$0278	$C02D	FFE2			MOVFF	?saveFSR1+1, FSR1H
$027C	$C080	F00E			MOVFF	STSAVED_14, STACK_14
$0280	$C07F	F00C			MOVFF	STSAVED_12, STACK_12
$0284	$C07E	F00B			MOVFF	STSAVED_11, STACK_11
$0288	$C07D	F00A			MOVFF	STSAVED_10, STACK_10
$028C	$C07C	F009			MOVFF	STSAVED_9, STACK_9
$0290	$C07B	F008			MOVFF	STSAVED_8, STACK_8
$0294	$C07A	F005			MOVFF	STSAVED_5, STACK_5
$0298	$C079	F004			MOVFF	STSAVED_4, STACK_4
$029C	$C078	F003			MOVFF	STSAVED_3, STACK_3
$02A0	$C077	F002			MOVFF	STSAVED_2, STACK_2
$02A4	$C076	F001			MOVFF	STSAVED_1, STACK_1
$02A8	$C075	F000			MOVFF	STSAVED_0, STACK_0
$02AC	$0011	    			RETFIE
$1D98	$	_Delay_1us:
;Delays.c,7 :: 			void Delay_1us() {
;Delays.c,8 :: 			Delay_us(1);
$1D98	$0000	    			NOP
;Delays.c,9 :: 			}
$1D9A	$0012	    			RETURN
$1CEE	$	_Delay_5500us:
;Delays.c,31 :: 			void Delay_5500us() {
;Delays.c,32 :: 			Delay_us(5500);
$1CEE	$0E08	    			MOVLW	8
$1CF0	$6E0B	    			MOVWF	STACK_11, 0
$1CF2	$0EFF	    			MOVLW	255
$1CF4	$6E0A	    			MOVWF	STACK_10, 0
$1CF6	$2E0B	    			DECFSZ	STACK_11, F, 0
$1CF8	$D001	    			BRA	$+2
$1CFA	$D003	    			BRA	$+4
$1CFC	$2E0A	    			DECFSZ	STACK_10, F, 0
$1CFE	$D7FE	    			BRA	$-1
$1D00	$D7FA	    			BRA	$-5
$1D02	$0E1E	    			MOVLW	30
$1D04	$6E0A	    			MOVWF	STACK_10, 0
$1D06	$2E0A	    			DECFSZ	STACK_10, F, 0
$1D08	$D7FE	    			BRA	$-1
;Delays.c,33 :: 			}
$1D0A	$0012	    			RETURN
$1D70	$	_Delay_50us:
;Delays.c,19 :: 			void Delay_50us() {
;Delays.c,20 :: 			Delay_us(50);
$1D70	$0E10	    			MOVLW	16
$1D72	$6E0A	    			MOVWF	STACK_10, 0
$1D74	$2E0A	    			DECFSZ	STACK_10, F, 0
$1D76	$D7FE	    			BRA	$-1
$1D78	$0000	    			NOP
;Delays.c,21 :: 			}
$1D7A	$0012	    			RETURN
$1B24	$	_Mul_16x16_S:
$1B24	$0100	    			MOVLB	0
$1B26	$5000	    			MOVF	STACK_0, W, 0
$1B28	$0204	    			MULWF	STACK_4, 0
$1B2A	$CFF4	F009			MOVFF	PRODH, STACK_9
$1B2E	$CFF3	F008			MOVFF	PRODL, STACK_8
$1B32	$5001	    			MOVF	STACK_1, W, 0
$1B34	$0205	    			MULWF	STACK_5, 0
$1B36	$CFF4	F00B			MOVFF	PRODH, STACK_11
$1B3A	$CFF3	F00A			MOVFF	PRODL, STACK_10
$1B3E	$5000	    			MOVF	STACK_0, W, 0
$1B40	$0205	    			MULWF	STACK_5, 0
$1B42	$50F3	    			MOVF	PRODL, W, 0
$1B44	$2609	    			ADDWF	STACK_9, F, 0
$1B46	$50F4	    			MOVF	PRODH, W, 0
$1B48	$220A	    			ADDWFC	STACK_10, F, 0
$1B4A	$6AE8	    			CLRF	WREG, 0
$1B4C	$220B	    			ADDWFC	STACK_11, F, 0
$1B4E	$5001	    			MOVF	STACK_1, W, 0
$1B50	$0204	    			MULWF	STACK_4, 0
$1B52	$50F3	    			MOVF	PRODL, W, 0
$1B54	$2609	    			ADDWF	STACK_9, F, 0
$1B56	$50F4	    			MOVF	PRODH, W, 0
$1B58	$220A	    			ADDWFC	STACK_10, F, 0
$1B5A	$6AE8	    			CLRF	WREG, 0
$1B5C	$220B	    			ADDWFC	STACK_11, F, 0
$1B5E	$AE05	    			BTFSS	STACK_5, 7, 0
$1B60	$EFB6	F00D			GOTO	$+5
$1B64	$5000	    			MOVF	STACK_0, W, 0
$1B66	$5C0A	    			SUBWF	STACK_10, W, 0
$1B68	$5001	    			MOVF	STACK_1, W, 0
$1B6A	$580B	    			SUBWFB	STACK_11, W, 0
$1B6C	$AE01	    			BTFSS	STACK_1, 7, 0
$1B6E	$EFBD	F00D			GOTO	$+5
$1B72	$5004	    			MOVF	STACK_4, W, 0
$1B74	$5C0A	    			SUBWF	STACK_10, W, 0
$1B76	$5005	    			MOVF	STACK_5, W, 0
$1B78	$580B	    			SUBWFB	STACK_11, W, 0
$1B7A	$C008	F000			MOVFF	STACK_8, STACK_0
$1B7E	$C009	F001			MOVFF	STACK_9, STACK_1
$1B82	$C00A	F002			MOVFF	STACK_10, STACK_2
$1B86	$C00B	F003			MOVFF	STACK_11, STACK_3
$1B8A	$0012	    			RETURN
$1B8C	$	_Div_16x16_S_L:
$1B8C	$0100	    			MOVLB	0
$1B8E	$3401	    			RLCF	STACK_1, W, 0
$1B90	$3608	    			RLCF	STACK_8, F, 0
$1B92	$3609	    			RLCF	STACK_9, F, 0
$1B94	$5004	    			MOVF	STACK_4, W, 0
$1B96	$5E08	    			SUBWF	STACK_8, F, 0
$1B98	$5005	    			MOVF	STACK_5, W, 0
$1B9A	$A0D8	    			BTFSS	STATUS, C, 0
$1B9C	$3C05	    			INCFSZ	STACK_5, W, 0
$1B9E	$5E09	    			SUBWF	STACK_9, F, 0
$1BA0	$3600	    			RLCF	STACK_0, F, 0
$1BA2	$3601	    			RLCF	STACK_1, F, 0
$1BA4	$0E0F	    			MOVLW	15
$1BA6	$6E0C	    			MOVWF	STACK_12, 0
$1BA8	$3401	    			RLCF	STACK_1, W, 0
$1BAA	$3608	    			RLCF	STACK_8, F, 0
$1BAC	$3609	    			RLCF	STACK_9, F, 0
$1BAE	$5004	    			MOVF	STACK_4, W, 0
$1BB0	$A000	    			BTFSS	STACK_0, 0, 0
$1BB2	$EFE2	F00D			GOTO	$+7
$1BB6	$5E08	    			SUBWF	STACK_8, F, 0
$1BB8	$5005	    			MOVF	STACK_5, W, 0
$1BBA	$A0D8	    			BTFSS	STATUS, C, 0
$1BBC	$3C05	    			INCFSZ	STACK_5, W, 0
$1BBE	$5E09	    			SUBWF	STACK_9, F, 0
$1BC0	$EFE7	F00D			GOTO	$+6
$1BC4	$2608	    			ADDWF	STACK_8, F, 0
$1BC6	$5005	    			MOVF	STACK_5, W, 0
$1BC8	$B0D8	    			BTFSC	STATUS, C, 0
$1BCA	$3C05	    			INCFSZ	STACK_5, W, 0
$1BCC	$2609	    			ADDWF	STACK_9, F, 0
$1BCE	$3600	    			RLCF	STACK_0, F, 0
$1BD0	$3601	    			RLCF	STACK_1, F, 0
$1BD2	$2E0C	    			DECFSZ	STACK_12, F, 0
$1BD4	$EFD4	F00D			GOTO	$-20
$1BD8	$B000	    			BTFSC	STACK_0, 0, 0
$1BDA	$EFF5	F00D			GOTO	$+7
$1BDE	$5004	    			MOVF	STACK_4, W, 0
$1BE0	$2608	    			ADDWF	STACK_8, F, 0
$1BE2	$5005	    			MOVF	STACK_5, W, 0
$1BE4	$B0D8	    			BTFSC	STATUS, C, 0
$1BE6	$3C05	    			INCFSZ	STACK_5, W, 0
$1BE8	$2609	    			ADDWF	STACK_9, F, 0
$1BEA	$0000	    			NOP
$1BEC	$0012	    			RETURN
$191E	$	_Lcd_Cmd:
$191E	$C025	F000			MOVFF	Lcd_main_global_portaddress, STACK_0
$1922	$C026	F001			MOVFF	Lcd_main_global_portaddress+1, STACK_0+1
$1926	$C000	F025			MOVFF	STACK_0, Lcd_main_global_portaddress
$192A	$C001	F026			MOVFF	STACK_0+1, Lcd_main_global_portaddress+1
$192E	$C025	FFE9			MOVFF	lcd_main_global_portaddress+0, FSR0L
$1932	$C026	FFEA			MOVFF	lcd_main_global_portaddress+1, FSR0H
$1936	$5274	    			MOVF	FARG_Lcd_Cmd+0, 1, 0
$1938	$E000	    			BZ	L_Lcd_Cmd_0
$193A	$	L_Lcd_Cmd_0:
$193A	$92EF	    			BCF	INDF0, ___ENABLE, 0
$193C	$90EF	    			BCF	INDF0, ___RS, 0
$193E	$9EEF	    			BCF	INDF0, ___DB7, 0
$1940	$9CEF	    			BCF	INDF0, ___DB6, 0
$1942	$9AEF	    			BCF	INDF0, ___DB5, 0
$1944	$98EF	    			BCF	INDF0, ___DB4, 0
$1946	$BE74	    			BTFSC	FARG_Lcd_Cmd+0, 7, 0
$1948	$8EEF	    			BSF	INDF0, ___DB7, 0
$194A	$BC74	    			BTFSC	FARG_Lcd_Cmd+0, 6, 0
$194C	$8CEF	    			BSF	INDF0, ___DB6, 0
$194E	$BA74	    			BTFSC	FARG_Lcd_Cmd+0, 5, 0
$1950	$8AEF	    			BSF	INDF0, ___DB5, 0
$1952	$B874	    			BTFSC	FARG_Lcd_Cmd+0, 4, 0
$1954	$88EF	    			BSF	INDF0, ___DB4, 0
$1956	$5027	    			MOVF	Lcd_cmd_status, 0, 0
$1958	$0A01	    			XORLW	1
$195A	$E103	    			BNZ	L_Lcd_Cmd_1
$195C	$90EF	    			BCF	INDF0, ___RS, 0
$195E	$EFB2	F00C			GOTO	L_Lcd_Cmd_2
$1962	$	L_Lcd_Cmd_1:
$1962	$80EF	    			BSF	INDF0, ___RS, 0
$1964	$	L_Lcd_Cmd_2:
$1964	$82EF	    			BSF	INDF0, ___ENABLE, 0
$1966	$ECCC	F00E			CALL	_Delay_1us
$196A	$5274	    			MOVF	FARG_Lcd_Cmd+0, 1, 0
$196C	$E000	    			BZ	L_Lcd_Cmd_3
$196E	$	L_Lcd_Cmd_3:
$196E	$92EF	    			BCF	INDF0, ___ENABLE, 0
$1970	$90EF	    			BCF	INDF0, ___RS, 0
$1972	$9EEF	    			BCF	INDF0, ___DB7, 0
$1974	$9CEF	    			BCF	INDF0, ___DB6, 0
$1976	$9AEF	    			BCF	INDF0, ___DB5, 0
$1978	$98EF	    			BCF	INDF0, ___DB4, 0
$197A	$B674	    			BTFSC	FARG_Lcd_Cmd+0, 3, 0
$197C	$8EEF	    			BSF	INDF0, ___DB7, 0
$197E	$B474	    			BTFSC	FARG_Lcd_Cmd+0, 2, 0
$1980	$8CEF	    			BSF	INDF0, ___DB6, 0
$1982	$B274	    			BTFSC	FARG_Lcd_Cmd+0, 1, 0
$1984	$8AEF	    			BSF	INDF0, ___DB5, 0
$1986	$B074	    			BTFSC	FARG_Lcd_Cmd+0, 0, 0
$1988	$88EF	    			BSF	INDF0, ___DB4, 0
$198A	$5027	    			MOVF	Lcd_cmd_status, 0, 0
$198C	$0A01	    			XORLW	1
$198E	$E103	    			BNZ	L_Lcd_Cmd_4
$1990	$90EF	    			BCF	INDF0, ___RS, 0
$1992	$EFCC	F00C			GOTO	L_Lcd_Cmd_5
$1996	$	L_Lcd_Cmd_4:
$1996	$80EF	    			BSF	INDF0, ___RS, 0
$1998	$	L_Lcd_Cmd_5:
$1998	$82EF	    			BSF	INDF0, ___ENABLE, 0
$199A	$ECCC	F00E			CALL	_Delay_1us
$199E	$92EF	    			BCF	INDF0, ___ENABLE, 0
$19A0	$5027	    			MOVF	Lcd_cmd_status, 0, 0
$19A2	$0A01	    			XORLW	1
$19A4	$E103	    			BNZ	L_Lcd_Cmd_6
$19A6	$EC77	F00E			CALL	_Delay_5500us
$19AA	$D002	    			BRA	L_Lcd_Cmd_7
$19AC	$	L_Lcd_Cmd_6:
$19AC	$ECB8	F00E			CALL	_Delay_50us
$19B0	$	L_Lcd_Cmd_7:
$19B0	$0012	    			RETURN
$1AB4	$	_PWM_Change_Duty:
$1AB4	$50CB	    			MOVF	PR2, 0, 0
$1AB6	$0F01	    			ADDLW	1
$1AB8	$6E00	    			MOVWF	STACK_0, 0
$1ABA	$6A01	    			CLRF	STACK_0+1, 0
$1ABC	$0E00	    			MOVLW	0
$1ABE	$2201	    			ADDWFC	STACK_0+1, 1, 0
$1AC0	$C074	F004			MOVFF	FARG_PWM_Change_Duty+0, STACK_4
$1AC4	$0E00	    			MOVLW	0
$1AC6	$6E05	    			MOVWF	STACK_4+1, 0
$1AC8	$EC92	F00D			CALL	_mul_16x16_s
$1ACC	$0E06	    			MOVLW	6
$1ACE	$6E02	    			MOVWF	STACK_2, 0
$1AD0	$C000	F004			MOVFF	STACK_0, STACK_4
$1AD4	$C001	F005			MOVFF	STACK_0+1, STACK_4+1
$1AD8	$5002	    			MOVF	STACK_2, 0, 0
$1ADA	$	L_PWM_Change_Duty_4:
$1ADA	$0100	    			MOVLB	0
$1ADC	$E005	    			BZ	L_PWM_Change_Duty_5
$1ADE	$3205	    			RRCF	STACK_4+1, 1, 0
$1AE0	$3204	    			RRCF	STACK_4, 1, 0
$1AE2	$9E05	    			BCF	STACK_4+1, 7, 0
$1AE4	$0FFF	    			ADDLW	255
$1AE6	$D7F9	    			BRA	L_PWM_Change_Duty_4
$1AE8	$	L_PWM_Change_Duty_5:
$1AE8	$C004	F000			MOVFF	STACK_4, STACK_0
$1AEC	$3600	    			RLCF	STACK_0, 1, 0
$1AEE	$9000	    			BCF	STACK_0, 0, 0
$1AF0	$3600	    			RLCF	STACK_0, 1, 0
$1AF2	$9000	    			BCF	STACK_0, 0, 0
$1AF4	$3600	    			RLCF	STACK_0, 1, 0
$1AF6	$9000	    			BCF	STACK_0, 0, 0
$1AF8	$3600	    			RLCF	STACK_0, 1, 0
$1AFA	$9000	    			BCF	STACK_0, 0, 0
$1AFC	$0E30	    			MOVLW	48
$1AFE	$1400	    			ANDWF	STACK_0, 0, 0
$1B00	$6E03	    			MOVWF	STACK_3, 0
$1B02	$C004	F000			MOVFF	STACK_4, STACK_0
$1B06	$C005	F001			MOVFF	STACK_4+1, STACK_0+1
$1B0A	$3201	    			RRCF	STACK_0+1, 1, 0
$1B0C	$3200	    			RRCF	STACK_0, 1, 0
$1B0E	$9E01	    			BCF	STACK_0+1, 7, 0
$1B10	$3201	    			RRCF	STACK_0+1, 1, 0
$1B12	$3200	    			RRCF	STACK_0, 1, 0
$1B14	$9E01	    			BCF	STACK_0+1, 7, 0
$1B16	$C000	FFBE			MOVFF	STACK_0, CCPR1L
$1B1A	$0E0F	    			MOVLW	15
$1B1C	$16BD	    			ANDWF	CCP1CON, 1, 0
$1B1E	$5003	    			MOVF	STACK_3, 0, 0
$1B20	$12BD	    			IORWF	CCP1CON, 1, 0
$1B22	$0012	    			RETURN
$14F2	$	_Div_16x16_S:
$14F2	$0100	    			MOVLB	0
$14F4	$6A0D	    			CLRF	STACK_13, 0
$14F6	$6A09	    			CLRF	STACK_9, 0
$14F8	$6A08	    			CLRF	STACK_8, 0
$14FA	$5001	    			MOVF	STACK_1, W, 0
$14FC	$1000	    			IORWF	STACK_0, W, 0
$14FE	$B4D8	    			BTFSC	STATUS, Z, 0
$1500	$0C00	    			RETLW	0
$1502	$5001	    			MOVF	STACK_1, W, 0
$1504	$1805	    			XORWF	STACK_5, W, 0
$1506	$6E0A	    			MOVWF	STACK_10, 0
$1508	$BE0A	    			BTFSC	STACK_10, 7, 0
$150A	$1E0D	    			COMF	STACK_13, F, 0
$150C	$6A0B	    			CLRF	STACK_11, 0
$150E	$AE05	    			BTFSS	STACK_5, 7, 0
$1510	$EF8F	F00A			GOTO	$+6
$1514	$1E04	    			COMF	STACK_4, F, 0
$1516	$1E05	    			COMF	STACK_5, F, 0
$1518	$2A04	    			INCF	STACK_4, F, 0
$151A	$B4D8	    			BTFSC	STATUS, Z, 0
$151C	$2A05	    			INCF	STACK_5, F, 0
$151E	$AE01	    			BTFSS	STACK_1, 7, 0
$1520	$EF97	F00A			GOTO	$+6
$1524	$1E00	    			COMF	STACK_0, F, 0
$1526	$1E01	    			COMF	STACK_1, F, 0
$1528	$2A00	    			INCF	STACK_0, F, 0
$152A	$B4D8	    			BTFSC	STATUS, Z, 0
$152C	$2A01	    			INCF	STACK_1, F, 0
$152E	$5001	    			MOVF	STACK_1, W, 0
$1530	$1005	    			IORWF	STACK_5, W, 0
$1532	$6E0A	    			MOVWF	STACK_10, 0
$1534	$BE0A	    			BTFSC	STACK_10, 7, 0
$1536	$EFAF	F00A			GOTO	$+17
$153A	$ECC6	F00D			CALL	_Div_16x16_S_L
$153E	$B00B	    			BTFSC	STACK_11, 0, 0
$1540	$EFC6	F00A			GOTO	$+33
$1544	$AE0D	    			BTFSS	STACK_13, 7, 0
$1546	$0C00	    			RETLW	0
$1548	$1E00	    			COMF	STACK_0, F, 0
$154A	$1E01	    			COMF	STACK_1, F, 0
$154C	$2A00	    			INCF	STACK_0, F, 0
$154E	$B4D8	    			BTFSC	STATUS, Z, 0
$1550	$2A01	    			INCF	STACK_1, F, 0
$1552	$1E08	    			COMF	STACK_8, F, 0
$1554	$1E09	    			COMF	STACK_9, F, 0
$1556	$2A08	    			INCF	STACK_8, F, 0
$1558	$B4D8	    			BTFSC	STATUS, Z, 0
$155A	$2A09	    			INCF	STACK_9, F, 0
$155C	$0C00	    			RETLW	0
$155E	$AE05	    			BTFSS	STACK_5, 7, 0
$1560	$EFC1	F00A			GOTO	$+14
$1564	$BE01	    			BTFSC	STACK_1, 7, 0
$1566	$EFBD	F00A			GOTO	$+8
$156A	$5001	    			MOVF	STACK_1, W, 0
$156C	$6E09	    			MOVWF	STACK_9, 0
$156E	$5000	    			MOVF	STACK_0, W, 0
$1570	$6E08	    			MOVWF	STACK_8, 0
$1572	$6A01	    			CLRF	STACK_1, 0
$1574	$6A00	    			CLRF	STACK_0, 0
$1576	$EFA2	F00A			GOTO	$-23
$157A	$6A01	    			CLRF	STACK_1, 0
$157C	$6A00	    			CLRF	STACK_0, 0
$157E	$2A00	    			INCF	STACK_0, F, 0
$1580	$0C00	    			RETLW	0
$1582	$1E01	    			COMF	STACK_1, F, 0
$1584	$1E00	    			COMF	STACK_0, F, 0
$1586	$2A0B	    			INCF	STACK_11, F, 0
$1588	$EF9D	F00A			GOTO	$-34
$158C	$2A08	    			INCF	STACK_8, F, 0
$158E	$B4D8	    			BTFSC	STATUS, Z, 0
$1590	$2A09	    			INCF	STACK_9, F, 0
$1592	$5004	    			MOVF	STACK_4, W, 0
$1594	$5C08	    			SUBWF	STACK_8, W, 0
$1596	$A4D8	    			BTFSS	STATUS, Z, 0
$1598	$EFA2	F00A			GOTO	$-38
$159C	$5005	    			MOVF	STACK_5, W, 0
$159E	$5C09	    			SUBWF	STACK_9, W, 0
$15A0	$A4D8	    			BTFSS	STATUS, Z, 0
$15A2	$EFA2	F00A			GOTO	$-42
$15A6	$6A09	    			CLRF	STACK_9, 0
$15A8	$6A08	    			CLRF	STACK_8, 0
$15AA	$2A00	    			INCF	STACK_0, F, 0
$15AC	$B4D8	    			BTFSC	STATUS, Z, 0
$15AE	$2A01	    			INCF	STACK_1, F, 0
$15B0	$AE01	    			BTFSS	STACK_1, 7, 0
$15B2	$EFA2	F00A			GOTO	$-49
$15B6	$0000	    			NOP
$15B8	$0CFF	    			RETLW	255
$15BA	$0012	    			RETURN
$1D46	$	_SETFOV32:
$1D46	$0100	    			MOVLB	0
$1D48	$820B	    			BSF	STACK_11, 1, 0
$1D4A	$AE0B	    			BTFSS	STACK_11, 7, 0
$1D4C	$EFAE	F00E			GOTO	SETFOV32EEE
$1D50	$6803	    			SETF	STACK_3, 0
$1D52	$6802	    			SETF	STACK_2, 0
$1D54	$6801	    			SETF	STACK_1, 0
$1D56	$6800	    			SETF	STACK_0, 0
$1D58	$360A	    			RLCF	STACK_10, F, 0
$1D5A	$3202	    			RRCF	STACK_2, F, 0
$1D5C	$	SETFOV32EEE:
$1D5C	$0EFF	    			MOVLW	0xFF
$1D5E	$0012	    			RETURN
$1D0C	$	_SETIOV3224:
$1D0C	$0100	    			MOVLB	0
$1D0E	$800B	    			BSF	STACK_11, 0, 0
$1D10	$AE0B	    			BTFSS	STACK_11, 7, 0
$1D12	$EF93	F00E			GOTO	SETIOV3224EEE
$1D16	$6A02	    			CLRF	STACK_2, 0
$1D18	$AE0A	    			BTFSS	STACK_10, 7, 0
$1D1A	$0EFF	    			MOVLW	0xFF
$1D1C	$6E02	    			MOVWF	STACK_2, 0
$1D1E	$6E01	    			MOVWF	STACK_1, 0
$1D20	$6E00	    			MOVWF	STACK_0, 0
$1D22	$360A	    			RLCF	STACK_10, F, 0
$1D24	$3202	    			RRCF	STACK_2, F, 0
$1D26	$	SETIOV3224EEE:
$1D26	$0EFF	    			MOVLW	0xFF
$1D28	$0012	    			RETURN
$1D86	$	_PWM_Start:
$1D86	$9494	    			BCF	TRISC, 2, 0
$1D88	$84CA	    			BSF	T2CON, 2, 0
$1D8A	$0E0C	    			MOVLW	12
$1D8C	$12BD	    			IORWF	CCP1CON, 1, 0
$1D8E	$0012	    			RETURN
$117A	$	_Lcd_Init:
$117A	$C06E	F025			MOVFF	FARG_Lcd_Init+0, Lcd_main_global_portaddress
$117E	$C06F	F026			MOVFF	FARG_Lcd_Init+1, Lcd_main_global_portaddress+1
$1182	$C025	FFE1			MOVFF	lcd_main_global_portaddress+0, FSR1L
$1186	$C026	FFE2			MOVFF	lcd_main_global_portaddress+1, FSR1H
$118A	$0E12	    			MOVLW	18
$118C	$26E1	    			ADDWF	FSR1L, F, 0
$118E	$92E7	    			BCF	INDF1, ___ENABLE, 0
$1190	$90E7	    			BCF	INDF1, ___RS, 0
$1192	$94E7	    			BCF	INDF1, ___RW, 0
$1194	$9EE7	    			BCF	INDF1, ___DB7, 0
$1196	$9CE7	    			BCF	INDF1, ___DB6, 0
$1198	$9AE7	    			BCF	INDF1, ___DB5, 0
$119A	$98E7	    			BCF	INDF1, ___DB4, 0
$119C	$0E12	    			MOVLW	18
$119E	$5EE1	    			SUBWF	FSR1L, F, 0
$11A0	$92E7	    			BCF	INDF1, ___ENABLE, 0
$11A2	$90E7	    			BCF	INDF1, ___RS, 0
$11A4	$94E7	    			BCF	INDF1, ___RW, 0
$11A6	$9EE7	    			BCF	INDF1, ___DB7, 0
$11A8	$9CE7	    			BCF	INDF1, ___DB6, 0
$11AA	$9AE7	    			BCF	INDF1, ___DB5, 0
$11AC	$98E7	    			BCF	INDF1, ___DB4, 0
$11AE	$EC77	F00E			CALL	_Delay_5500us
$11B2	$8AE7	    			BSF	INDF1, ___DB5, 0
$11B4	$88E7	    			BSF	INDF1, ___DB4, 0
$11B6	$82E7	    			BSF	INDF1, ___ENABLE, 0
$11B8	$ECCC	F00E			CALL	_Delay_1us
$11BC	$92E7	    			BCF	INDF1, ___ENABLE, 0
$11BE	$EC77	F00E			CALL	_Delay_5500us
$11C2	$8AE7	    			BSF	INDF1, ___DB5, 0
$11C4	$88E7	    			BSF	INDF1, ___DB4, 0
$11C6	$82E7	    			BSF	INDF1, ___ENABLE, 0
$11C8	$ECCC	F00E			CALL	_Delay_1us
$11CC	$92E7	    			BCF	INDF1, ___ENABLE, 0
$11CE	$ECB8	F00E			CALL	_Delay_50us
$11D2	$ECB8	F00E			CALL	_Delay_50us
$11D6	$8AE7	    			BSF	INDF1, ___DB5, 0
$11D8	$88E7	    			BSF	INDF1, ___DB4, 0
$11DA	$82E7	    			BSF	INDF1, ___ENABLE, 0
$11DC	$ECCC	F00E			CALL	_Delay_1us
$11E0	$92E7	    			BCF	INDF1, ___ENABLE, 0
$11E2	$EC77	F00E			CALL	_Delay_5500us
$11E6	$8AE7	    			BSF	INDF1, ___DB5, 0
$11E8	$98E7	    			BCF	INDF1, ___DB4, 0
$11EA	$82E7	    			BSF	INDF1, ___ENABLE, 0
$11EC	$ECCC	F00E			CALL	_Delay_1us
$11F0	$92E7	    			BCF	INDF1, ___ENABLE, 0
$11F2	$ECB8	F00E			CALL	_Delay_50us
$11F6	$8AE7	    			BSF	INDF1, ___DB5, 0
$11F8	$98E7	    			BCF	INDF1, ___DB4, 0
$11FA	$82E7	    			BSF	INDF1, ___ENABLE, 0
$11FC	$ECCC	F00E			CALL	_Delay_1us
$1200	$92E7	    			BCF	INDF1, ___ENABLE, 0
$1202	$8EE7	    			BSF	INDF1, ___DB7, 0
$1204	$9CE7	    			BCF	INDF1, ___DB6, 0
$1206	$82E7	    			BSF	INDF1, ___ENABLE, 0
$1208	$ECCC	F00E			CALL	_Delay_1us
$120C	$92E7	    			BCF	INDF1, ___ENABLE, 0
$120E	$ECB8	F00E			CALL	_Delay_50us
$1212	$0E00	    			MOVLW	0
$1214	$6EE7	    			MOVWF	INDF1, 0
$1216	$82E7	    			BSF	INDF1, ___ENABLE, 0
$1218	$ECCC	F00E			CALL	_Delay_1us
$121C	$92E7	    			BCF	INDF1, ___ENABLE, 0
$121E	$8EE7	    			BSF	INDF1, ___DB7, 0
$1220	$8CE7	    			BSF	INDF1, ___DB6, 0
$1222	$8AE7	    			BSF	INDF1, ___DB5, 0
$1224	$88E7	    			BSF	INDF1, ___DB4, 0
$1226	$82E7	    			BSF	INDF1, ___ENABLE, 0
$1228	$ECCC	F00E			CALL	_Delay_1us
$122C	$92E7	    			BCF	INDF1, ___ENABLE, 0
$122E	$ECB8	F00E			CALL	_Delay_50us
$1232	$0E00	    			MOVLW	0
$1234	$6EE7	    			MOVWF	INDF1, 0
$1236	$82E7	    			BSF	INDF1, ___ENABLE, 0
$1238	$ECCC	F00E			CALL	_Delay_1us
$123C	$92E7	    			BCF	INDF1, ___ENABLE, 0
$123E	$88E7	    			BSF	INDF1, ___DB4, 0
$1240	$82E7	    			BSF	INDF1, ___ENABLE, 0
$1242	$ECCC	F00E			CALL	_Delay_1us
$1246	$92E7	    			BCF	INDF1, ___ENABLE, 0
$1248	$EC77	F00E			CALL	_Delay_5500us
$124C	$0E00	    			MOVLW	0
$124E	$6EE7	    			MOVWF	INDF1, 0
$1250	$82E7	    			BSF	INDF1, ___ENABLE, 0
$1252	$ECCC	F00E			CALL	_Delay_1us
$1256	$92E7	    			BCF	INDF1, ___ENABLE, 0
$1258	$8CE7	    			BSF	INDF1, ___DB6, 0
$125A	$8AE7	    			BSF	INDF1, ___DB5, 0
$125C	$82E7	    			BSF	INDF1, ___ENABLE, 0
$125E	$ECCC	F00E			CALL	_Delay_1us
$1262	$92E7	    			BCF	INDF1, ___ENABLE, 0
$1264	$ECB8	F00E			CALL	_Delay_50us
$1268	$0E01	    			MOVLW	1
$126A	$6E27	    			MOVWF	Lcd_cmd_status, 0
$126C	$0012	    			RETURN
$1D90	$	_PWM_Init:
$1D90	$6ABE	    			CLRF	CCPR1L, 0
$1D92	$98BD	    			BCF	CCP1CON, 4, 0
$1D94	$9ABD	    			BCF	CCP1CON, 5, 0
$1D96	$0012	    			RETURN
$19B2	$	_Lcd_Out:
$19B2	$D00F	    			BRA	L_Lcd_Out_17
$19B4	$	L_Lcd_Out_19:
$19B4	$0E80	    			MOVLW	128
$19B6	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$19B8	$D019	    			BRA	L_Lcd_Out_18
$19BA	$	L_Lcd_Out_20:
$19BA	$0EC0	    			MOVLW	192
$19BC	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$19BE	$D016	    			BRA	L_Lcd_Out_18
$19C0	$	L_Lcd_Out_21:
$19C0	$0E94	    			MOVLW	148
$19C2	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$19C4	$D013	    			BRA	L_Lcd_Out_18
$19C6	$	L_Lcd_Out_22:
$19C6	$0ED4	    			MOVLW	212
$19C8	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$19CA	$D010	    			BRA	L_Lcd_Out_18
$19CC	$	L_Lcd_Out_23:
$19CC	$0E80	    			MOVLW	128
$19CE	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$19D0	$D00D	    			BRA	L_Lcd_Out_18
$19D2	$	L_Lcd_Out_17:
$19D2	$506E	    			MOVF	FARG_Lcd_Out+0, 0, 0
$19D4	$0A01	    			XORLW	1
$19D6	$E0EE	    			BZ	L_Lcd_Out_19
$19D8	$506E	    			MOVF	FARG_Lcd_Out+0, 0, 0
$19DA	$0A02	    			XORLW	2
$19DC	$E0EE	    			BZ	L_Lcd_Out_20
$19DE	$506E	    			MOVF	FARG_Lcd_Out+0, 0, 0
$19E0	$0A03	    			XORLW	3
$19E2	$E0EE	    			BZ	L_Lcd_Out_21
$19E4	$506E	    			MOVF	FARG_Lcd_Out+0, 0, 0
$19E6	$0A04	    			XORLW	4
$19E8	$E0EE	    			BZ	L_Lcd_Out_22
$19EA	$D7F0	    			BRA	L_Lcd_Out_23
$19EC	$	L_Lcd_Out_18:
$19EC	$046F	    			DECF	FARG_Lcd_Out+1, 0, 0
$19EE	$6E00	    			MOVWF	STACK_0, 0
$19F0	$506E	    			MOVF	FARG_Lcd_Out+0, 0, 0
$19F2	$2600	    			ADDWF	STACK_0, 1, 0
$19F4	$C000	F06E			MOVFF	STACK_0, FARG_Lcd_Out+0
$19F8	$C000	F074			MOVFF	STACK_0, FARG_Lcd_Cmd+0
$19FC	$EC8F	F00C			CALL	_Lcd_Cmd
$1A00	$6A27	    			CLRF	Lcd_cmd_status, 0
$1A02	$6A72	    			CLRF	Lcd_Out_i_L0, 0
$1A04	$6A73	    			CLRF	Lcd_Out_i_L0+1, 0
$1A06	$	L_Lcd_Out_24:
$1A06	$5072	    			MOVF	Lcd_Out_i_L0, 0, 0
$1A08	$2470	    			ADDWF	FARG_Lcd_Out+2, 0, 0
$1A0A	$6EE9	    			MOVWF	FSR0L, 0
$1A0C	$5073	    			MOVF	Lcd_Out_i_L0+1, 0, 0
$1A0E	$2071	    			ADDWFC	FARG_Lcd_Out+3, 0, 0
$1A10	$6EEA	    			MOVWF	FSR0L+1, 0
$1A12	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$1A16	$5200	    			MOVF	STACK_0, 1, 0
$1A18	$E00D	    			BZ	L_Lcd_Out_25
$1A1A	$5072	    			MOVF	Lcd_Out_i_L0, 0, 0
$1A1C	$2470	    			ADDWF	FARG_Lcd_Out+2, 0, 0
$1A1E	$6EE9	    			MOVWF	FSR0L, 0
$1A20	$5073	    			MOVF	Lcd_Out_i_L0+1, 0, 0
$1A22	$2071	    			ADDWFC	FARG_Lcd_Out+3, 0, 0
$1A24	$6EEA	    			MOVWF	FSR0L+1, 0
$1A26	$CFEE	F074			MOVFF	POSTINC0, FARG_Lcd_Cmd+0
$1A2A	$EC8F	F00C			CALL	_Lcd_Cmd
$1A2E	$4A72	    			INFSNZ	Lcd_Out_i_L0, 1, 0
$1A30	$2A73	    			INCF	Lcd_Out_i_L0+1, 1, 0
$1A32	$D7E9	    			BRA	L_Lcd_Out_24
$1A34	$	L_Lcd_Out_25:
$1A34	$0E01	    			MOVLW	1
$1A36	$6E27	    			MOVWF	Lcd_cmd_status, 0
$1A38	$0012	    			RETURN
$1888	$	_acelerar:
;display.c,24 :: 			void acelerar(int pwmConcreto)
;display.c,29 :: 			int cincoporciento = (pwmConcreto - auxpwm) *5/100;
$1888	$5028	    			MOVF	_auxpwm, 0, 0
$188A	$5C6E	    			SUBWF	FARG_acelerar+0, 0, 0
$188C	$6E00	    			MOVWF	STACK_0, 0
$188E	$5029	    			MOVF	_auxpwm+1, 0, 0
$1890	$586F	    			SUBWFB	FARG_acelerar+1, 0, 0
$1892	$6E01	    			MOVWF	STACK_0+1, 0
$1894	$0E05	    			MOVLW	5
$1896	$6E04	    			MOVWF	STACK_4, 0
$1898	$0E00	    			MOVLW	0
$189A	$6E05	    			MOVWF	STACK_4+1, 0
$189C	$EC92	F00D			CALL	_mul_16x16_s
$18A0	$0E64	    			MOVLW	100
$18A2	$6E04	    			MOVWF	STACK_4, 0
$18A4	$0E00	    			MOVLW	0
$18A6	$6E05	    			MOVWF	STACK_4+1, 0
$18A8	$EC79	F00A			CALL	_div_16x16_s
$18AC	$C000	F070			MOVFF	STACK_0, acelerar_cincoporciento_L0
$18B0	$C001	F071			MOVFF	STACK_0+1, acelerar_cincoporciento_L0+1
;display.c,30 :: 			if (cincoporciento ==0) cincoporciento = 5; //a veces la division de arriba puede dar cero y se cuelga
$18B4	$0E00	    			MOVLW	0
$18B6	$1801	    			XORWF	STACK_0+1, 0, 0
$18B8	$E102	    			BNZ	L_acelerar_77
$18BA	$0E00	    			MOVLW	0
$18BC	$1800	    			XORWF	STACK_0, 0, 0
$18BE	$	L_acelerar_77:
$18BE	$0100	    			MOVLB	0
$18C0	$E104	    			BNZ	L_acelerar_2
$18C2	$0E05	    			MOVLW	5
$18C4	$6E70	    			MOVWF	acelerar_cincoporciento_L0, 0
$18C6	$0E00	    			MOVLW	0
$18C8	$6E71	    			MOVWF	acelerar_cincoporciento_L0+1, 0
$18CA	$	L_acelerar_2:
;display.c,32 :: 			while (auxpwm < (pwmConcreto- cincoporciento))
$18CA	$	L_acelerar_3:
$18CA	$0100	    			MOVLB	0
$18CC	$5070	    			MOVF	acelerar_cincoporciento_L0, 0, 0
$18CE	$5C6E	    			SUBWF	FARG_acelerar+0, 0, 0
$18D0	$6E02	    			MOVWF	STACK_2, 0
$18D2	$5071	    			MOVF	acelerar_cincoporciento_L0+1, 0, 0
$18D4	$586F	    			SUBWFB	FARG_acelerar+1, 0, 0
$18D6	$6E03	    			MOVWF	STACK_2+1, 0
$18D8	$0E80	    			MOVLW	128
$18DA	$1829	    			XORWF	_auxpwm+1, 0, 0
$18DC	$6E00	    			MOVWF	STACK_0, 0
$18DE	$0E80	    			MOVLW	128
$18E0	$1803	    			XORWF	STACK_2+1, 0, 0
$18E2	$5C00	    			SUBWF	STACK_0, 0, 0
$18E4	$E102	    			BNZ	L_acelerar_78
$18E6	$5002	    			MOVF	STACK_2, 0, 0
$18E8	$5C28	    			SUBWF	_auxpwm, 0, 0
$18EA	$	L_acelerar_78:
$18EA	$0100	    			MOVLB	0
$18EC	$E20F	    			BC	L_acelerar_4
;display.c,33 :: 			{ auxpwm+=cincoporciento;
$18EE	$5070	    			MOVF	acelerar_cincoporciento_L0, 0, 0
$18F0	$2428	    			ADDWF	_auxpwm, 0, 0
$18F2	$6E00	    			MOVWF	STACK_0, 0
$18F4	$5071	    			MOVF	acelerar_cincoporciento_L0+1, 0, 0
$18F6	$2029	    			ADDWFC	_auxpwm+1, 0, 0
$18F8	$6E01	    			MOVWF	STACK_0+1, 0
$18FA	$C000	F028			MOVFF	STACK_0, _auxpwm
$18FE	$C001	F029			MOVFF	STACK_0+1, _auxpwm+1
;display.c,34 :: 			Pwm_Change_Duty(auxpwm);
$1902	$C000	F074			MOVFF	STACK_0, FARG_PWM_Change_Duty+0
$1906	$EC5A	F00D			CALL	_PWM_Change_Duty
;display.c,37 :: 			}
$190A	$D7DF	    			BRA	L_acelerar_3
$190C	$	L_acelerar_4:
;display.c,38 :: 			auxpwm = pwmConcreto;
$190C	$C06E	F028			MOVFF	FARG_acelerar+0, _auxpwm
$1910	$C06F	F029			MOVFF	FARG_acelerar+1, _auxpwm+1
;display.c,39 :: 			Pwm_Change_Duty(auxpwm);
$1914	$C06E	F074			MOVFF	FARG_acelerar+0, FARG_PWM_Change_Duty+0
$1918	$EC5A	F00D			CALL	_PWM_Change_Duty
;display.c,43 :: 			}
$191C	$0012	    			RETURN
$1736	$	_Div_8x8_S:
$1736	$0100	    			MOVLB	0
$1738	$6A0D	    			CLRF	STACK_13, 0
$173A	$6A08	    			CLRF	STACK_8, 0
$173C	$5000	    			MOVF	STACK_0, W, 0
$173E	$B4D8	    			BTFSC	STATUS, Z, 0
$1740	$0C00	    			RETLW	0x00
$1742	$1804	    			XORWF	STACK_4, W, 0
$1744	$6E0A	    			MOVWF	STACK_10, 0
$1746	$BE0A	    			BTFSC	STACK_10, 7, 0
$1748	$1E0D	    			COMF	STACK_13, F, 0
$174A	$6A0B	    			CLRF	STACK_11, 0
$174C	$AE04	    			BTFSS	STACK_4, 7, 0
$174E	$EFAB	F00B			GOTO	$+3
$1752	$1E04	    			COMF	STACK_4, F, 0
$1754	$2A04	    			INCF	STACK_4, F, 0
$1756	$A000	    			BTFSS	STACK_0, 0, 0
$1758	$EFB0	F00B			GOTO	$+3
$175C	$1E00	    			COMF	STACK_0, F, 0
$175E	$2A00	    			INCF	STACK_0, F, 0
$1760	$5000	    			MOVF	STACK_0, W, 0
$1762	$1004	    			IORWF	STACK_4, W, 0
$1764	$6E0A	    			MOVWF	STACK_10, 0
$1766	$BE0A	    			BTFSC	STACK_10, 7, 0
$1768	$EFD7	F00B			GOTO	$+32
$176C	$5004	    			MOVF	STACK_4, W, 0
$176E	$5E08	    			SUBWF	STACK_8, F, 0
$1770	$3600	    			RLCF	STACK_0, F, 0
$1772	$3400	    			RLCF	STACK_0, W, 0
$1774	$3608	    			RLCF	STACK_8, F, 0
$1776	$5004	    			MOVF	STACK_4, W, 0
$1778	$2608	    			ADDWF	STACK_8, F, 0
$177A	$3600	    			RLCF	STACK_0, F, 0
$177C	$0E06	    			MOVLW	6
$177E	$6E0C	    			MOVWF	STACK_12, 0
$1780	$3400	    			RLCF	STACK_0, W, 0
$1782	$3608	    			RLCF	STACK_8, F, 0
$1784	$5004	    			MOVF	STACK_4, W, 0
$1786	$B000	    			BTFSC	STACK_0, 0, 0
$1788	$5E08	    			SUBWF	STACK_8, F, 0
$178A	$A000	    			BTFSS	STACK_0, 0, 0
$178C	$2608	    			ADDWF	STACK_8, F, 0
$178E	$3600	    			RLCF	STACK_0, F, 0
$1790	$2E0C	    			DECFSZ	STACK_12, F, 0
$1792	$EFC0	F00B			GOTO	$-9
$1796	$A000	    			BTFSS	STACK_0, 0, 0
$1798	$2608	    			ADDWF	STACK_8, F, 0
$179A	$B00B	    			BTFSC	STACK_11, 0, 0
$179C	$EFE9	F00B			GOTO	$+22
$17A0	$AE0D	    			BTFSS	STACK_13, 7, 0
$17A2	$0C00	    			RETLW	0x00
$17A4	$1E00	    			COMF	STACK_0, F, 0
$17A6	$2A00	    			INCF	STACK_0, F, 0
$17A8	$1E08	    			COMF	STACK_8, F, 0
$17AA	$2A08	    			INCF	STACK_8, F, 0
$17AC	$0C00	    			RETLW	0x00
$17AE	$AE04	    			BTFSS	STACK_4, 7, 0
$17B0	$EFE5	F00B			GOTO	$+10
$17B4	$BE00	    			BTFSC	STACK_0, 7, 0
$17B6	$EFE2	F00B			GOTO	$+5
$17BA	$5000	    			MOVF	STACK_0, W, 0
$17BC	$6E08	    			MOVWF	STACK_8, 0
$17BE	$6A00	    			CLRF	STACK_0, 0
$17C0	$EFD0	F00B			GOTO	$-14
$17C4	$6A00	    			CLRF	STACK_0, 0
$17C6	$2A00	    			INCF	STACK_0, F, 0
$17C8	$0C00	    			RETLW	0x00
$17CA	$1E00	    			COMF	STACK_0, F, 0
$17CC	$2A0B	    			INCF	STACK_11, F, 0
$17CE	$EFB6	F00B			GOTO	$-44
$17D2	$2A08	    			INCF	STACK_8, F, 0
$17D4	$5004	    			MOVF	STACK_4, W, 0
$17D6	$5C08	    			SUBWF	STACK_8, W, 0
$17D8	$A4D8	    			BTFSS	STATUS, Z, 0
$17DA	$EFD0	F00B			GOTO	$-25
$17DE	$6A08	    			CLRF	STACK_8, 0
$17E0	$2A00	    			INCF	STACK_0, F, 0
$17E2	$AE00	    			BTFSS	STACK_0, 7, 0
$17E4	$EFD0	F00B			GOTO	$-29
$17E8	$0CFF	    			RETLW	0xFF
$17EA	$0012	    			RETURN
$15BC	$	_WordToStr:
$15BC	$C070	FFE1			MOVFF	FARG_WordToStr+2, FSR1L
$15C0	$C071	FFE2			MOVFF	FARG_WordToStr+3, FSR1H
$15C4	$0E20	    			MOVLW	32
$15C6	$6EE6	    			MOVWF	POSTINC1, 0
$15C8	$0E01	    			MOVLW	1
$15CA	$2470	    			ADDWF	FARG_WordToStr+2, 0, 0
$15CC	$6EE1	    			MOVWF	FSR1L, 0
$15CE	$0E00	    			MOVLW	0
$15D0	$2071	    			ADDWFC	FARG_WordToStr+3, 0, 0
$15D2	$6EE2	    			MOVWF	FSR1L+1, 0
$15D4	$0E20	    			MOVLW	32
$15D6	$6EE6	    			MOVWF	POSTINC1, 0
$15D8	$0E02	    			MOVLW	2
$15DA	$2470	    			ADDWF	FARG_WordToStr+2, 0, 0
$15DC	$6EE1	    			MOVWF	FSR1L, 0
$15DE	$0E00	    			MOVLW	0
$15E0	$2071	    			ADDWFC	FARG_WordToStr+3, 0, 0
$15E2	$6EE2	    			MOVWF	FSR1L+1, 0
$15E4	$0E20	    			MOVLW	32
$15E6	$6EE6	    			MOVWF	POSTINC1, 0
$15E8	$0E03	    			MOVLW	3
$15EA	$2470	    			ADDWF	FARG_WordToStr+2, 0, 0
$15EC	$6EE1	    			MOVWF	FSR1L, 0
$15EE	$0E00	    			MOVLW	0
$15F0	$2071	    			ADDWFC	FARG_WordToStr+3, 0, 0
$15F2	$6EE2	    			MOVWF	FSR1L+1, 0
$15F4	$0E20	    			MOVLW	32
$15F6	$6EE6	    			MOVWF	POSTINC1, 0
$15F8	$0E04	    			MOVLW	4
$15FA	$2470	    			ADDWF	FARG_WordToStr+2, 0, 0
$15FC	$6EE1	    			MOVWF	FSR1L, 0
$15FE	$0E00	    			MOVLW	0
$1600	$2071	    			ADDWFC	FARG_WordToStr+3, 0, 0
$1602	$6EE2	    			MOVWF	FSR1L+1, 0
$1604	$0E30	    			MOVLW	48
$1606	$6EE6	    			MOVWF	POSTINC1, 0
$1608	$0E05	    			MOVLW	5
$160A	$2470	    			ADDWF	FARG_WordToStr+2, 0, 0
$160C	$6EE1	    			MOVWF	FSR1L, 0
$160E	$0E00	    			MOVLW	0
$1610	$2071	    			ADDWFC	FARG_WordToStr+3, 0, 0
$1612	$6EE2	    			MOVWF	FSR1L+1, 0
$1614	$6AE6	    			CLRF	POSTINC1, 0
$1616	$0E04	    			MOVLW	4
$1618	$6E72	    			MOVWF	WordToStr_pos_L0, 0
$161A	$	L_WordToStr_4:
$161A	$0E00	    			MOVLW	0
$161C	$6E00	    			MOVWF	STACK_0, 0
$161E	$506F	    			MOVF	FARG_WordToStr+1, 0, 0
$1620	$5C00	    			SUBWF	STACK_0, 0, 0
$1622	$E102	    			BNZ	L_WordToStr_51
$1624	$506E	    			MOVF	FARG_WordToStr+0, 0, 0
$1626	$0800	    			SUBLW	0
$1628	$	L_WordToStr_51:
$1628	$E228	    			BC	L_WordToStr_5
$162A	$5072	    			MOVF	WordToStr_pos_L0, 0, 0
$162C	$2470	    			ADDWF	FARG_WordToStr+2, 0, 0
$162E	$6EE1	    			MOVWF	FSR1L, 0
$1630	$0E00	    			MOVLW	0
$1632	$2071	    			ADDWFC	FARG_WordToStr+3, 0, 0
$1634	$6EE2	    			MOVWF	FSR1L+1, 0
$1636	$0E0A	    			MOVLW	10
$1638	$6E04	    			MOVWF	STACK_4, 0
$163A	$0E00	    			MOVLW	0
$163C	$6E05	    			MOVWF	STACK_4+1, 0
$163E	$C06E	F000			MOVFF	FARG_WordToStr+0, STACK_0
$1642	$C06F	F001			MOVFF	FARG_WordToStr+1, STACK_0+1
$1646	$EC43	F00E			CALL	_div_16x16_u
$164A	$C008	F000			MOVFF	STACK_8, STACK_0
$164E	$C009	F001			MOVFF	STACK_9, STACK_1
$1652	$0E30	    			MOVLW	48
$1654	$2600	    			ADDWF	STACK_0, 1, 0
$1656	$C000	FFE6			MOVFF	STACK_0, POSTINC1
$165A	$0E0A	    			MOVLW	10
$165C	$6E04	    			MOVWF	STACK_4, 0
$165E	$0E00	    			MOVLW	0
$1660	$6E05	    			MOVWF	STACK_4+1, 0
$1662	$C06E	F000			MOVFF	FARG_WordToStr+0, STACK_0
$1666	$C06F	F001			MOVFF	FARG_WordToStr+1, STACK_0+1
$166A	$EC43	F00E			CALL	_div_16x16_u
$166E	$C000	F06E			MOVFF	STACK_0, FARG_WordToStr+0
$1672	$C001	F06F			MOVFF	STACK_0+1, FARG_WordToStr+1
$1676	$0672	    			DECF	WordToStr_pos_L0, 1, 0
$1678	$D7D0	    			BRA	L_WordToStr_4
$167A	$	L_WordToStr_5:
$167A	$0012	    			RETURN
$17EC	$	_decelerar:
;display.c,46 :: 			void decelerar(int pwmConcreto)
;display.c,52 :: 			int cincoporciento = ((auxpwm - pwmConcreto) *2/100);
$17EC	$506E	    			MOVF	FARG_decelerar+0, 0, 0
$17EE	$5C28	    			SUBWF	_auxpwm, 0, 0
$17F0	$6E00	    			MOVWF	STACK_0, 0
$17F2	$506F	    			MOVF	FARG_decelerar+1, 0, 0
$17F4	$5829	    			SUBWFB	_auxpwm+1, 0, 0
$17F6	$6E01	    			MOVWF	STACK_0+1, 0
$17F8	$0E01	    			MOVLW	1
$17FA	$6E04	    			MOVWF	STACK_4, 0
$17FC	$5004	    			MOVF	STACK_4, 0, 0
$17FE	$	L_decelerar_79:
$17FE	$E005	    			BZ	L_decelerar_80
$1800	$3600	    			RLCF	STACK_0, 1, 0
$1802	$9000	    			BCF	STACK_0, 0, 0
$1804	$3601	    			RLCF	STACK_0+1, 1, 0
$1806	$0FFF	    			ADDLW	255
$1808	$D7FA	    			BRA	L_decelerar_79
$180A	$	L_decelerar_80:
$180A	$0E64	    			MOVLW	100
$180C	$6E04	    			MOVWF	STACK_4, 0
$180E	$0E00	    			MOVLW	0
$1810	$6E05	    			MOVWF	STACK_4+1, 0
$1812	$EC79	F00A			CALL	_div_16x16_s
$1816	$C000	F070			MOVFF	STACK_0, decelerar_cincoporciento_L0
$181A	$C001	F071			MOVFF	STACK_0+1, decelerar_cincoporciento_L0+1
;display.c,53 :: 			if (cincoporciento == 0) cincoporciento = 5; //a veces la division de arriba puede dar cero
$181E	$0E00	    			MOVLW	0
$1820	$1801	    			XORWF	STACK_0+1, 0, 0
$1822	$E102	    			BNZ	L_decelerar_81
$1824	$0E00	    			MOVLW	0
$1826	$1800	    			XORWF	STACK_0, 0, 0
$1828	$	L_decelerar_81:
$1828	$0100	    			MOVLB	0
$182A	$E104	    			BNZ	L_decelerar_5
$182C	$0E05	    			MOVLW	5
$182E	$6E70	    			MOVWF	decelerar_cincoporciento_L0, 0
$1830	$0E00	    			MOVLW	0
$1832	$6E71	    			MOVWF	decelerar_cincoporciento_L0+1, 0
$1834	$	L_decelerar_5:
;display.c,55 :: 			while(auxpwm > (pwmConcreto+cincoporciento))
$1834	$	L_decelerar_6:
$1834	$0100	    			MOVLB	0
$1836	$5070	    			MOVF	decelerar_cincoporciento_L0, 0, 0
$1838	$246E	    			ADDWF	FARG_decelerar+0, 0, 0
$183A	$6E02	    			MOVWF	STACK_2, 0
$183C	$5071	    			MOVF	decelerar_cincoporciento_L0+1, 0, 0
$183E	$206F	    			ADDWFC	FARG_decelerar+1, 0, 0
$1840	$6E03	    			MOVWF	STACK_2+1, 0
$1842	$0E80	    			MOVLW	128
$1844	$1803	    			XORWF	STACK_2+1, 0, 0
$1846	$6E00	    			MOVWF	STACK_0, 0
$1848	$0E80	    			MOVLW	128
$184A	$1829	    			XORWF	_auxpwm+1, 0, 0
$184C	$5C00	    			SUBWF	STACK_0, 0, 0
$184E	$E102	    			BNZ	L_decelerar_82
$1850	$5028	    			MOVF	_auxpwm, 0, 0
$1852	$5C02	    			SUBWF	STACK_2, 0, 0
$1854	$	L_decelerar_82:
$1854	$0100	    			MOVLB	0
$1856	$E20F	    			BC	L_decelerar_7
;display.c,57 :: 			auxpwm -= cincoporciento;
$1858	$5070	    			MOVF	decelerar_cincoporciento_L0, 0, 0
$185A	$5C28	    			SUBWF	_auxpwm, 0, 0
$185C	$6E00	    			MOVWF	STACK_0, 0
$185E	$5071	    			MOVF	decelerar_cincoporciento_L0+1, 0, 0
$1860	$5829	    			SUBWFB	_auxpwm+1, 0, 0
$1862	$6E01	    			MOVWF	STACK_0+1, 0
$1864	$C000	F028			MOVFF	STACK_0, _auxpwm
$1868	$C001	F029			MOVFF	STACK_0+1, _auxpwm+1
;display.c,58 :: 			Pwm_Change_Duty(auxpwm);
$186C	$C000	F074			MOVFF	STACK_0, FARG_PWM_Change_Duty+0
$1870	$EC5A	F00D			CALL	_PWM_Change_Duty
;display.c,62 :: 			}
$1874	$D7DF	    			BRA	L_decelerar_6
$1876	$	L_decelerar_7:
;display.c,64 :: 			auxpwm = pwmConcreto;
$1876	$C06E	F028			MOVFF	FARG_decelerar+0, _auxpwm
$187A	$C06F	F029			MOVFF	FARG_decelerar+1, _auxpwm+1
;display.c,67 :: 			Pwm_Change_Duty(auxpwm);
$187E	$C06E	F074			MOVFF	FARG_decelerar+0, FARG_PWM_Change_Duty+0
$1882	$EC5A	F00D			CALL	_PWM_Change_Duty
;display.c,70 :: 			}
$1886	$0012	    			RETURN
$1422	$	_Compare_Double:
$1422	$0100	    			MOVLB	0
$1424	$6A0A	    			CLRF	STACK_10, 0
$1426	$5003	    			MOVF	STACK_3, W, 0
$1428	$A4D8	    			BTFSS	STATUS, Z, 0
$142A	$800A	    			BSF	STACK_10, 0, 0
$142C	$5007	    			MOVF	STACK_7, W, 0
$142E	$A4D8	    			BTFSS	STATUS, Z, 0
$1430	$820A	    			BSF	STACK_10, 1, 0
$1432	$500A	    			MOVF	STACK_10, W, 0
$1434	$B4D8	    			BTFSC	STATUS, Z, 0
$1436	$EF75	F00A			GOTO	COMPARE_EQU
$143A	$0A03	    			XORLW	0x03
$143C	$B4D8	    			BTFSC	STATUS, Z, 0
$143E	$EF2E	F00A			GOTO	COMPARE_NOTZERO
$1442	$B00A	    			BTFSC	STACK_10, 0, 0
$1444	$EF29	F00A			GOTO	COMPARE_XNOTZERO
$1448	$	COMPARE_YNOTZERO:
$1448	$AE06	    			BTFSS	STACK_6, 7, 0
$144A	$EF73	F00A			GOTO	COMPARE_LT
$144E	$EF71	F00A			GOTO	COMPARE_GT
$1452	$	COMPARE_XNOTZERO:
$1452	$AE02	    			BTFSS	STACK_2, 7, 0
$1454	$EF71	F00A			GOTO	COMPARE_GT
$1458	$EF73	F00A			GOTO	COMPARE_LT
$145C	$	COMPARE_NOTZERO:
$145C	$5002	    			MOVF	STACK_2, W, 0
$145E	$0B80	    			ANDLW	0x80
$1460	$6E0A	    			MOVWF	STACK_10, 0
$1462	$9E02	    			BCF	STACK_2, 7, 0
$1464	$5006	    			MOVF	STACK_6, W, 0
$1466	$0B80	    			ANDLW	0x80
$1468	$9E06	    			BCF	STACK_6, 7, 0
$146A	$180A	    			XORWF	STACK_10, W, 0
$146C	$B4D8	    			BTFSC	STATUS, Z, 0
$146E	$EF3F	F00A			GOTO	COMPARE_TESTALL
$1472	$500A	    			MOVF	STACK_10, W, 0
$1474	$B4D8	    			BTFSC	STATUS, Z, 0
$1476	$EF71	F00A			GOTO	COMPARE_GT
$147A	$EF73	F00A			GOTO	COMPARE_LT
$147E	$	COMPARE_TESTALL:
$147E	$5007	    			MOVF	STACK_7, W, 0
$1480	$5C03	    			SUBWF	STACK_3, W, 0
$1482	$B4D8	    			BTFSC	STATUS, Z, 0
$1484	$EF49	F00A			GOTO	COMPARE_C1
$1488	$A0D8	    			BTFSS	STATUS, C, 0
$148A	$EF65	F00A			GOTO	GT_FALSE
$148E	$EF6B	F00A			GOTO	GT_TRUE
$1492	$	COMPARE_C1:
$1492	$5006	    			MOVF	STACK_6, W, 0
$1494	$5C02	    			SUBWF	STACK_2, W, 0
$1496	$B4D8	    			BTFSC	STATUS, Z, 0
$1498	$EF53	F00A			GOTO	COMPARE_C2
$149C	$A0D8	    			BTFSS	STATUS, C, 0
$149E	$EF65	F00A			GOTO	GT_FALSE
$14A2	$EF6B	F00A			GOTO	GT_TRUE
$14A6	$	COMPARE_C2:
$14A6	$5005	    			MOVF	STACK_5, W, 0
$14A8	$5C01	    			SUBWF	STACK_1, W, 0
$14AA	$B4D8	    			BTFSC	STATUS, Z, 0
$14AC	$EF5D	F00A			GOTO	COMPARE_C3
$14B0	$A0D8	    			BTFSS	STATUS, C, 0
$14B2	$EF65	F00A			GOTO	GT_FALSE
$14B6	$EF6B	F00A			GOTO	GT_TRUE
$14BA	$	COMPARE_C3:
$14BA	$5004	    			MOVF	STACK_4, W, 0
$14BC	$5C00	    			SUBWF	STACK_0, W, 0
$14BE	$B4D8	    			BTFSC	STATUS, Z, 0
$14C0	$EF75	F00A			GOTO	COMPARE_EQU
$14C4	$B0D8	    			BTFSC	STATUS, C, 0
$14C6	$EF6B	F00A			GOTO	GT_TRUE
$14CA	$	GT_FALSE:
$14CA	$520A	    			MOVF	STACK_10, F, 0
$14CC	$B4D8	    			BTFSC	STATUS, Z, 0
$14CE	$EF73	F00A			GOTO	COMPARE_LT
$14D2	$EF71	F00A			GOTO	COMPARE_GT
$14D6	$	GT_TRUE:
$14D6	$520A	    			MOVF	STACK_10, F, 0
$14D8	$B4D8	    			BTFSC	STATUS, Z, 0
$14DA	$EF71	F00A			GOTO	COMPARE_GT
$14DE	$EF73	F00A			GOTO	COMPARE_LT
$14E2	$	COMPARE_GT:
$14E2	$80D8	    			BSF	STATUS, C, 0
$14E4	$0012	    			RETURN
$14E6	$	COMPARE_LT:
$14E6	$90D8	    			BCF	STATUS, C, 0
$14E8	$0012	    			RETURN
$14EA	$	COMPARE_EQU:
$14EA	$80D8	    			BSF	STATUS, C, 0
$14EC	$84D8	    			BSF	STATUS, Z, 0
$14EE	$0012	    			RETURN
$14F0	$0012	    			RETURN
$1C42	$	_Int2Double:
$1C42	$0100	    			MOVLB	0
$1C44	$C000	F008			MOVFF	STACK_0, STACK_8
$1C48	$5001	    			MOVF	STACK_1, W, 0
$1C4A	$6E00	    			MOVWF	STACK_0, 0
$1C4C	$6A01	    			CLRF	STACK_1, 0
$1C4E	$6A02	    			CLRF	STACK_2, 0
$1C50	$6A03	    			CLRF	STACK_3, 0
$1C52	$	FLO1632:
$1C52	$6A0B	    			CLRF	STACK_11, 0
$1C54	$6A0C	    			CLRF	STACK_12, 0
$1C56	$6A01	    			CLRF	STACK_1, 0
$1C58	$6A02	    			CLRF	STACK_2, 0
$1C5A	$6A03	    			CLRF	STACK_3, 0
$1C5C	$0E96	    			MOVLW	150
$1C5E	$6E03	    			MOVWF	STACK_3, 0
$1C60	$6A0A	    			CLRF	STACK_10, 0
$1C62	$AE00	    			BTFSS	STACK_0, 7, 0
$1C64	$EF3A	F00E			GOTO	FLO1632EEE
$1C68	$1E08	    			COMF	STACK_8, F, 0
$1C6A	$1E00	    			COMF	STACK_0, F, 0
$1C6C	$2A08	    			INCF	STACK_8, F, 0
$1C6E	$B4D8	    			BTFSC	STATUS, Z, 0
$1C70	$2A00	    			INCF	STACK_0, F, 0
$1C72	$8E0A	    			BSF	STACK_10, 7, 0
$1C74	$	FLO1632EEE:
$1C74	$C000	F001			MOVFF	STACK_0, STACK_1
$1C78	$C008	F000			MOVFF	STACK_8, STACK_0
$1C7C	$6A08	    			CLRF	STACK_8, 0
$1C7E	$6A02	    			CLRF	STACK_2, 0
$1C80	$EC1D	F00D			CALL	_NRM3232
$1C84	$0012	    			RETURN
$1052	$	_Mul_32x32_FP:
$1052	$0100	    			MOVLB	0
$1054	$	FPM32:
$1054	$6A08	    			CLRF	STACK_8, 0
$1056	$6A09	    			CLRF	STACK_9, 0
$1058	$0E00	    			MOVLW	0x00
$105A	$6207	    			CPFSEQ	STACK_7, 0
$105C	$6403	    			CPFSGT	STACK_3, 0
$105E	$EFAF	F008			GOTO	MULJPRES032
$1062	$	M32BNE0:
$1062	$5002	    			MOVF	STACK_2, W, 0
$1064	$1806	    			XORWF	STACK_6, W, 0
$1066	$6E0A	    			MOVWF	STACK_10, 0
$1068	$5007	    			MOVF	STACK_7, W, 0
$106A	$2603	    			ADDWF	STACK_3, F, 0
$106C	$0E7E	    			MOVLW	126
$106E	$A0D8	    			BTFSS	STATUS, C, 0
$1070	$EF40	F008			GOTO	MTUN32
$1074	$5E03	    			SUBWF	STACK_3, F, 0
$1076	$B0D8	    			BTFSC	STATUS, C, 0
$1078	$EFB4	F008			GOTO	MULJPSETFOV32
$107C	$EF44	F008			GOTO	MOK32
$1080	$	MTUN32:
$1080	$5E03	    			SUBWF	STACK_3, F, 0
$1082	$A0D8	    			BTFSS	STATUS, C, 0
$1084	$EFB9	F008			GOTO	MULJPSETFUN32
$1088	$	MOK32:
$1088	$8E02	    			BSF	STACK_2, 7, 0
$108A	$8E06	    			BSF	STACK_6, 7, 0
$108C	$C002	F00E			MOVFF	STACK_2, STACK_14
$1090	$C001	F00B			MOVFF	STACK_1, STACK_11
$1094	$C000	F00D			MOVFF	STACK_0, STACK_13
$1098	$5000	    			MOVF	STACK_0, W, 0
$109A	$0204	    			MULWF	STACK_4, 0
$109C	$CFF4	F00C			MOVFF	PRODH, STACK_12
$10A0	$5001	    			MOVF	STACK_1, W, 0
$10A2	$0205	    			MULWF	STACK_5, 0
$10A4	$CFF4	F000			MOVFF	PRODH, STACK_0
$10A8	$CFF3	F008			MOVFF	PRODL, STACK_8
$10AC	$0204	    			MULWF	STACK_4, 0
$10AE	$50F3	    			MOVF	PRODL, W, 0
$10B0	$260C	    			ADDWF	STACK_12, F, 0
$10B2	$50F4	    			MOVF	PRODH, W, 0
$10B4	$2208	    			ADDWFC	STACK_8, F, 0
$10B6	$0E00	    			MOVLW	0x00
$10B8	$2200	    			ADDWFC	STACK_0, F, 0
$10BA	$500D	    			MOVF	STACK_13, W, 0
$10BC	$0205	    			MULWF	STACK_5, 0
$10BE	$50F3	    			MOVF	PRODL, W, 0
$10C0	$260C	    			ADDWF	STACK_12, F, 0
$10C2	$50F4	    			MOVF	PRODH, W, 0
$10C4	$2208	    			ADDWFC	STACK_8, F, 0
$10C6	$0E00	    			MOVLW	0x00
$10C8	$2200	    			ADDWFC	STACK_0, F, 0
$10CA	$5002	    			MOVF	STACK_2, W, 0
$10CC	$0204	    			MULWF	STACK_4, 0
$10CE	$50F3	    			MOVF	PRODL, W, 0
$10D0	$2608	    			ADDWF	STACK_8, F, 0
$10D2	$50F4	    			MOVF	PRODH, W, 0
$10D4	$2200	    			ADDWFC	STACK_0, F, 0
$10D6	$5002	    			MOVF	STACK_2, W, 0
$10D8	$0205	    			MULWF	STACK_5, 0
$10DA	$6A01	    			CLRF	STACK_1, 0
$10DC	$0E00	    			MOVLW	0x00
$10DE	$2201	    			ADDWFC	STACK_1, F, 0
$10E0	$50F3	    			MOVF	PRODL, W, 0
$10E2	$2600	    			ADDWF	STACK_0, F, 0
$10E4	$50F4	    			MOVF	PRODH, W, 0
$10E6	$2201	    			ADDWFC	STACK_1, F, 0
$10E8	$500D	    			MOVF	STACK_13, W, 0
$10EA	$0206	    			MULWF	STACK_6, 0
$10EC	$50F3	    			MOVF	PRODL, W, 0
$10EE	$2608	    			ADDWF	STACK_8, F, 0
$10F0	$50F4	    			MOVF	PRODH, W, 0
$10F2	$2200	    			ADDWFC	STACK_0, F, 0
$10F4	$6A02	    			CLRF	STACK_2, 0
$10F6	$0E00	    			MOVLW	0x00
$10F8	$2201	    			ADDWFC	STACK_1, F, 0
$10FA	$2202	    			ADDWFC	STACK_2, F, 0
$10FC	$500B	    			MOVF	STACK_11, W, 0
$10FE	$0206	    			MULWF	STACK_6, 0
$1100	$50F3	    			MOVF	PRODL, W, 0
$1102	$2600	    			ADDWF	STACK_0, F, 0
$1104	$50F4	    			MOVF	PRODH, W, 0
$1106	$2201	    			ADDWFC	STACK_1, F, 0
$1108	$0E00	    			MOVLW	0x00
$110A	$2202	    			ADDWFC	STACK_2, F, 0
$110C	$500E	    			MOVF	STACK_14, W, 0
$110E	$0206	    			MULWF	STACK_6, 0
$1110	$50F3	    			MOVF	PRODL, W, 0
$1112	$2601	    			ADDWF	STACK_1, F, 0
$1114	$50F4	    			MOVF	PRODH, W, 0
$1116	$2202	    			ADDWFC	STACK_2, F, 0
$1118	$BE02	    			BTFSC	STACK_2, 7, 0
$111A	$EF97	F008			GOTO	MROUND32
$111E	$3608	    			RLCF	STACK_8, F, 0
$1120	$3600	    			RLCF	STACK_0, F, 0
$1122	$3601	    			RLCF	STACK_1, F, 0
$1124	$3602	    			RLCF	STACK_2, F, 0
$1126	$0603	    			DECF	STACK_3, F, 0
$1128	$B4D8	    			BTFSC	STATUS, Z, 0
$112A	$EFB9	F008			GOTO	MULJPSETFUN32
$112E	$	MROUND32:
$112E	$EFAA	F008			GOTO	MUL32OK
$1132	$80D8	    			BSF	STATUS, C, 0
$1134	$0E80	    			MOVLW	0x80
$1136	$6408	    			CPFSGT	STACK_8, 0
$1138	$3000	    			RRCF	STACK_0, W, 0
$113A	$0E00	    			MOVLW	0x00
$113C	$2200	    			ADDWFC	STACK_0, F, 0
$113E	$2201	    			ADDWFC	STACK_1, F, 0
$1140	$2202	    			ADDWFC	STACK_2, F, 0
$1142	$A0D8	    			BTFSS	STATUS, C, 0
$1144	$EFAA	F008			GOTO	MUL32OK
$1148	$3202	    			RRCF	STACK_2, F, 0
$114A	$3201	    			RRCF	STACK_1, F, 0
$114C	$3200	    			RRCF	STACK_0, F, 0
$114E	$4A03	    			INFSNZ	STACK_3, F, 0
$1150	$EFB4	F008			GOTO	MULJPSETFOV32
$1154	$	MUL32OK:
$1154	$AE0A	    			BTFSS	STACK_10, 7, 0
$1156	$9E02	    			BCF	STACK_2, 7, 0
$1158	$0E00	    			MOVLW	0
$115A	$EFBC	F008			GOTO	MULEEE
$115E	$	MULJPRES032:
$115E	$0E01	    			MOVLW	0x01
$1160	$ECB0	F00E			CALL	_RES032
$1164	$EFBC	F008			GOTO	MULEEE
$1168	$	MULJPSETFOV32:
$1168	$0E02	    			MOVLW	0x02
$116A	$ECA3	F00E			CALL	_SETFOV32
$116E	$EFBC	F008			GOTO	MULEEE
$1172	$	MULJPSETFUN32:
$1172	$0E04	    			MOVLW	0x04
$1174	$EC95	F00E			CALL	_SETFUN32
$1178	$	MULEEE:
$1178	$0012	    			RETURN
$134C	$	_Double2Int:
$134C	$0100	    			MOVLB	0
$134E	$	INT3216:
$134E	$6A0B	    			CLRF	STACK_11, 0
$1350	$5003	    			MOVF	STACK_3, W, 0
$1352	$B4D8	    			BTFSC	STATUS, Z, 0
$1354	$EFED	F009			GOTO	IRES016
$1358	$5002	    			MOVF	STACK_2, W, 0
$135A	$6E0A	    			MOVWF	STACK_10, 0
$135C	$8E02	    			BSF	STACK_2, 7, 0
$135E	$0E8E	    			MOVLW	142
$1360	$5E03	    			SUBWF	STACK_3, F, 0
$1362	$AE03	    			BTFSS	STACK_3, 7, 0
$1364	$EFF1	F009			GOTO	SETIOV16
$1368	$6C03	    			NEGF	STACK_3, 0
$136A	$0E08	    			MOVLW	8
$136C	$5C03	    			SUBWF	STACK_3, W, 0
$136E	$A0D8	    			BTFSS	STATUS, C, 0
$1370	$EFCC	F009			GOTO	TSHIFT3216
$1374	$6E03	    			MOVWF	STACK_3, 0
$1376	$3601	    			RLCF	STACK_1, F, 0
$1378	$C002	F001			MOVFF	STACK_2, STACK_1
$137C	$6A02	    			CLRF	STACK_2, 0
$137E	$0E08	    			MOVLW	8
$1380	$5C03	    			SUBWF	STACK_3, W, 0
$1382	$A0D8	    			BTFSS	STATUS, C, 0
$1384	$EFCC	F009			GOTO	TSHIFT3216
$1388	$6E03	    			MOVWF	STACK_3, 0
$138A	$3601	    			RLCF	STACK_1, F, 0
$138C	$6A01	    			CLRF	STACK_1, 0
$138E	$5003	    			MOVF	STACK_3, W, 0
$1390	$A4D8	    			BTFSS	STATUS, Z, 0
$1392	$90D8	    			BCF	STATUS, C, 0
$1394	$EFD6	F009			GOTO	SHIFT3216OK
$1398	$	TSHIFT3216:
$1398	$5003	    			MOVF	STACK_3, W, 0
$139A	$B4D8	    			BTFSC	STATUS, Z, 0
$139C	$EFD6	F009			GOTO	SHIFT3216OK
$13A0	$	SHIFT3216:
$13A0	$90D8	    			BCF	STATUS, C, 0
$13A2	$3202	    			RRCF	STACK_2, F, 0
$13A4	$3201	    			RRCF	STACK_1, F, 0
$13A6	$2E03	    			DECFSZ	STACK_3, F, 0
$13A8	$EFD0	F009			GOTO	SHIFT3216
$13AC	$	SHIFT3216OK:
$13AC	$BC0B	    			BTFSC	STACK_11, 6, 0
$13AE	$A001	    			BTFSS	STACK_1, 0, 0
$13B0	$EFE3	F009			GOTO	INT3216OK
$13B4	$A0D8	    			BTFSS	STATUS, C, 0
$13B6	$EFE3	F009			GOTO	INT3216OK
$13BA	$2A01	    			INCF	STACK_1, F, 0
$13BC	$B4D8	    			BTFSC	STATUS, Z, 0
$13BE	$2A02	    			INCF	STACK_2, F, 0
$13C0	$BE02	    			BTFSC	STACK_2, 7, 0
$13C2	$EF00	F00A			GOTO	JPJSETIOV3224
$13C6	$	INT3216OK:
$13C6	$AE0A	    			BTFSS	STACK_10, 7, 0
$13C8	$EF06	F00A			GOTO	INT3216EOK
$13CC	$1E02	    			COMF	STACK_2, F, 0
$13CE	$1E01	    			COMF	STACK_1, F, 0
$13D0	$2A01	    			INCF	STACK_1, F, 0
$13D2	$B4D8	    			BTFSC	STATUS, Z, 0
$13D4	$2A02	    			INCF	STACK_2, F, 0
$13D6	$EF06	F00A			GOTO	INT3216EOK
$13DA	$	IRES016:
$13DA	$6A02	    			CLRF	STACK_2, 0
$13DC	$6A01	    			CLRF	STACK_1, 0
$13DE	$EF06	F00A			GOTO	INT3216EOK
$13E2	$	SETIOV16:
$13E2	$800B	    			BSF	STACK_11, 0, 0
$13E4	$AE0B	    			BTFSS	STACK_11, 7, 0
$13E6	$EF0A	F00A			GOTO	INT3216EER
$13EA	$6A02	    			CLRF	STACK_2, 0
$13EC	$AE0A	    			BTFSS	STACK_10, 7, 0
$13EE	$EF0A	F00A			GOTO	INT3216EER
$13F2	$0EFF	    			MOVLW	0xFF
$13F4	$6E02	    			MOVWF	STACK_2, 0
$13F6	$6E01	    			MOVWF	STACK_1, 0
$13F8	$360A	    			RLCF	STACK_10, F, 0
$13FA	$3202	    			RRCF	STACK_2, F, 0
$13FC	$EF0A	F00A			GOTO	INT3216EER
$1400	$	JPJSETIOV3224:
$1400	$0E01	    			MOVLW	0x01
$1402	$6E0C	    			MOVWF	STACK_12, 0
$1404	$EC86	F00E			CALL	_SETIOV3224
$1408	$EF0C	F00A			GOTO	INT3216EEE
$140C	$	INT3216EOK:
$140C	$0E00	    			MOVLW	0x00
$140E	$6E0C	    			MOVWF	STACK_12, 0
$1410	$EF0C	F00A			GOTO	INT3216EEE
$1414	$	INT3216EER:
$1414	$0EFF	    			MOVLW	0xFF
$1416	$6E0C	    			MOVWF	STACK_12, 0
$1418	$	INT3216EEE:
$1418	$5001	    			MOVF	STACK_1, W, 0
$141A	$6E00	    			MOVWF	STACK_0, 0
$141C	$5002	    			MOVF	STACK_2, W, 0
$141E	$6E01	    			MOVWF	STACK_1, 0
$1420	$0012	    			RETURN
$1BEE	$	_configuracion:
;display.c,165 :: 			void configuracion(void)
;display.c,166 :: 			{ TRISA=0x3F;  //puerto a entrada
$1BEE	$0E3F	    			MOVLW	63
$1BF0	$6E92	    			MOVWF	TRISA, 0
;display.c,167 :: 			TRISA=0x2F;
$1BF2	$0E2F	    			MOVLW	47
$1BF4	$6E92	    			MOVWF	TRISA, 0
;display.c,168 :: 			ADCON1=0x87; //puerto a digital
$1BF6	$0E87	    			MOVLW	135
$1BF8	$6EC1	    			MOVWF	ADCON1, 0
;display.c,169 :: 			TRISD = 0x00;// Puerto D salida
$1BFA	$6A95	    			CLRF	TRISD, 0
;display.c,170 :: 			TRISB= 0xDF; // Puerto B entrada
$1BFC	$0EDF	    			MOVLW	223
$1BFE	$6E93	    			MOVWF	TRISB, 0
;display.c,171 :: 			TRISC =0x80; //Puerto C
$1C00	$0E80	    			MOVLW	128
$1C02	$6E94	    			MOVWF	TRISC, 0
;display.c,174 :: 			Lcd_Config(&PORTD, 0, 1, 2, 7, 6, 5, 4);
$1C04	$0E83	    			MOVLW	PORTD
$1C06	$6E6E	    			MOVWF	FARG_Lcd_Init+0, 0
$1C08	$0E0F	    			MOVLW	@PORTD
$1C0A	$6E6F	    			MOVWF	FARG_Lcd_Init+1, 0
$1C0C	$ECBD	F008			CALL	_Lcd_Init
;display.c,175 :: 			Lcd_Cmd(Lcd_CLEAR);       // Clear display
$1C10	$0E01	    			MOVLW	1
$1C12	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$1C14	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,176 :: 			Lcd_Cmd(Lcd_CURSOR_OFF);  // Turn cursor off
$1C18	$0E0C	    			MOVLW	12
$1C1A	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$1C1C	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,179 :: 			T0CON = 0xC7;      // TMR0 modo 8bit, asigno preescaler a TMR0, div 256
$1C20	$0EC7	    			MOVLW	199
$1C22	$6ED5	    			MOVWF	T0CON, 0
;display.c,180 :: 			TMR0L = 61;        // inicializar Timer0
$1C24	$0E3D	    			MOVLW	61
$1C26	$6ED6	    			MOVWF	TMR0L, 0
;display.c,181 :: 			INTCON =0x00;        //Desactivamos las interrupciones inicialmente
$1C28	$6AF2	    			CLRF	INTCON, 0
;display.c,184 :: 			Pwm_Init(15000);
$1C2A	$90CA	    			BCF	T2CON, T2CKPS0, 0
$1C2C	$92CA	    			BCF	T2CON, T2CKPS1, 0
$1C2E	$0E41	    			MOVLW	65
$1C30	$6ECB	    			MOVWF	PR2, 0
$1C32	$ECC8	F00E			CALL	_PWM_Init
;display.c,185 :: 			Pwm_Start();
$1C36	$ECC3	F00E			CALL	_PWM_Start
;display.c,186 :: 			Pwm_Change_Duty(0);
$1C3A	$6A74	    			CLRF	FARG_PWM_Change_Duty+0, 0
$1C3C	$EC5A	F00D			CALL	_PWM_Change_Duty
;display.c,192 :: 			}
$1C40	$0012	    			RETURN
$0D20	$	_recalibrar:
$0D20	$0E50	    			MOVLW	80
$0D22	$6E2E	    			MOVWF	lstr7_display+0, 0
$0D24	$0E6F	    			MOVLW	111
$0D26	$6E2F	    			MOVWF	lstr7_display+1, 0
$0D28	$0E72	    			MOVLW	114
$0D2A	$6E30	    			MOVWF	lstr7_display+2, 0
$0D2C	$0E20	    			MOVLW	32
$0D2E	$6E31	    			MOVWF	lstr7_display+3, 0
$0D30	$0E66	    			MOVLW	102
$0D32	$6E32	    			MOVWF	lstr7_display+4, 0
$0D34	$0E61	    			MOVLW	97
$0D36	$6E33	    			MOVWF	lstr7_display+5, 0
$0D38	$0E76	    			MOVLW	118
$0D3A	$6E34	    			MOVWF	lstr7_display+6, 0
$0D3C	$0E6F	    			MOVLW	111
$0D3E	$6E35	    			MOVWF	lstr7_display+7, 0
$0D40	$0E72	    			MOVLW	114
$0D42	$6E36	    			MOVWF	lstr7_display+8, 0
$0D44	$0E20	    			MOVLW	32
$0D46	$6E37	    			MOVWF	lstr7_display+9, 0
$0D48	$0E64	    			MOVLW	100
$0D4A	$6E38	    			MOVWF	lstr7_display+10, 0
$0D4C	$0E65	    			MOVLW	101
$0D4E	$6E39	    			MOVWF	lstr7_display+11, 0
$0D50	$6A3A	    			CLRF	lstr7_display+12, 0
$0D52	$0E75	    			MOVLW	117
$0D54	$6E3B	    			MOVWF	lstr8_display+0, 0
$0D56	$0E6E	    			MOVLW	110
$0D58	$6E3C	    			MOVWF	lstr8_display+1, 0
$0D5A	$0E61	    			MOVLW	97
$0D5C	$6E3D	    			MOVWF	lstr8_display+2, 0
$0D5E	$0E20	    			MOVLW	32
$0D60	$6E3E	    			MOVWF	lstr8_display+3, 0
$0D62	$0E76	    			MOVLW	118
$0D64	$6E3F	    			MOVWF	lstr8_display+4, 0
$0D66	$0E75	    			MOVLW	117
$0D68	$6E40	    			MOVWF	lstr8_display+5, 0
$0D6A	$0E65	    			MOVLW	101
$0D6C	$6E41	    			MOVWF	lstr8_display+6, 0
$0D6E	$0E6C	    			MOVLW	108
$0D70	$6E42	    			MOVWF	lstr8_display+7, 0
$0D72	$0E74	    			MOVLW	116
$0D74	$6E43	    			MOVWF	lstr8_display+8, 0
$0D76	$0E61	    			MOVLW	97
$0D78	$6E44	    			MOVWF	lstr8_display+9, 0
$0D7A	$6A45	    			CLRF	lstr8_display+10, 0
$0D7C	$0E43	    			MOVLW	67
$0D7E	$6E46	    			MOVWF	lstr9_display+0, 0
$0D80	$0E61	    			MOVLW	97
$0D82	$6E47	    			MOVWF	lstr9_display+1, 0
$0D84	$0E6C	    			MOVLW	108
$0D86	$6E48	    			MOVWF	lstr9_display+2, 0
$0D88	$0E69	    			MOVLW	105
$0D8A	$6E49	    			MOVWF	lstr9_display+3, 0
$0D8C	$0E62	    			MOVLW	98
$0D8E	$6E4A	    			MOVWF	lstr9_display+4, 0
$0D90	$0E72	    			MOVLW	114
$0D92	$6E4B	    			MOVWF	lstr9_display+5, 0
$0D94	$0E61	    			MOVLW	97
$0D96	$6E4C	    			MOVWF	lstr9_display+6, 0
$0D98	$0E6E	    			MOVLW	110
$0D9A	$6E4D	    			MOVWF	lstr9_display+7, 0
$0D9C	$0E64	    			MOVLW	100
$0D9E	$6E4E	    			MOVWF	lstr9_display+8, 0
$0DA0	$0E6F	    			MOVLW	111
$0DA2	$6E4F	    			MOVWF	lstr9_display+9, 0
$0DA4	$0E20	    			MOVLW	32
$0DA6	$6E50	    			MOVWF	lstr9_display+10, 0
$0DA8	$0E65	    			MOVLW	101
$0DAA	$6E51	    			MOVWF	lstr9_display+11, 0
$0DAC	$0E6C	    			MOVLW	108
$0DAE	$6E52	    			MOVWF	lstr9_display+12, 0
$0DB0	$6A53	    			CLRF	lstr9_display+13, 0
$0DB2	$0E73	    			MOVLW	115
$0DB4	$6E54	    			MOVWF	lstr10_display+0, 0
$0DB6	$0E69	    			MOVLW	105
$0DB8	$6E55	    			MOVWF	lstr10_display+1, 0
$0DBA	$0E73	    			MOVLW	115
$0DBC	$6E56	    			MOVWF	lstr10_display+2, 0
$0DBE	$0E74	    			MOVLW	116
$0DC0	$6E57	    			MOVWF	lstr10_display+3, 0
$0DC2	$0E65	    			MOVLW	101
$0DC4	$6E58	    			MOVWF	lstr10_display+4, 0
$0DC6	$0E6D	    			MOVLW	109
$0DC8	$6E59	    			MOVWF	lstr10_display+5, 0
$0DCA	$0E61	    			MOVLW	97
$0DCC	$6E5A	    			MOVWF	lstr10_display+6, 0
$0DCE	$6A5B	    			CLRF	lstr10_display+7, 0
$0DD0	$0E53	    			MOVLW	83
$0DD2	$6E5C	    			MOVWF	lstr11_display+0, 0
$0DD4	$0E69	    			MOVLW	105
$0DD6	$6E5D	    			MOVWF	lstr11_display+1, 0
$0DD8	$0E73	    			MOVLW	115
$0DDA	$6E5E	    			MOVWF	lstr11_display+2, 0
$0DDC	$0E74	    			MOVLW	116
$0DDE	$6E5F	    			MOVWF	lstr11_display+3, 0
$0DE0	$0E65	    			MOVLW	101
$0DE2	$6E60	    			MOVWF	lstr11_display+4, 0
$0DE4	$0E6D	    			MOVLW	109
$0DE6	$6E61	    			MOVWF	lstr11_display+5, 0
$0DE8	$0E61	    			MOVLW	97
$0DEA	$6E62	    			MOVWF	lstr11_display+6, 0
$0DEC	$6A63	    			CLRF	lstr11_display+7, 0
$0DEE	$0E63	    			MOVLW	99
$0DF0	$6E64	    			MOVWF	lstr12_display+0, 0
$0DF2	$0E61	    			MOVLW	97
$0DF4	$6E65	    			MOVWF	lstr12_display+1, 0
$0DF6	$0E6C	    			MOVLW	108
$0DF8	$6E66	    			MOVWF	lstr12_display+2, 0
$0DFA	$0E69	    			MOVLW	105
$0DFC	$6E67	    			MOVWF	lstr12_display+3, 0
$0DFE	$0E62	    			MOVLW	98
$0E00	$6E68	    			MOVWF	lstr12_display+4, 0
$0E02	$0E72	    			MOVLW	114
$0E04	$6E69	    			MOVWF	lstr12_display+5, 0
$0E06	$0E61	    			MOVLW	97
$0E08	$6E6A	    			MOVWF	lstr12_display+6, 0
$0E0A	$0E64	    			MOVLW	100
$0E0C	$6E6B	    			MOVWF	lstr12_display+7, 0
$0E0E	$0E6F	    			MOVLW	111
$0E10	$6E6C	    			MOVWF	lstr12_display+8, 0
$0E12	$6A6D	    			CLRF	lstr12_display+9, 0
;display.c,264 :: 			void recalibrar()
;display.c,266 :: 			while (PORTB.F0) //existe una interrupción y hay que calibrar
$0E14	$	L_recalibrar_44:
$0E14	$A081	    			BTFSS	PORTB, 0, 0
$0E16	$D03F	    			BRA	L_recalibrar_45
;display.c,268 :: 			if(PORTA.F0) //calibrar el sensor del jugador
$0E18	$A080	    			BTFSS	PORTA, 0, 0
$0E1A	$D017	    			BRA	L_recalibrar_46
;display.c,270 :: 			Lcd_Out(1,1,"Por favor de");
$0E1C	$0E01	    			MOVLW	1
$0E1E	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0E20	$0E01	    			MOVLW	1
$0E22	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0E24	$0E2E	    			MOVLW	lstr7_display
$0E26	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0E28	$0E00	    			MOVLW	@lstr7_display
$0E2A	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0E2C	$ECD9	F00C			CALL	_Lcd_Out
;display.c,271 :: 			Lcd_Out(2,1,"una vuelta");
$0E30	$0E02	    			MOVLW	2
$0E32	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0E34	$0E01	    			MOVLW	1
$0E36	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0E38	$0E3B	    			MOVLW	lstr8_display
$0E3A	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0E3C	$0E00	    			MOVLW	@lstr8_display
$0E3E	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0E40	$ECD9	F00C			CALL	_Lcd_Out
;display.c,272 :: 			while(PORTA.F0){}//esperando
$0E44	$	L_recalibrar_47:
$0E44	$B080	    			BTFSC	PORTA, 0, 0
$0E46	$D7FE	    			BRA	L_recalibrar_47
$0E48	$	L_recalibrar_48:
;display.c,274 :: 			}
$0E48	$D025	    			BRA	L_recalibrar_49
$0E4A	$	L_recalibrar_46:
;display.c,276 :: 			{ Lcd_Cmd(Lcd_Clear);
$0E4A	$0E01	    			MOVLW	1
$0E4C	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$0E4E	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,277 :: 			Lcd_Out(1,1,"Calibrando el");
$0E52	$0E01	    			MOVLW	1
$0E54	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0E56	$0E01	    			MOVLW	1
$0E58	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0E5A	$0E46	    			MOVLW	lstr9_display
$0E5C	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0E5E	$0E00	    			MOVLW	@lstr9_display
$0E60	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0E62	$ECD9	F00C			CALL	_Lcd_Out
;display.c,278 :: 			Lcd_Out(2,1,"sistema");
$0E66	$0E02	    			MOVLW	2
$0E68	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0E6A	$0E01	    			MOVLW	1
$0E6C	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0E6E	$0E54	    			MOVLW	lstr10_display
$0E70	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0E72	$0E00	    			MOVLW	@lstr10_display
$0E74	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0E76	$ECD9	F00C			CALL	_Lcd_Out
;display.c,279 :: 			acelerar(165);
$0E7A	$0EA5	    			MOVLW	165
$0E7C	$6E6E	    			MOVWF	FARG_acelerar+0, 0
$0E7E	$0E00	    			MOVLW	0
$0E80	$6E6F	    			MOVWF	FARG_acelerar+1, 0
$0E82	$EC44	F00C			CALL	_acelerar
;display.c,280 :: 			if(PORTA.F1) // si esta encendido
$0E86	$A280	    			BTFSS	PORTA, 1, 0
$0E88	$D003	    			BRA	L_recalibrar_50
;display.c,281 :: 			{ while(PORTA.F1){} //esperamos a que se apague
$0E8A	$	L_recalibrar_51:
$0E8A	$B280	    			BTFSC	PORTA, 1, 0
$0E8C	$D7FE	    			BRA	L_recalibrar_51
$0E8E	$	L_recalibrar_52:
;display.c,282 :: 			}
$0E8E	$D002	    			BRA	L_recalibrar_53
$0E90	$	L_recalibrar_50:
;display.c,284 :: 			{while(!PORTA.F1) {}
$0E90	$	L_recalibrar_54:
$0E90	$A280	    			BTFSS	PORTA, 1, 0
$0E92	$D7FE	    			BRA	L_recalibrar_54
$0E94	$	L_recalibrar_55:
;display.c,285 :: 			}
$0E94	$	L_recalibrar_53:
;display.c,286 :: 			}
$0E94	$	L_recalibrar_49:
;display.c,287 :: 			}
$0E94	$D7BF	    			BRA	L_recalibrar_44
$0E96	$	L_recalibrar_45:
;display.c,289 :: 			Pwm_Change_Duty(0); //frenamos el coche
$0E96	$6A74	    			CLRF	FARG_PWM_Change_Duty+0, 0
$0E98	$EC5A	F00D			CALL	_PWM_Change_Duty
;display.c,290 :: 			Lcd_Cmd(Lcd_Clear);
$0E9C	$0E01	    			MOVLW	1
$0E9E	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$0EA0	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,291 :: 			Lcd_Out(1,1,"Sistema");
$0EA4	$0E01	    			MOVLW	1
$0EA6	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0EA8	$0E01	    			MOVLW	1
$0EAA	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0EAC	$0E5C	    			MOVLW	lstr11_display
$0EAE	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0EB0	$0E00	    			MOVLW	@lstr11_display
$0EB2	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0EB4	$ECD9	F00C			CALL	_Lcd_Out
;display.c,292 :: 			Lcd_Out(2,1,"calibrado");
$0EB8	$0E02	    			MOVLW	2
$0EBA	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0EBC	$0E01	    			MOVLW	1
$0EBE	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0EC0	$0E64	    			MOVLW	lstr12_display
$0EC2	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0EC4	$0E00	    			MOVLW	@lstr12_display
$0EC6	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0EC8	$ECD9	F00C			CALL	_Lcd_Out
;display.c,294 :: 			}
$0ECC	$0012	    			RETURN
$0B4E	$	_seleccionarNivel:
$0B4E	$0E53	    			MOVLW	83
$0B50	$6E2E	    			MOVWF	lstr1_display+0, 0
$0B52	$0E65	    			MOVLW	101
$0B54	$6E2F	    			MOVWF	lstr1_display+1, 0
$0B56	$0E6C	    			MOVLW	108
$0B58	$6E30	    			MOVWF	lstr1_display+2, 0
$0B5A	$0E65	    			MOVLW	101
$0B5C	$6E31	    			MOVWF	lstr1_display+3, 0
$0B5E	$0E63	    			MOVLW	99
$0B60	$6E32	    			MOVWF	lstr1_display+4, 0
$0B62	$0E63	    			MOVLW	99
$0B64	$6E33	    			MOVWF	lstr1_display+5, 0
$0B66	$0E69	    			MOVLW	105
$0B68	$6E34	    			MOVWF	lstr1_display+6, 0
$0B6A	$0E6F	    			MOVLW	111
$0B6C	$6E35	    			MOVWF	lstr1_display+7, 0
$0B6E	$0E6E	    			MOVLW	110
$0B70	$6E36	    			MOVWF	lstr1_display+8, 0
$0B72	$0E65	    			MOVLW	101
$0B74	$6E37	    			MOVWF	lstr1_display+9, 0
$0B76	$0E20	    			MOVLW	32
$0B78	$6E38	    			MOVWF	lstr1_display+10, 0
$0B7A	$0E6E	    			MOVLW	110
$0B7C	$6E39	    			MOVWF	lstr1_display+11, 0
$0B7E	$0E69	    			MOVLW	105
$0B80	$6E3A	    			MOVWF	lstr1_display+12, 0
$0B82	$0E76	    			MOVLW	118
$0B84	$6E3B	    			MOVWF	lstr1_display+13, 0
$0B86	$0E65	    			MOVLW	101
$0B88	$6E3C	    			MOVWF	lstr1_display+14, 0
$0B8A	$0E6C	    			MOVLW	108
$0B8C	$6E3D	    			MOVWF	lstr1_display+15, 0
$0B8E	$6A3E	    			CLRF	lstr1_display+16, 0
$0B90	$0E4E	    			MOVLW	78
$0B92	$6E3F	    			MOVWF	lstr2_display+0, 0
$0B94	$0E69	    			MOVLW	105
$0B96	$6E40	    			MOVWF	lstr2_display+1, 0
$0B98	$0E76	    			MOVLW	118
$0B9A	$6E41	    			MOVWF	lstr2_display+2, 0
$0B9C	$0E65	    			MOVLW	101
$0B9E	$6E42	    			MOVWF	lstr2_display+3, 0
$0BA0	$0E6C	    			MOVLW	108
$0BA2	$6E43	    			MOVWF	lstr2_display+4, 0
$0BA4	$0E20	    			MOVLW	32
$0BA6	$6E44	    			MOVWF	lstr2_display+5, 0
$0BA8	$0E31	    			MOVLW	49
$0BAA	$6E45	    			MOVWF	lstr2_display+6, 0
$0BAC	$6A46	    			CLRF	lstr2_display+7, 0
$0BAE	$0E4E	    			MOVLW	78
$0BB0	$6E47	    			MOVWF	lstr3_display+0, 0
$0BB2	$0E69	    			MOVLW	105
$0BB4	$6E48	    			MOVWF	lstr3_display+1, 0
$0BB6	$0E76	    			MOVLW	118
$0BB8	$6E49	    			MOVWF	lstr3_display+2, 0
$0BBA	$0E65	    			MOVLW	101
$0BBC	$6E4A	    			MOVWF	lstr3_display+3, 0
$0BBE	$0E6C	    			MOVLW	108
$0BC0	$6E4B	    			MOVWF	lstr3_display+4, 0
$0BC2	$0E20	    			MOVLW	32
$0BC4	$6E4C	    			MOVWF	lstr3_display+5, 0
$0BC6	$0E32	    			MOVLW	50
$0BC8	$6E4D	    			MOVWF	lstr3_display+6, 0
$0BCA	$6A4E	    			CLRF	lstr3_display+7, 0
$0BCC	$0E4E	    			MOVLW	78
$0BCE	$6E4F	    			MOVWF	lstr4_display+0, 0
$0BD0	$0E69	    			MOVLW	105
$0BD2	$6E50	    			MOVWF	lstr4_display+1, 0
$0BD4	$0E76	    			MOVLW	118
$0BD6	$6E51	    			MOVWF	lstr4_display+2, 0
$0BD8	$0E65	    			MOVLW	101
$0BDA	$6E52	    			MOVWF	lstr4_display+3, 0
$0BDC	$0E6C	    			MOVLW	108
$0BDE	$6E53	    			MOVWF	lstr4_display+4, 0
$0BE0	$0E20	    			MOVLW	32
$0BE2	$6E54	    			MOVWF	lstr4_display+5, 0
$0BE4	$0E33	    			MOVLW	51
$0BE6	$6E55	    			MOVWF	lstr4_display+6, 0
$0BE8	$6A56	    			CLRF	lstr4_display+7, 0
;display.c,197 :: 			unsigned short int seleccionarNivel(){
;display.c,198 :: 			short int nivel = 0;
$0BEA	$6A57	    			CLRF	seleccionarNivel_nivel_L0, 0
;display.c,199 :: 			Lcd_Cmd(Lcd_Clear);
$0BEC	$0E01	    			MOVLW	1
$0BEE	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$0BF0	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,200 :: 			Lcd_Out(1,1,"Seleccione nivel");
$0BF4	$0E01	    			MOVLW	1
$0BF6	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0BF8	$0E01	    			MOVLW	1
$0BFA	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0BFC	$0E2E	    			MOVLW	lstr1_display
$0BFE	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0C00	$0E00	    			MOVLW	@lstr1_display
$0C02	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0C04	$ECD9	F00C			CALL	_Lcd_Out
;display.c,202 :: 			while (!PORTB.F3){ //start
$0C08	$	L_seleccionarNivel_28:
$0C08	$B681	    			BTFSC	PORTB, 3, 0
$0C0A	$D087	    			BRA	L_seleccionarNivel_29
;display.c,204 :: 			if (PORTB.F4)
$0C0C	$A881	    			BTFSS	PORTB, 4, 0
$0C0E	$D02A	    			BRA	L_seleccionarNivel_30
;display.c,206 :: 			nivel = (++nivel ) % 3; //aumentar pero solo hasta 2
$0C10	$2A57	    			INCF	seleccionarNivel_nivel_L0, 1, 0
$0C12	$0E03	    			MOVLW	3
$0C14	$6E04	    			MOVWF	STACK_4, 0
$0C16	$C057	F000			MOVFF	seleccionarNivel_nivel_L0, STACK_0
$0C1A	$EC9B	F00B			CALL	_div_8x8_s
$0C1E	$C008	F000			MOVFF	STACK_8, STACK_0
$0C22	$C000	F057			MOVFF	STACK_0, seleccionarNivel_nivel_L0
;display.c,207 :: 			delay_ms(900);
$0C26	$0E05	    			MOVLW	5
$0C28	$6E0C	    			MOVWF	STACK_12, 0
$0C2A	$0EFF	    			MOVLW	255
$0C2C	$6E0B	    			MOVWF	STACK_11, 0
$0C2E	$0EFF	    			MOVLW	255
$0C30	$6E0A	    			MOVWF	STACK_10, 0
$0C32	$2E0C	    			DECFSZ	STACK_12, F, 0
$0C34	$D001	    			BRA	$+2
$0C36	$D007	    			BRA	$+8
$0C38	$2E0B	    			DECFSZ	STACK_11, F, 0
$0C3A	$D001	    			BRA	$+2
$0C3C	$D003	    			BRA	$+4
$0C3E	$2E0A	    			DECFSZ	STACK_10, F, 0
$0C40	$D7FE	    			BRA	$-1
$0C42	$D7FA	    			BRA	$-5
$0C44	$D7F6	    			BRA	$-9
$0C46	$0E96	    			MOVLW	150
$0C48	$6E0B	    			MOVWF	STACK_11, 0
$0C4A	$0EFF	    			MOVLW	255
$0C4C	$6E0A	    			MOVWF	STACK_10, 0
$0C4E	$2E0B	    			DECFSZ	STACK_11, F, 0
$0C50	$D001	    			BRA	$+2
$0C52	$D003	    			BRA	$+4
$0C54	$2E0A	    			DECFSZ	STACK_10, F, 0
$0C56	$D7FE	    			BRA	$-1
$0C58	$D7FA	    			BRA	$-5
$0C5A	$0EBD	    			MOVLW	189
$0C5C	$6E0A	    			MOVWF	STACK_10, 0
$0C5E	$2E0A	    			DECFSZ	STACK_10, F, 0
$0C60	$D7FE	    			BRA	$-1
$0C62	$0000	    			NOP
;display.c,208 :: 			}
$0C64	$	L_seleccionarNivel_30:
;display.c,209 :: 			if (PORTC.F7)
$0C64	$0100	    			MOVLB	0
$0C66	$AE82	    			BTFSS	PORTC, 7, 0
$0C68	$D02A	    			BRA	L_seleccionarNivel_31
;display.c,211 :: 			if (--nivel < 0 ) nivel = 2; //volvemos al nivel 2 despues del 1
$0C6A	$0657	    			DECF	seleccionarNivel_nivel_L0, 1, 0
$0C6C	$0E80	    			MOVLW	128
$0C6E	$1857	    			XORWF	seleccionarNivel_nivel_L0, 0, 0
$0C70	$6E00	    			MOVWF	STACK_0, 0
$0C72	$0E80	    			MOVLW	128
$0C74	$0A00	    			XORLW	0
$0C76	$5C00	    			SUBWF	STACK_0, 0, 0
$0C78	$E202	    			BC	L_seleccionarNivel_32
$0C7A	$0E02	    			MOVLW	2
$0C7C	$6E57	    			MOVWF	seleccionarNivel_nivel_L0, 0
$0C7E	$	L_seleccionarNivel_32:
;display.c,212 :: 			delay_ms(900);
$0C7E	$0100	    			MOVLB	0
$0C80	$0E05	    			MOVLW	5
$0C82	$6E0C	    			MOVWF	STACK_12, 0
$0C84	$0EFF	    			MOVLW	255
$0C86	$6E0B	    			MOVWF	STACK_11, 0
$0C88	$0EFF	    			MOVLW	255
$0C8A	$6E0A	    			MOVWF	STACK_10, 0
$0C8C	$2E0C	    			DECFSZ	STACK_12, F, 0
$0C8E	$D001	    			BRA	$+2
$0C90	$D007	    			BRA	$+8
$0C92	$2E0B	    			DECFSZ	STACK_11, F, 0
$0C94	$D001	    			BRA	$+2
$0C96	$D003	    			BRA	$+4
$0C98	$2E0A	    			DECFSZ	STACK_10, F, 0
$0C9A	$D7FE	    			BRA	$-1
$0C9C	$D7FA	    			BRA	$-5
$0C9E	$D7F6	    			BRA	$-9
$0CA0	$0E96	    			MOVLW	150
$0CA2	$6E0B	    			MOVWF	STACK_11, 0
$0CA4	$0EFF	    			MOVLW	255
$0CA6	$6E0A	    			MOVWF	STACK_10, 0
$0CA8	$2E0B	    			DECFSZ	STACK_11, F, 0
$0CAA	$D001	    			BRA	$+2
$0CAC	$D003	    			BRA	$+4
$0CAE	$2E0A	    			DECFSZ	STACK_10, F, 0
$0CB0	$D7FE	    			BRA	$-1
$0CB2	$D7FA	    			BRA	$-5
$0CB4	$0EBD	    			MOVLW	189
$0CB6	$6E0A	    			MOVWF	STACK_10, 0
$0CB8	$2E0A	    			DECFSZ	STACK_10, F, 0
$0CBA	$D7FE	    			BRA	$-1
$0CBC	$0000	    			NOP
;display.c,213 :: 			}
$0CBE	$	L_seleccionarNivel_31:
;display.c,214 :: 			switch (nivel)
$0CBE	$0100	    			MOVLB	0
$0CC0	$D022	    			BRA	L_seleccionarNivel_33
;display.c,217 :: 			case 0 : Lcd_Out(2,1,"Nivel 1");
$0CC2	$	L_seleccionarNivel_35:
$0CC2	$0100	    			MOVLB	0
$0CC4	$0E02	    			MOVLW	2
$0CC6	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0CC8	$0E01	    			MOVLW	1
$0CCA	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0CCC	$0E3F	    			MOVLW	lstr2_display
$0CCE	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0CD0	$0E00	    			MOVLW	@lstr2_display
$0CD2	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0CD4	$ECD9	F00C			CALL	_Lcd_Out
;display.c,218 :: 			break;
$0CD8	$D01F	    			BRA	L_seleccionarNivel_34
;display.c,219 :: 			case 1: Lcd_Out(2,1,"Nivel 2");
$0CDA	$	L_seleccionarNivel_36:
$0CDA	$0E02	    			MOVLW	2
$0CDC	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0CDE	$0E01	    			MOVLW	1
$0CE0	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0CE2	$0E47	    			MOVLW	lstr3_display
$0CE4	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0CE6	$0E00	    			MOVLW	@lstr3_display
$0CE8	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0CEA	$ECD9	F00C			CALL	_Lcd_Out
;display.c,220 :: 			break;
$0CEE	$D014	    			BRA	L_seleccionarNivel_34
;display.c,221 :: 			case 2: Lcd_Out(2,1,"Nivel 3");
$0CF0	$	L_seleccionarNivel_37:
$0CF0	$0E02	    			MOVLW	2
$0CF2	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0CF4	$0E01	    			MOVLW	1
$0CF6	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0CF8	$0E4F	    			MOVLW	lstr4_display
$0CFA	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0CFC	$0E00	    			MOVLW	@lstr4_display
$0CFE	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0D00	$ECD9	F00C			CALL	_Lcd_Out
;display.c,222 :: 			break;
$0D04	$D009	    			BRA	L_seleccionarNivel_34
;display.c,223 :: 			}
$0D06	$	L_seleccionarNivel_33:
$0D06	$5057	    			MOVF	seleccionarNivel_nivel_L0, 0, 0
$0D08	$0A00	    			XORLW	0
$0D0A	$E0DB	    			BZ	L_seleccionarNivel_35
$0D0C	$5057	    			MOVF	seleccionarNivel_nivel_L0, 0, 0
$0D0E	$0A01	    			XORLW	1
$0D10	$E0E4	    			BZ	L_seleccionarNivel_36
$0D12	$5057	    			MOVF	seleccionarNivel_nivel_L0, 0, 0
$0D14	$0A02	    			XORLW	2
$0D16	$E0EC	    			BZ	L_seleccionarNivel_37
$0D18	$	L_seleccionarNivel_34:
;display.c,225 :: 			}
$0D18	$D777	    			BRA	L_seleccionarNivel_28
$0D1A	$	L_seleccionarNivel_29:
;display.c,226 :: 			return nivel;
$0D1A	$C057	F000			MOVFF	seleccionarNivel_nivel_L0, STACK_0
;display.c,227 :: 			} //fin obternerNivel
$0D1E	$0012	    			RETURN
$0ECE	$	_numeroVueltas:
$0ECE	$0E32	    			MOVLW	50
$0ED0	$6E2E	    			MOVWF	lstr5_display+0, 0
$0ED2	$0E30	    			MOVLW	48
$0ED4	$6E2F	    			MOVWF	lstr5_display+1, 0
$0ED6	$0E30	    			MOVLW	48
$0ED8	$6E30	    			MOVWF	lstr5_display+2, 0
$0EDA	$6A31	    			CLRF	lstr5_display+3, 0
$0EDC	$0E56	    			MOVLW	86
$0EDE	$6E32	    			MOVWF	lstr6_display+0, 0
$0EE0	$0E75	    			MOVLW	117
$0EE2	$6E33	    			MOVWF	lstr6_display+1, 0
$0EE4	$0E65	    			MOVLW	101
$0EE6	$6E34	    			MOVWF	lstr6_display+2, 0
$0EE8	$0E6C	    			MOVLW	108
$0EEA	$6E35	    			MOVWF	lstr6_display+3, 0
$0EEC	$0E74	    			MOVLW	116
$0EEE	$6E36	    			MOVWF	lstr6_display+4, 0
$0EF0	$0E61	    			MOVLW	97
$0EF2	$6E37	    			MOVWF	lstr6_display+5, 0
$0EF4	$0E73	    			MOVLW	115
$0EF6	$6E38	    			MOVWF	lstr6_display+6, 0
$0EF8	$0E20	    			MOVLW	32
$0EFA	$6E39	    			MOVWF	lstr6_display+7, 0
$0EFC	$0E64	    			MOVLW	100
$0EFE	$6E3A	    			MOVWF	lstr6_display+8, 0
$0F00	$0E65	    			MOVLW	101
$0F02	$6E3B	    			MOVWF	lstr6_display+9, 0
$0F04	$0E20	    			MOVLW	32
$0F06	$6E3C	    			MOVWF	lstr6_display+10, 0
$0F08	$0E6A	    			MOVLW	106
$0F0A	$6E3D	    			MOVWF	lstr6_display+11, 0
$0F0C	$0E75	    			MOVLW	117
$0F0E	$6E3E	    			MOVWF	lstr6_display+12, 0
$0F10	$0E65	    			MOVLW	101
$0F12	$6E3F	    			MOVWF	lstr6_display+13, 0
$0F14	$0E67	    			MOVLW	103
$0F16	$6E40	    			MOVWF	lstr6_display+14, 0
$0F18	$0E6F	    			MOVLW	111
$0F1A	$6E41	    			MOVWF	lstr6_display+15, 0
$0F1C	$0E3F	    			MOVLW	63
$0F1E	$6E42	    			MOVWF	lstr6_display+16, 0
$0F20	$6A43	    			CLRF	lstr6_display+17, 0
;display.c,229 :: 			unsigned short int numeroVueltas()
;display.c,231 :: 			unsigned short int vueltas = 20;
$0F22	$0E14	    			MOVLW	20
$0F24	$6E44	    			MOVWF	numeroVueltas_vueltas_L0, 0
;display.c,232 :: 			char * auxVueltas="200";
$0F26	$0E2E	    			MOVLW	lstr5_display
$0F28	$6E45	    			MOVWF	numeroVueltas_auxVueltas_L0, 0
$0F2A	$0E00	    			MOVLW	@lstr5_display
$0F2C	$6E46	    			MOVWF	numeroVueltas_auxVueltas_L0+1, 0
;display.c,234 :: 			Lcd_Cmd(Lcd_Clear);
$0F2E	$0E01	    			MOVLW	1
$0F30	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$0F32	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,235 :: 			Lcd_Out(1,1,"Vueltas de juego?");
$0F36	$0E01	    			MOVLW	1
$0F38	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0F3A	$0E01	    			MOVLW	1
$0F3C	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0F3E	$0E32	    			MOVLW	lstr6_display
$0F40	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0F42	$0E00	    			MOVLW	@lstr6_display
$0F44	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0F46	$ECD9	F00C			CALL	_Lcd_Out
;display.c,236 :: 			delay_ms(1000); //esperamos 1 segundo para evitar los rebotes del pulsador start
$0F4A	$0E06	    			MOVLW	6
$0F4C	$6E0C	    			MOVWF	STACK_12, 0
$0F4E	$0EFF	    			MOVLW	255
$0F50	$6E0B	    			MOVWF	STACK_11, 0
$0F52	$0EFF	    			MOVLW	255
$0F54	$6E0A	    			MOVWF	STACK_10, 0
$0F56	$2E0C	    			DECFSZ	STACK_12, F, 0
$0F58	$D001	    			BRA	$+2
$0F5A	$D007	    			BRA	$+8
$0F5C	$2E0B	    			DECFSZ	STACK_11, F, 0
$0F5E	$D001	    			BRA	$+2
$0F60	$D003	    			BRA	$+4
$0F62	$2E0A	    			DECFSZ	STACK_10, F, 0
$0F64	$D7FE	    			BRA	$-1
$0F66	$D7FA	    			BRA	$-5
$0F68	$D7F6	    			BRA	$-9
$0F6A	$0E1A	    			MOVLW	26
$0F6C	$6E0B	    			MOVWF	STACK_11, 0
$0F6E	$0EFF	    			MOVLW	255
$0F70	$6E0A	    			MOVWF	STACK_10, 0
$0F72	$2E0B	    			DECFSZ	STACK_11, F, 0
$0F74	$D001	    			BRA	$+2
$0F76	$D003	    			BRA	$+4
$0F78	$2E0A	    			DECFSZ	STACK_10, F, 0
$0F7A	$D7FE	    			BRA	$-1
$0F7C	$D7FA	    			BRA	$-5
$0F7E	$0E42	    			MOVLW	66
$0F80	$6E0A	    			MOVWF	STACK_10, 0
$0F82	$2E0A	    			DECFSZ	STACK_10, F, 0
$0F84	$D7FE	    			BRA	$-1
;display.c,239 :: 			while (!PORTB.F3) //boton star
$0F86	$	L_numeroVueltas_38:
$0F86	$B681	    			BTFSC	PORTB, 3, 0
$0F88	$D061	    			BRA	L_numeroVueltas_39
;display.c,242 :: 			if (PORTB.F4)
$0F8A	$A881	    			BTFSS	PORTB, 4, 0
$0F8C	$D025	    			BRA	L_numeroVueltas_40
;display.c,244 :: 			vueltas ++; //aumentar
$0F8E	$2A44	    			INCF	numeroVueltas_vueltas_L0, 1, 0
;display.c,245 :: 			if (vueltas == 0) vueltas =1;
$0F90	$5044	    			MOVF	numeroVueltas_vueltas_L0, 0, 0
$0F92	$0A00	    			XORLW	0
$0F94	$E102	    			BNZ	L_numeroVueltas_41
$0F96	$0E01	    			MOVLW	1
$0F98	$6E44	    			MOVWF	numeroVueltas_vueltas_L0, 0
$0F9A	$	L_numeroVueltas_41:
;display.c,246 :: 			delay_ms(900);
$0F9A	$0E05	    			MOVLW	5
$0F9C	$6E0C	    			MOVWF	STACK_12, 0
$0F9E	$0EFF	    			MOVLW	255
$0FA0	$6E0B	    			MOVWF	STACK_11, 0
$0FA2	$0EFF	    			MOVLW	255
$0FA4	$6E0A	    			MOVWF	STACK_10, 0
$0FA6	$2E0C	    			DECFSZ	STACK_12, F, 0
$0FA8	$D001	    			BRA	$+2
$0FAA	$D007	    			BRA	$+8
$0FAC	$2E0B	    			DECFSZ	STACK_11, F, 0
$0FAE	$D001	    			BRA	$+2
$0FB0	$D003	    			BRA	$+4
$0FB2	$2E0A	    			DECFSZ	STACK_10, F, 0
$0FB4	$D7FE	    			BRA	$-1
$0FB6	$D7FA	    			BRA	$-5
$0FB8	$D7F6	    			BRA	$-9
$0FBA	$0E96	    			MOVLW	150
$0FBC	$6E0B	    			MOVWF	STACK_11, 0
$0FBE	$0EFF	    			MOVLW	255
$0FC0	$6E0A	    			MOVWF	STACK_10, 0
$0FC2	$2E0B	    			DECFSZ	STACK_11, F, 0
$0FC4	$D001	    			BRA	$+2
$0FC6	$D003	    			BRA	$+4
$0FC8	$2E0A	    			DECFSZ	STACK_10, F, 0
$0FCA	$D7FE	    			BRA	$-1
$0FCC	$D7FA	    			BRA	$-5
$0FCE	$0EBD	    			MOVLW	189
$0FD0	$6E0A	    			MOVWF	STACK_10, 0
$0FD2	$2E0A	    			DECFSZ	STACK_10, F, 0
$0FD4	$D7FE	    			BRA	$-1
$0FD6	$0000	    			NOP
;display.c,247 :: 			}
$0FD8	$	L_numeroVueltas_40:
;display.c,249 :: 			if (PORTC.F7)
$0FD8	$AE82	    			BTFSS	PORTC, 7, 0
$0FDA	$D023	    			BRA	L_numeroVueltas_42
;display.c,251 :: 			if (vueltas != 1 ) vueltas--;
$0FDC	$5044	    			MOVF	numeroVueltas_vueltas_L0, 0, 0
$0FDE	$0A01	    			XORLW	1
$0FE0	$A4D8	    			BTFSS	STATUS, Z, 0
$0FE2	$0644	    			DECF	numeroVueltas_vueltas_L0, 1, 0
$0FE4	$	L_numeroVueltas_43:
;display.c,252 :: 			delay_ms(900);
$0FE4	$0E05	    			MOVLW	5
$0FE6	$6E0C	    			MOVWF	STACK_12, 0
$0FE8	$0EFF	    			MOVLW	255
$0FEA	$6E0B	    			MOVWF	STACK_11, 0
$0FEC	$0EFF	    			MOVLW	255
$0FEE	$6E0A	    			MOVWF	STACK_10, 0
$0FF0	$2E0C	    			DECFSZ	STACK_12, F, 0
$0FF2	$D001	    			BRA	$+2
$0FF4	$D007	    			BRA	$+8
$0FF6	$2E0B	    			DECFSZ	STACK_11, F, 0
$0FF8	$D001	    			BRA	$+2
$0FFA	$D003	    			BRA	$+4
$0FFC	$2E0A	    			DECFSZ	STACK_10, F, 0
$0FFE	$D7FE	    			BRA	$-1
$1000	$D7FA	    			BRA	$-5
$1002	$D7F6	    			BRA	$-9
$1004	$0E96	    			MOVLW	150
$1006	$6E0B	    			MOVWF	STACK_11, 0
$1008	$0EFF	    			MOVLW	255
$100A	$6E0A	    			MOVWF	STACK_10, 0
$100C	$2E0B	    			DECFSZ	STACK_11, F, 0
$100E	$D001	    			BRA	$+2
$1010	$D003	    			BRA	$+4
$1012	$2E0A	    			DECFSZ	STACK_10, F, 0
$1014	$D7FE	    			BRA	$-1
$1016	$D7FA	    			BRA	$-5
$1018	$0EBD	    			MOVLW	189
$101A	$6E0A	    			MOVWF	STACK_10, 0
$101C	$2E0A	    			DECFSZ	STACK_10, F, 0
$101E	$D7FE	    			BRA	$-1
$1020	$0000	    			NOP
;display.c,253 :: 			}
$1022	$	L_numeroVueltas_42:
;display.c,255 :: 			WordToStr(vueltas,auxVueltas);
$1022	$C044	F06E			MOVFF	numeroVueltas_vueltas_L0, FARG_WordToStr+0
$1026	$0E00	    			MOVLW	0
$1028	$6E6F	    			MOVWF	FARG_WordToStr+1, 0
$102A	$C045	F070			MOVFF	numeroVueltas_auxVueltas_L0, FARG_WordToStr+2
$102E	$C046	F071			MOVFF	numeroVueltas_auxVueltas_L0+1, FARG_WordToStr+3
$1032	$ECDE	F00A			CALL	_WordToStr
;display.c,256 :: 			Lcd_Out(2,1,auxVueltas);
$1036	$0E02	    			MOVLW	2
$1038	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$103A	$0E01	    			MOVLW	1
$103C	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$103E	$C045	F070			MOVFF	numeroVueltas_auxVueltas_L0, FARG_Lcd_Out+2
$1042	$C046	F071			MOVFF	numeroVueltas_auxVueltas_L0+1, FARG_Lcd_Out+3
$1046	$ECD9	F00C			CALL	_Lcd_Out
;display.c,258 :: 			}
$104A	$D79D	    			BRA	L_numeroVueltas_38
$104C	$	L_numeroVueltas_39:
;display.c,259 :: 			return vueltas;
$104C	$C044	F000			MOVFF	numeroVueltas_vueltas_L0, STACK_0
;display.c,260 :: 			} //fin numeroVueltas
$1050	$0012	    			RETURN
$126E	$	_decision:
;display.c,72 :: 			void decision(int pwmConcreto, int nivel)
;display.c,73 :: 			{ pwmConcreto = pwmConcreto - (pwmConcreto * 2 * nivel /100);
$126E	$0E01	    			MOVLW	1
$1270	$6E04	    			MOVWF	STACK_4, 0
$1272	$C02E	F000			MOVFF	FARG_decision+0, STACK_0
$1276	$C02F	F001			MOVFF	FARG_decision+1, STACK_0+1
$127A	$5004	    			MOVF	STACK_4, 0, 0
$127C	$	L_decision_83:
$127C	$E005	    			BZ	L_decision_84
$127E	$3600	    			RLCF	STACK_0, 1, 0
$1280	$9000	    			BCF	STACK_0, 0, 0
$1282	$3601	    			RLCF	STACK_0+1, 1, 0
$1284	$0FFF	    			ADDLW	255
$1286	$D7FA	    			BRA	L_decision_83
$1288	$	L_decision_84:
$1288	$C030	F004			MOVFF	FARG_decision+2, STACK_4
$128C	$C031	F005			MOVFF	FARG_decision+3, STACK_4+1
$1290	$EC92	F00D			CALL	_mul_16x16_s
$1294	$0E64	    			MOVLW	100
$1296	$6E04	    			MOVWF	STACK_4, 0
$1298	$0E00	    			MOVLW	0
$129A	$6E05	    			MOVWF	STACK_4+1, 0
$129C	$EC79	F00A			CALL	_div_16x16_s
$12A0	$5000	    			MOVF	STACK_0, 0, 0
$12A2	$5E2E	    			SUBWF	FARG_decision+0, 1, 0
$12A4	$5001	    			MOVF	STACK_0+1, 0, 0
$12A6	$5A2F	    			SUBWFB	FARG_decision+1, 1, 0
;display.c,74 :: 			if (tiempoVuelta > 1) pwmConcreto = pwmConcreto * tiempoVuelta;
$12A8	$C01F	F004			MOVFF	_tiempovuelta, STACK_4
$12AC	$C020	F005			MOVFF	_tiempovuelta+1, STACK_4+1
$12B0	$C021	F006			MOVFF	_tiempovuelta+2, STACK_4+2
$12B4	$C022	F007			MOVFF	_tiempovuelta+3, STACK_4+3
$12B8	$0E00	    			MOVLW	0
$12BA	$6E00	    			MOVWF	STACK_0, 0
$12BC	$0E00	    			MOVLW	0
$12BE	$6E01	    			MOVWF	STACK_0+1, 0
$12C0	$0E00	    			MOVLW	0
$12C2	$6E02	    			MOVWF	STACK_0+2, 0
$12C4	$0E7F	    			MOVLW	127
$12C6	$6E03	    			MOVWF	STACK_0+3, 0
$12C8	$EC11	F00A			CALL	_compare_double
$12CC	$0E01	    			MOVLW	1
$12CE	$B0D8	    			BTFSC	STATUS, C, 0
$12D0	$0E00	    			MOVLW	0
$12D2	$6E00	    			MOVWF	STACK_0, 0
$12D4	$5200	    			MOVF	STACK_0, 1, 0
$12D6	$E016	    			BZ	L_decision_8
$12D8	$C02E	F000			MOVFF	FARG_decision+0, STACK_0
$12DC	$C02F	F001			MOVFF	FARG_decision+1, STACK_0+1
$12E0	$EC21	F00E			CALL	_int2double
$12E4	$C01F	F004			MOVFF	_tiempovuelta, STACK_4
$12E8	$C020	F005			MOVFF	_tiempovuelta+1, STACK_4+1
$12EC	$C021	F006			MOVFF	_tiempovuelta+2, STACK_4+2
$12F0	$C022	F007			MOVFF	_tiempovuelta+3, STACK_4+3
$12F4	$EC29	F008			CALL	_mul_32x32_fp
$12F8	$ECA6	F009			CALL	_double2int
$12FC	$C000	F02E			MOVFF	STACK_0, FARG_decision+0
$1300	$C001	F02F			MOVFF	STACK_0+1, FARG_decision+1
$1304	$	L_decision_8:
;display.c,76 :: 			if (auxpwm > pwmConcreto)
$1304	$0100	    			MOVLB	0
$1306	$0E80	    			MOVLW	128
$1308	$182F	    			XORWF	FARG_decision+1, 0, 0
$130A	$6E00	    			MOVWF	STACK_0, 0
$130C	$0E80	    			MOVLW	128
$130E	$1829	    			XORWF	_auxpwm+1, 0, 0
$1310	$5C00	    			SUBWF	STACK_0, 0, 0
$1312	$E102	    			BNZ	L_decision_85
$1314	$5028	    			MOVF	_auxpwm, 0, 0
$1316	$5C2E	    			SUBWF	FARG_decision+0, 0, 0
$1318	$	L_decision_85:
$1318	$0100	    			MOVLB	0
$131A	$E207	    			BC	L_decision_9
;display.c,77 :: 			decelerar(pwmConcreto);
$131C	$C02E	F06E			MOVFF	FARG_decision+0, FARG_decelerar+0
$1320	$C02F	F06F			MOVFF	FARG_decision+1, FARG_decelerar+1
$1324	$ECF6	F00B			CALL	_decelerar
$1328	$D010	    			BRA	L_decision_10
$132A	$	L_decision_9:
;display.c,78 :: 			else if (auxpwm < pwmConcreto)
$132A	$0E80	    			MOVLW	128
$132C	$1829	    			XORWF	_auxpwm+1, 0, 0
$132E	$6E00	    			MOVWF	STACK_0, 0
$1330	$0E80	    			MOVLW	128
$1332	$182F	    			XORWF	FARG_decision+1, 0, 0
$1334	$5C00	    			SUBWF	STACK_0, 0, 0
$1336	$E102	    			BNZ	L_decision_86
$1338	$502E	    			MOVF	FARG_decision+0, 0, 0
$133A	$5C28	    			SUBWF	_auxpwm, 0, 0
$133C	$	L_decision_86:
$133C	$E206	    			BC	L_decision_11
;display.c,79 :: 			acelerar(pwmConcreto);
$133E	$C02E	F06E			MOVFF	FARG_decision+0, FARG_acelerar+0
$1342	$C02F	F06F			MOVFF	FARG_decision+1, FARG_acelerar+1
$1346	$EC44	F00C			CALL	_acelerar
$134A	$	L_decision_11:
$134A	$	L_decision_10:
;display.c,81 :: 			}
$134A	$0012	    			RETURN
$167C	$	_IntToStr:
$167C	$6A33	    			CLRF	IntToStr_negative_L0, 0
$167E	$C02E	F034			MOVFF	FARG_IntToStr+0, IntToStr_inword_L0
$1682	$C02F	F035			MOVFF	FARG_IntToStr+1, IntToStr_inword_L0+1
$1686	$0E80	    			MOVLW	128
$1688	$182F	    			XORWF	FARG_IntToStr+1, 0, 0
$168A	$6E00	    			MOVWF	STACK_0, 0
$168C	$0E80	    			MOVLW	128
$168E	$5C00	    			SUBWF	STACK_0, 0, 0
$1690	$E102	    			BNZ	L_IntToStr_52
$1692	$0E00	    			MOVLW	0
$1694	$5C2E	    			SUBWF	FARG_IntToStr+0, 0, 0
$1696	$	L_IntToStr_52:
$1696	$E209	    			BC	L_IntToStr_12
$1698	$0E01	    			MOVLW	1
$169A	$6E33	    			MOVWF	IntToStr_negative_L0, 0
$169C	$502E	    			MOVF	FARG_IntToStr+0, 0, 0
$169E	$0800	    			SUBLW	0
$16A0	$6E34	    			MOVWF	IntToStr_inword_L0, 0
$16A2	$C02F	F035			MOVFF	FARG_IntToStr+1, IntToStr_inword_L0+1
$16A6	$6AE8	    			CLRF	WREG, 0
$16A8	$5635	    			SUBFWB	IntToStr_inword_L0+1, 1, 0
$16AA	$	L_IntToStr_12:
$16AA	$C034	F06E			MOVFF	IntToStr_inword_L0, FARG_WordToStr+0
$16AE	$C035	F06F			MOVFF	IntToStr_inword_L0+1, FARG_WordToStr+1
$16B2	$C030	F070			MOVFF	FARG_IntToStr+2, FARG_WordToStr+2
$16B6	$C031	F071			MOVFF	FARG_IntToStr+3, FARG_WordToStr+3
$16BA	$ECDE	F00A			CALL	_WordToStr
$16BE	$0E06	    			MOVLW	6
$16C0	$6E32	    			MOVWF	IntToStr_i_L0, 0
$16C2	$	L_IntToStr_13:
$16C2	$5032	    			MOVF	IntToStr_i_L0, 0, 0
$16C4	$0800	    			SUBLW	0
$16C6	$E217	    			BC	L_IntToStr_14
$16C8	$5032	    			MOVF	IntToStr_i_L0, 0, 0
$16CA	$2430	    			ADDWF	FARG_IntToStr+2, 0, 0
$16CC	$6EE1	    			MOVWF	FSR1L, 0
$16CE	$0E00	    			MOVLW	0
$16D0	$2031	    			ADDWFC	FARG_IntToStr+3, 0, 0
$16D2	$6EE2	    			MOVWF	FSR1L+1, 0
$16D4	$0432	    			DECF	IntToStr_i_L0, 0, 0
$16D6	$6E00	    			MOVWF	STACK_0, 0
$16D8	$6A01	    			CLRF	STACK_0+1, 0
$16DA	$0E00	    			MOVLW	0
$16DC	$5A01	    			SUBWFB	STACK_0+1, 1, 0
$16DE	$5000	    			MOVF	STACK_0, 0, 0
$16E0	$2430	    			ADDWF	FARG_IntToStr+2, 0, 0
$16E2	$6EE9	    			MOVWF	FSR0L, 0
$16E4	$5001	    			MOVF	STACK_0+1, 0, 0
$16E6	$2031	    			ADDWFC	FARG_IntToStr+3, 0, 0
$16E8	$6EEA	    			MOVWF	FSR0L+1, 0
$16EA	$CFEE	F000			MOVFF	POSTINC0, STACK_0
$16EE	$C000	FFE6			MOVFF	STACK_0, POSTINC1
$16F2	$0632	    			DECF	IntToStr_i_L0, 1, 0
$16F4	$D7E6	    			BRA	L_IntToStr_13
$16F6	$	L_IntToStr_14:
$16F6	$C030	FFE1			MOVFF	FARG_IntToStr+2, FSR1L
$16FA	$C031	FFE2			MOVFF	FARG_IntToStr+3, FSR1H
$16FE	$0E20	    			MOVLW	32
$1700	$6EE6	    			MOVWF	POSTINC1, 0
$1702	$5233	    			MOVF	IntToStr_negative_L0, 1, 0
$1704	$E017	    			BZ	L_IntToStr_15
$1706	$6A32	    			CLRF	IntToStr_i_L0, 0
$1708	$	L_IntToStr_16:
$1708	$5032	    			MOVF	IntToStr_i_L0, 0, 0
$170A	$2430	    			ADDWF	FARG_IntToStr+2, 0, 0
$170C	$6EE9	    			MOVWF	FSR0L, 0
$170E	$0E00	    			MOVLW	0
$1710	$2031	    			ADDWFC	FARG_IntToStr+3, 0, 0
$1712	$6EEA	    			MOVWF	FSR0L+1, 0
$1714	$CFEE	F002			MOVFF	POSTINC0, STACK_2
$1718	$5002	    			MOVF	STACK_2, 0, 0
$171A	$0A20	    			XORLW	32
$171C	$E102	    			BNZ	L_IntToStr_17
$171E	$2A32	    			INCF	IntToStr_i_L0, 1, 0
$1720	$D7F3	    			BRA	L_IntToStr_16
$1722	$	L_IntToStr_17:
$1722	$0632	    			DECF	IntToStr_i_L0, 1, 0
$1724	$5032	    			MOVF	IntToStr_i_L0, 0, 0
$1726	$2430	    			ADDWF	FARG_IntToStr+2, 0, 0
$1728	$6EE1	    			MOVWF	FSR1L, 0
$172A	$0E00	    			MOVLW	0
$172C	$2031	    			ADDWFC	FARG_IntToStr+3, 0, 0
$172E	$6EE2	    			MOVWF	FSR1L+1, 0
$1730	$0E2D	    			MOVLW	45
$1732	$6EE6	    			MOVWF	POSTINC1, 0
$1734	$	L_IntToStr_15:
$1734	$0012	    			RETURN
$02AE	$	_main:
$02AE	$0E61	    			MOVLW	97
$02B0	$0101	    			MOVLB	1
$02B2	$6F01	    			MOVWF	lstr13_display+0, 1
$02B4	$0E73	    			MOVLW	115
$02B6	$6F02	    			MOVWF	lstr13_display+1, 1
$02B8	$0E66	    			MOVLW	102
$02BA	$6F03	    			MOVWF	lstr13_display+2, 1
$02BC	$0E64	    			MOVLW	100
$02BE	$6F04	    			MOVWF	lstr13_display+3, 1
$02C0	$0E61	    			MOVLW	97
$02C2	$6F05	    			MOVWF	lstr13_display+4, 1
$02C4	$0E73	    			MOVLW	115
$02C6	$6F06	    			MOVWF	lstr13_display+5, 1
$02C8	$0E66	    			MOVLW	102
$02CA	$6F07	    			MOVWF	lstr13_display+6, 1
$02CC	$0E64	    			MOVLW	100
$02CE	$6F08	    			MOVWF	lstr13_display+7, 1
$02D0	$0E61	    			MOVLW	97
$02D2	$6F09	    			MOVWF	lstr13_display+8, 1
$02D4	$0E73	    			MOVLW	115
$02D6	$6F0A	    			MOVWF	lstr13_display+9, 1
$02D8	$0E66	    			MOVLW	102
$02DA	$6F0B	    			MOVWF	lstr13_display+10, 1
$02DC	$0E73	    			MOVLW	115
$02DE	$6F0C	    			MOVWF	lstr13_display+11, 1
$02E0	$0E61	    			MOVLW	97
$02E2	$6F0D	    			MOVWF	lstr13_display+12, 1
$02E4	$0E64	    			MOVLW	100
$02E6	$6F0E	    			MOVWF	lstr13_display+13, 1
$02E8	$0E66	    			MOVLW	102
$02EA	$6F0F	    			MOVWF	lstr13_display+14, 1
$02EC	$6B10	    			CLRF	lstr13_display+15, 1
$02EE	$0E61	    			MOVLW	97
$02F0	$6F11	    			MOVWF	lstr14_display+0, 1
$02F2	$0E73	    			MOVLW	115
$02F4	$6F12	    			MOVWF	lstr14_display+1, 1
$02F6	$0E66	    			MOVLW	102
$02F8	$6F13	    			MOVWF	lstr14_display+2, 1
$02FA	$0E61	    			MOVLW	97
$02FC	$6F14	    			MOVWF	lstr14_display+3, 1
$02FE	$0E73	    			MOVLW	115
$0300	$6F15	    			MOVWF	lstr14_display+4, 1
$0302	$0E66	    			MOVLW	102
$0304	$6F16	    			MOVWF	lstr14_display+5, 1
$0306	$0E61	    			MOVLW	97
$0308	$6F17	    			MOVWF	lstr14_display+6, 1
$030A	$0E73	    			MOVLW	115
$030C	$6F18	    			MOVWF	lstr14_display+7, 1
$030E	$0E66	    			MOVLW	102
$0310	$6F19	    			MOVWF	lstr14_display+8, 1
$0312	$0E61	    			MOVLW	97
$0314	$6F1A	    			MOVWF	lstr14_display+9, 1
$0316	$0E73	    			MOVLW	115
$0318	$6F1B	    			MOVWF	lstr14_display+10, 1
$031A	$0E66	    			MOVLW	102
$031C	$6F1C	    			MOVWF	lstr14_display+11, 1
$031E	$0E73	    			MOVLW	115
$0320	$6F1D	    			MOVWF	lstr14_display+12, 1
$0322	$0E61	    			MOVLW	97
$0324	$6F1E	    			MOVWF	lstr14_display+13, 1
$0326	$0E66	    			MOVLW	102
$0328	$6F1F	    			MOVWF	lstr14_display+14, 1
$032A	$0E61	    			MOVLW	97
$032C	$6F20	    			MOVWF	lstr14_display+15, 1
$032E	$0E73	    			MOVLW	115
$0330	$6F21	    			MOVWF	lstr14_display+16, 1
$0332	$0E64	    			MOVLW	100
$0334	$6F22	    			MOVWF	lstr14_display+17, 1
$0336	$6B23	    			CLRF	lstr14_display+18, 1
$0338	$0E53	    			MOVLW	83
$033A	$6F24	    			MOVWF	lstr15_display+0, 1
$033C	$0E61	    			MOVLW	97
$033E	$6F25	    			MOVWF	lstr15_display+1, 1
$0340	$0E6C	    			MOVLW	108
$0342	$6F26	    			MOVWF	lstr15_display+2, 1
$0344	$0E75	    			MOVLW	117
$0346	$6F27	    			MOVWF	lstr15_display+3, 1
$0348	$0E64	    			MOVLW	100
$034A	$6F28	    			MOVWF	lstr15_display+4, 1
$034C	$0E6F	    			MOVLW	111
$034E	$6F29	    			MOVWF	lstr15_display+5, 1
$0350	$0E73	    			MOVLW	115
$0352	$6F2A	    			MOVWF	lstr15_display+6, 1
$0354	$6B2B	    			CLRF	lstr15_display+7, 1
$0356	$0E54	    			MOVLW	84
$0358	$6F2C	    			MOVWF	lstr16_display+0, 1
$035A	$0E6F	    			MOVLW	111
$035C	$6F2D	    			MOVWF	lstr16_display+1, 1
$035E	$0E64	    			MOVLW	100
$0360	$6F2E	    			MOVWF	lstr16_display+2, 1
$0362	$0E6F	    			MOVLW	111
$0364	$6F2F	    			MOVWF	lstr16_display+3, 1
$0366	$0E20	    			MOVLW	32
$0368	$6F30	    			MOVWF	lstr16_display+4, 1
$036A	$0E63	    			MOVLW	99
$036C	$6F31	    			MOVWF	lstr16_display+5, 1
$036E	$0E6F	    			MOVLW	111
$0370	$6F32	    			MOVWF	lstr16_display+6, 1
$0372	$0E72	    			MOVLW	114
$0374	$6F33	    			MOVWF	lstr16_display+7, 1
$0376	$0E72	    			MOVLW	114
$0378	$6F34	    			MOVWF	lstr16_display+8, 1
$037A	$0E65	    			MOVLW	101
$037C	$6F35	    			MOVWF	lstr16_display+9, 1
$037E	$0E63	    			MOVLW	99
$0380	$6F36	    			MOVWF	lstr16_display+10, 1
$0382	$0E74	    			MOVLW	116
$0384	$6F37	    			MOVWF	lstr16_display+11, 1
$0386	$0E6F	    			MOVLW	111
$0388	$6F38	    			MOVWF	lstr16_display+12, 1
$038A	$6B39	    			CLRF	lstr16_display+13, 1
$038C	$0E43	    			MOVLW	67
$038E	$6F3A	    			MOVWF	lstr17_display+0, 1
$0390	$0E6F	    			MOVLW	111
$0392	$6F3B	    			MOVWF	lstr17_display+1, 1
$0394	$0E6D	    			MOVLW	109
$0396	$6F3C	    			MOVWF	lstr17_display+2, 1
$0398	$0E69	    			MOVLW	105
$039A	$6F3D	    			MOVWF	lstr17_display+3, 1
$039C	$0E65	    			MOVLW	101
$039E	$6F3E	    			MOVWF	lstr17_display+4, 1
$03A0	$0E6E	    			MOVLW	110
$03A2	$6F3F	    			MOVWF	lstr17_display+5, 1
$03A4	$0E7A	    			MOVLW	122
$03A6	$6F40	    			MOVWF	lstr17_display+6, 1
$03A8	$0E61	    			MOVLW	97
$03AA	$6F41	    			MOVWF	lstr17_display+7, 1
$03AC	$0E20	    			MOVLW	32
$03AE	$6F42	    			MOVWF	lstr17_display+8, 1
$03B0	$0E65	    			MOVLW	101
$03B2	$6F43	    			MOVWF	lstr17_display+9, 1
$03B4	$0E6C	    			MOVLW	108
$03B6	$6F44	    			MOVWF	lstr17_display+10, 1
$03B8	$0E20	    			MOVLW	32
$03BA	$6F45	    			MOVWF	lstr17_display+11, 1
$03BC	$0E6A	    			MOVLW	106
$03BE	$6F46	    			MOVWF	lstr17_display+12, 1
$03C0	$0E75	    			MOVLW	117
$03C2	$6F47	    			MOVWF	lstr17_display+13, 1
$03C4	$0E65	    			MOVLW	101
$03C6	$6F48	    			MOVWF	lstr17_display+14, 1
$03C8	$0E67	    			MOVLW	103
$03CA	$6F49	    			MOVWF	lstr17_display+15, 1
$03CC	$0E6F	    			MOVLW	111
$03CE	$6F4A	    			MOVWF	lstr17_display+16, 1
$03D0	$6B4B	    			CLRF	lstr17_display+17, 1
$03D2	$0E54	    			MOVLW	84
$03D4	$6F4C	    			MOVWF	lstr18_display+0, 1
$03D6	$0E72	    			MOVLW	114
$03D8	$6F4D	    			MOVWF	lstr18_display+1, 1
$03DA	$0E65	    			MOVLW	101
$03DC	$6F4E	    			MOVWF	lstr18_display+2, 1
$03DE	$0E73	    			MOVLW	115
$03E0	$6F4F	    			MOVWF	lstr18_display+3, 1
$03E2	$6B50	    			CLRF	lstr18_display+4, 1
$03E4	$0E44	    			MOVLW	68
$03E6	$6F51	    			MOVWF	lstr19_display+0, 1
$03E8	$0E6F	    			MOVLW	111
$03EA	$6F52	    			MOVWF	lstr19_display+1, 1
$03EC	$0E73	    			MOVLW	115
$03EE	$6F53	    			MOVWF	lstr19_display+2, 1
$03F0	$6B54	    			CLRF	lstr19_display+3, 1
$03F2	$0E55	    			MOVLW	85
$03F4	$6F55	    			MOVWF	lstr20_display+0, 1
$03F6	$0E6E	    			MOVLW	110
$03F8	$6F56	    			MOVWF	lstr20_display+1, 1
$03FA	$0E6F	    			MOVLW	111
$03FC	$6F57	    			MOVWF	lstr20_display+2, 1
$03FE	$6B58	    			CLRF	lstr20_display+3, 1
$0400	$0E41	    			MOVLW	65
$0402	$6F59	    			MOVWF	lstr21_display+0, 1
$0404	$0E64	    			MOVLW	100
$0406	$6F5A	    			MOVWF	lstr21_display+1, 1
$0408	$0E65	    			MOVLW	101
$040A	$6F5B	    			MOVWF	lstr21_display+2, 1
$040C	$0E6C	    			MOVLW	108
$040E	$6F5C	    			MOVWF	lstr21_display+3, 1
$0410	$0E61	    			MOVLW	97
$0412	$6F5D	    			MOVWF	lstr21_display+4, 1
$0414	$0E6E	    			MOVLW	110
$0416	$6F5E	    			MOVWF	lstr21_display+5, 1
$0418	$0E74	    			MOVLW	116
$041A	$6F5F	    			MOVWF	lstr21_display+6, 1
$041C	$0E65	    			MOVLW	101
$041E	$6F60	    			MOVWF	lstr21_display+7, 1
$0420	$0EA1	    			MOVLW	161
$0422	$6F61	    			MOVWF	lstr21_display+8, 1
$0424	$0EA1	    			MOVLW	161
$0426	$6F62	    			MOVWF	lstr21_display+9, 1
$0428	$0EA1	    			MOVLW	161
$042A	$6F63	    			MOVWF	lstr21_display+10, 1
$042C	$6B64	    			CLRF	lstr21_display+11, 1
$042E	$0E50	    			MOVLW	80
$0430	$6F65	    			MOVWF	lstr22_display+0, 1
$0432	$0E6C	    			MOVLW	108
$0434	$6F66	    			MOVWF	lstr22_display+1, 1
$0436	$0E61	    			MOVLW	97
$0438	$6F67	    			MOVWF	lstr22_display+2, 1
$043A	$0E79	    			MOVLW	121
$043C	$6F68	    			MOVWF	lstr22_display+3, 1
$043E	$0E65	    			MOVLW	101
$0440	$6F69	    			MOVWF	lstr22_display+4, 1
$0442	$0E72	    			MOVLW	114
$0444	$6F6A	    			MOVWF	lstr22_display+5, 1
$0446	$6B6B	    			CLRF	lstr22_display+6, 1
$0448	$0E50	    			MOVLW	80
$044A	$6F6C	    			MOVWF	lstr23_display+0, 1
$044C	$0E72	    			MOVLW	114
$044E	$6F6D	    			MOVWF	lstr23_display+1, 1
$0450	$0E6F	    			MOVLW	111
$0452	$6F6E	    			MOVWF	lstr23_display+2, 1
$0454	$0E67	    			MOVLW	103
$0456	$6F6F	    			MOVWF	lstr23_display+3, 1
$0458	$0E72	    			MOVLW	114
$045A	$6F70	    			MOVWF	lstr23_display+4, 1
$045C	$0E61	    			MOVLW	97
$045E	$6F71	    			MOVWF	lstr23_display+5, 1
$0460	$0E6D	    			MOVLW	109
$0462	$6F72	    			MOVWF	lstr23_display+6, 1
$0464	$6B73	    			CLRF	lstr23_display+7, 1
$0466	$0E48	    			MOVLW	72
$0468	$6F74	    			MOVWF	lstr24_display+0, 1
$046A	$0E61	    			MOVLW	97
$046C	$6F75	    			MOVWF	lstr24_display+1, 1
$046E	$0E73	    			MOVLW	115
$0470	$6F76	    			MOVWF	lstr24_display+2, 1
$0472	$0E20	    			MOVLW	32
$0474	$6F77	    			MOVWF	lstr24_display+3, 1
$0476	$0E70	    			MOVLW	112
$0478	$6F78	    			MOVWF	lstr24_display+4, 1
$047A	$0E65	    			MOVLW	101
$047C	$6F79	    			MOVWF	lstr24_display+5, 1
$047E	$0E72	    			MOVLW	114
$0480	$6F7A	    			MOVWF	lstr24_display+6, 1
$0482	$0E64	    			MOVLW	100
$0484	$6F7B	    			MOVWF	lstr24_display+7, 1
$0486	$0E69	    			MOVLW	105
$0488	$6F7C	    			MOVWF	lstr24_display+8, 1
$048A	$0E64	    			MOVLW	100
$048C	$6F7D	    			MOVWF	lstr24_display+9, 1
$048E	$0E6F	    			MOVLW	111
$0490	$6F7E	    			MOVWF	lstr24_display+10, 1
$0492	$6B7F	    			CLRF	lstr24_display+11, 1
$0494	$0E48	    			MOVLW	72
$0496	$6F80	    			MOVWF	lstr25_display+0, 1
$0498	$0E61	    			MOVLW	97
$049A	$6F81	    			MOVWF	lstr25_display+1, 1
$049C	$0E73	    			MOVLW	115
$049E	$6F82	    			MOVWF	lstr25_display+2, 1
$04A0	$0E20	    			MOVLW	32
$04A2	$6F83	    			MOVWF	lstr25_display+3, 1
$04A4	$0E67	    			MOVLW	103
$04A6	$6F84	    			MOVWF	lstr25_display+4, 1
$04A8	$0E61	    			MOVLW	97
$04AA	$6F85	    			MOVWF	lstr25_display+5, 1
$04AC	$0E6E	    			MOVLW	110
$04AE	$6F86	    			MOVWF	lstr25_display+6, 1
$04B0	$0E61	    			MOVLW	97
$04B2	$6F87	    			MOVWF	lstr25_display+7, 1
$04B4	$0E64	    			MOVLW	100
$04B6	$6F88	    			MOVWF	lstr25_display+8, 1
$04B8	$0E6F	    			MOVLW	111
$04BA	$6F89	    			MOVWF	lstr25_display+9, 1
$04BC	$6B8A	    			CLRF	lstr25_display+10, 1
$04BE	$0E48	    			MOVLW	72
$04C0	$6F8B	    			MOVWF	lstr26_display+0, 1
$04C2	$0E61	    			MOVLW	97
$04C4	$6F8C	    			MOVWF	lstr26_display+1, 1
$04C6	$0E73	    			MOVLW	115
$04C8	$6F8D	    			MOVWF	lstr26_display+2, 1
$04CA	$0E20	    			MOVLW	32
$04CC	$6F8E	    			MOVWF	lstr26_display+3, 1
$04CE	$0E63	    			MOVLW	99
$04D0	$6F8F	    			MOVWF	lstr26_display+4, 1
$04D2	$0E6F	    			MOVLW	111
$04D4	$6F90	    			MOVWF	lstr26_display+5, 1
$04D6	$0E6D	    			MOVLW	109
$04D8	$6F91	    			MOVWF	lstr26_display+6, 1
$04DA	$0E65	    			MOVLW	101
$04DC	$6F92	    			MOVWF	lstr26_display+7, 1
$04DE	$0E74	    			MOVLW	116
$04E0	$6F93	    			MOVWF	lstr26_display+8, 1
$04E2	$0E69	    			MOVLW	105
$04E4	$6F94	    			MOVWF	lstr26_display+9, 1
$04E6	$0E64	    			MOVLW	100
$04E8	$6F95	    			MOVWF	lstr26_display+10, 1
$04EA	$0E6F	    			MOVLW	111
$04EC	$6F96	    			MOVWF	lstr26_display+11, 1
$04EE	$6B97	    			CLRF	lstr26_display+12, 1
$04F0	$0E66	    			MOVLW	102
$04F2	$6F98	    			MOVWF	lstr27_display+0, 1
$04F4	$0E61	    			MOVLW	97
$04F6	$6F99	    			MOVWF	lstr27_display+1, 1
$04F8	$0E6C	    			MOVLW	108
$04FA	$6F9A	    			MOVWF	lstr27_display+2, 1
$04FC	$0E74	    			MOVLW	116
$04FE	$6F9B	    			MOVWF	lstr27_display+3, 1
$0500	$0E61	    			MOVLW	97
$0502	$6F9C	    			MOVWF	lstr27_display+4, 1
$0504	$0E2C	    			MOVLW	44
$0506	$6F9D	    			MOVWF	lstr27_display+5, 1
$0508	$0E20	    			MOVLW	32
$050A	$6F9E	    			MOVWF	lstr27_display+6, 1
$050C	$0E70	    			MOVLW	112
$050E	$6F9F	    			MOVWF	lstr27_display+7, 1
$0510	$0E69	    			MOVLW	105
$0512	$6FA0	    			MOVWF	lstr27_display+8, 1
$0514	$0E65	    			MOVLW	101
$0516	$6FA1	    			MOVWF	lstr27_display+9, 1
$0518	$0E72	    			MOVLW	114
$051A	$6FA2	    			MOVWF	lstr27_display+10, 1
$051C	$0E64	    			MOVLW	100
$051E	$6FA3	    			MOVWF	lstr27_display+11, 1
$0520	$0E65	    			MOVLW	101
$0522	$6FA4	    			MOVWF	lstr27_display+12, 1
$0524	$0E73	    			MOVLW	115
$0526	$6FA5	    			MOVWF	lstr27_display+13, 1
$0528	$6BA6	    			CLRF	lstr27_display+14, 1
;display.c,296 :: 			void main() {
;display.c,298 :: 			char * textolcd1 = "asfdasfdasfsadf"; //inicializamos valor a texto1lcd
$052A	$0E01	    			MOVLW	lstr13_display
$052C	$6FA7	    			MOVWF	main_textolcd1_L0, 1
$052E	$0E01	    			MOVLW	@lstr13_display
$0530	$6FA8	    			MOVWF	main_textolcd1_L0+1, 1
;display.c,299 :: 			char * textolcd2="asfasfasfasfsafasd";//inicializamos valor a texto2lcd
$0532	$0E11	    			MOVLW	lstr14_display
$0534	$6FA9	    			MOVWF	main_textolcd2_L0, 1
$0536	$0E01	    			MOVLW	@lstr14_display
$0538	$6FAA	    			MOVWF	main_textolcd2_L0+1, 1
;display.c,300 :: 			unsigned short int fallo = 0; //inicializamos valor de fallo
$053A	$6BAB	    			CLRF	main_fallo_L0, 1
;display.c,301 :: 			unsigned int nivel =0;  //inicializamos valor de  nivel
$053C	$6BAC	    			CLRF	main_nivel_L0, 1
$053E	$6BAD	    			CLRF	main_nivel_L0+1, 1
;display.c,302 :: 			auxpwm=0; //inicializamos valor de auxpwm
$0540	$6A28	    			CLRF	_auxpwm, 0
$0542	$6A29	    			CLRF	_auxpwm+1, 0
;display.c,303 :: 			INTCON=0x00;
$0544	$6AF2	    			CLRF	INTCON, 0
;display.c,305 :: 			numeroVueltasCoche=0; //inicializamos valor de numeroVueltasCoche
$0546	$6A18	    			CLRF	_numeroVueltasCoche, 0
;display.c,306 :: 			numeroVueltasJugador=0;//inicializamos valor de numeroVueltasCoche
$0548	$6A15	    			CLRF	_numeroVueltasJugador, 0
;display.c,307 :: 			detInterrupcion=-1; //inicializamos valor de detInterrupcion
$054A	$0EFF	    			MOVLW	255
$054C	$6E16	    			MOVWF	_detInterrupcion, 0
$054E	$0EFF	    			MOVLW	255
$0550	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,308 :: 			contador=0; //inicializamos valor de contador
$0552	$6A19	    			CLRF	_contador, 0
$0554	$6A1A	    			CLRF	_contador+1, 0
$0556	$6A1B	    			CLRF	_contador+2, 0
$0558	$6A1C	    			CLRF	_contador+3, 0
;display.c,309 :: 			nivel=0;
$055A	$6BAC	    			CLRF	main_nivel_L0, 1
$055C	$6BAD	    			CLRF	main_nivel_L0+1, 1
;display.c,313 :: 			delay_ms(2000); // esperamos dos segundos para que tome tensión el LCD de la placa
$055E	$0E0B	    			MOVLW	11
$0560	$6E0C	    			MOVWF	STACK_12, 0
$0562	$0EFF	    			MOVLW	255
$0564	$6E0B	    			MOVWF	STACK_11, 0
$0566	$0EFF	    			MOVLW	255
$0568	$6E0A	    			MOVWF	STACK_10, 0
$056A	$2E0C	    			DECFSZ	STACK_12, F, 0
$056C	$D001	    			BRA	$+2
$056E	$D007	    			BRA	$+8
$0570	$2E0B	    			DECFSZ	STACK_11, F, 0
$0572	$D001	    			BRA	$+2
$0574	$D003	    			BRA	$+4
$0576	$2E0A	    			DECFSZ	STACK_10, F, 0
$0578	$D7FE	    			BRA	$-1
$057A	$D7FA	    			BRA	$-5
$057C	$D7F6	    			BRA	$-9
$057E	$0E33	    			MOVLW	51
$0580	$6E0B	    			MOVWF	STACK_11, 0
$0582	$0EFF	    			MOVLW	255
$0584	$6E0A	    			MOVWF	STACK_10, 0
$0586	$2E0B	    			DECFSZ	STACK_11, F, 0
$0588	$D001	    			BRA	$+2
$058A	$D003	    			BRA	$+4
$058C	$2E0A	    			DECFSZ	STACK_10, F, 0
$058E	$D7FE	    			BRA	$-1
$0590	$D7FA	    			BRA	$-5
$0592	$0E88	    			MOVLW	136
$0594	$6E0A	    			MOVWF	STACK_10, 0
$0596	$2E0A	    			DECFSZ	STACK_10, F, 0
$0598	$D7FE	    			BRA	$-1
;display.c,314 :: 			configuracion();//lanzamos la configuración inicial
$059A	$ECF7	F00D			CALL	_configuracion
;display.c,315 :: 			Lcd_Out(1,1,"Saludos");
$059E	$0E01	    			MOVLW	1
$05A0	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$05A2	$0E01	    			MOVLW	1
$05A4	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$05A6	$0E24	    			MOVLW	lstr15_display
$05A8	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$05AA	$0E01	    			MOVLW	@lstr15_display
$05AC	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$05AE	$ECD9	F00C			CALL	_Lcd_Out
;display.c,320 :: 			recalibrar();
$05B2	$EC90	F006			CALL	_recalibrar
;display.c,325 :: 			PORTD=0x00;
$05B6	$6A83	    			CLRF	PORTD, 0
;display.c,327 :: 			delay_ms(2000);
$05B8	$0E0B	    			MOVLW	11
$05BA	$6E0C	    			MOVWF	STACK_12, 0
$05BC	$0EFF	    			MOVLW	255
$05BE	$6E0B	    			MOVWF	STACK_11, 0
$05C0	$0EFF	    			MOVLW	255
$05C2	$6E0A	    			MOVWF	STACK_10, 0
$05C4	$2E0C	    			DECFSZ	STACK_12, F, 0
$05C6	$D001	    			BRA	$+2
$05C8	$D007	    			BRA	$+8
$05CA	$2E0B	    			DECFSZ	STACK_11, F, 0
$05CC	$D001	    			BRA	$+2
$05CE	$D003	    			BRA	$+4
$05D0	$2E0A	    			DECFSZ	STACK_10, F, 0
$05D2	$D7FE	    			BRA	$-1
$05D4	$D7FA	    			BRA	$-5
$05D6	$D7F6	    			BRA	$-9
$05D8	$0E33	    			MOVLW	51
$05DA	$6E0B	    			MOVWF	STACK_11, 0
$05DC	$0EFF	    			MOVLW	255
$05DE	$6E0A	    			MOVWF	STACK_10, 0
$05E0	$2E0B	    			DECFSZ	STACK_11, F, 0
$05E2	$D001	    			BRA	$+2
$05E4	$D003	    			BRA	$+4
$05E6	$2E0A	    			DECFSZ	STACK_10, F, 0
$05E8	$D7FE	    			BRA	$-1
$05EA	$D7FA	    			BRA	$-5
$05EC	$0E88	    			MOVLW	136
$05EE	$6E0A	    			MOVWF	STACK_10, 0
$05F0	$2E0A	    			DECFSZ	STACK_10, F, 0
$05F2	$D7FE	    			BRA	$-1
;display.c,329 :: 			nivel = seleccionarNivel();
$05F4	$ECA7	F005			CALL	_seleccionarNivel
$05F8	$C000	F1AC			MOVFF	STACK_0, main_nivel_L0
$05FC	$0E00	    			MOVLW	0
$05FE	$0101	    			MOVLB	1
$0600	$6FAD	    			MOVWF	main_nivel_L0+1, 1
;display.c,330 :: 			nivelInterrupt = nivel;
$0602	$C1AC	F01D			MOVFF	main_nivel_L0, _nivelInterrupt
$0606	$C1AD	F01E			MOVFF	main_nivel_L0+1, _nivelInterrupt+1
;display.c,332 :: 			numeroVueltasCoche=numeroVueltas();
$060A	$EC67	F007			CALL	_numeroVueltas
$060E	$C000	F018			MOVFF	STACK_0, _numeroVueltasCoche
;display.c,333 :: 			numeroVueltasJugador=numeroVueltasCoche;
$0612	$C000	F015			MOVFF	STACK_0, _numeroVueltasJugador
;display.c,334 :: 			Lcd_Cmd(Lcd_Clear);
$0616	$0E01	    			MOVLW	1
$0618	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$061A	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,335 :: 			Lcd_Out(1,1,"Todo correcto");
$061E	$0E01	    			MOVLW	1
$0620	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0622	$0E01	    			MOVLW	1
$0624	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0626	$0E2C	    			MOVLW	lstr16_display
$0628	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$062A	$0E01	    			MOVLW	@lstr16_display
$062C	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$062E	$ECD9	F00C			CALL	_Lcd_Out
;display.c,336 :: 			Lcd_Out(2,1,"Comienza el juego");
$0632	$0E02	    			MOVLW	2
$0634	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0636	$0E01	    			MOVLW	1
$0638	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$063A	$0E3A	    			MOVLW	lstr17_display
$063C	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$063E	$0E01	    			MOVLW	@lstr17_display
$0640	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0642	$ECD9	F00C			CALL	_Lcd_Out
;display.c,338 :: 			delay_ms(2000);
$0646	$0E0B	    			MOVLW	11
$0648	$6E0C	    			MOVWF	STACK_12, 0
$064A	$0EFF	    			MOVLW	255
$064C	$6E0B	    			MOVWF	STACK_11, 0
$064E	$0EFF	    			MOVLW	255
$0650	$6E0A	    			MOVWF	STACK_10, 0
$0652	$2E0C	    			DECFSZ	STACK_12, F, 0
$0654	$D001	    			BRA	$+2
$0656	$D007	    			BRA	$+8
$0658	$2E0B	    			DECFSZ	STACK_11, F, 0
$065A	$D001	    			BRA	$+2
$065C	$D003	    			BRA	$+4
$065E	$2E0A	    			DECFSZ	STACK_10, F, 0
$0660	$D7FE	    			BRA	$-1
$0662	$D7FA	    			BRA	$-5
$0664	$D7F6	    			BRA	$-9
$0666	$0E33	    			MOVLW	51
$0668	$6E0B	    			MOVWF	STACK_11, 0
$066A	$0EFF	    			MOVLW	255
$066C	$6E0A	    			MOVWF	STACK_10, 0
$066E	$2E0B	    			DECFSZ	STACK_11, F, 0
$0670	$D001	    			BRA	$+2
$0672	$D003	    			BRA	$+4
$0674	$2E0A	    			DECFSZ	STACK_10, F, 0
$0676	$D7FE	    			BRA	$-1
$0678	$D7FA	    			BRA	$-5
$067A	$0E88	    			MOVLW	136
$067C	$6E0A	    			MOVWF	STACK_10, 0
$067E	$2E0A	    			DECFSZ	STACK_10, F, 0
$0680	$D7FE	    			BRA	$-1
;display.c,339 :: 			Lcd_Cmd(Lcd_Clear);
$0682	$0E01	    			MOVLW	1
$0684	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$0686	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,340 :: 			Lcd_Out(1,1,"Tres");
$068A	$0E01	    			MOVLW	1
$068C	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$068E	$0E01	    			MOVLW	1
$0690	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0692	$0E4C	    			MOVLW	lstr18_display
$0694	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0696	$0E01	    			MOVLW	@lstr18_display
$0698	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$069A	$ECD9	F00C			CALL	_Lcd_Out
;display.c,341 :: 			delay_ms(1000);
$069E	$0E06	    			MOVLW	6
$06A0	$6E0C	    			MOVWF	STACK_12, 0
$06A2	$0EFF	    			MOVLW	255
$06A4	$6E0B	    			MOVWF	STACK_11, 0
$06A6	$0EFF	    			MOVLW	255
$06A8	$6E0A	    			MOVWF	STACK_10, 0
$06AA	$2E0C	    			DECFSZ	STACK_12, F, 0
$06AC	$D001	    			BRA	$+2
$06AE	$D007	    			BRA	$+8
$06B0	$2E0B	    			DECFSZ	STACK_11, F, 0
$06B2	$D001	    			BRA	$+2
$06B4	$D003	    			BRA	$+4
$06B6	$2E0A	    			DECFSZ	STACK_10, F, 0
$06B8	$D7FE	    			BRA	$-1
$06BA	$D7FA	    			BRA	$-5
$06BC	$D7F6	    			BRA	$-9
$06BE	$0E1A	    			MOVLW	26
$06C0	$6E0B	    			MOVWF	STACK_11, 0
$06C2	$0EFF	    			MOVLW	255
$06C4	$6E0A	    			MOVWF	STACK_10, 0
$06C6	$2E0B	    			DECFSZ	STACK_11, F, 0
$06C8	$D001	    			BRA	$+2
$06CA	$D003	    			BRA	$+4
$06CC	$2E0A	    			DECFSZ	STACK_10, F, 0
$06CE	$D7FE	    			BRA	$-1
$06D0	$D7FA	    			BRA	$-5
$06D2	$0E42	    			MOVLW	66
$06D4	$6E0A	    			MOVWF	STACK_10, 0
$06D6	$2E0A	    			DECFSZ	STACK_10, F, 0
$06D8	$D7FE	    			BRA	$-1
;display.c,342 :: 			Lcd_Cmd(Lcd_Clear);
$06DA	$0E01	    			MOVLW	1
$06DC	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$06DE	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,343 :: 			Lcd_Out(1,1,"Dos");
$06E2	$0E01	    			MOVLW	1
$06E4	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$06E6	$0E01	    			MOVLW	1
$06E8	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$06EA	$0E51	    			MOVLW	lstr19_display
$06EC	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$06EE	$0E01	    			MOVLW	@lstr19_display
$06F0	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$06F2	$ECD9	F00C			CALL	_Lcd_Out
;display.c,344 :: 			delay_ms(1000);
$06F6	$0E06	    			MOVLW	6
$06F8	$6E0C	    			MOVWF	STACK_12, 0
$06FA	$0EFF	    			MOVLW	255
$06FC	$6E0B	    			MOVWF	STACK_11, 0
$06FE	$0EFF	    			MOVLW	255
$0700	$6E0A	    			MOVWF	STACK_10, 0
$0702	$2E0C	    			DECFSZ	STACK_12, F, 0
$0704	$D001	    			BRA	$+2
$0706	$D007	    			BRA	$+8
$0708	$2E0B	    			DECFSZ	STACK_11, F, 0
$070A	$D001	    			BRA	$+2
$070C	$D003	    			BRA	$+4
$070E	$2E0A	    			DECFSZ	STACK_10, F, 0
$0710	$D7FE	    			BRA	$-1
$0712	$D7FA	    			BRA	$-5
$0714	$D7F6	    			BRA	$-9
$0716	$0E1A	    			MOVLW	26
$0718	$6E0B	    			MOVWF	STACK_11, 0
$071A	$0EFF	    			MOVLW	255
$071C	$6E0A	    			MOVWF	STACK_10, 0
$071E	$2E0B	    			DECFSZ	STACK_11, F, 0
$0720	$D001	    			BRA	$+2
$0722	$D003	    			BRA	$+4
$0724	$2E0A	    			DECFSZ	STACK_10, F, 0
$0726	$D7FE	    			BRA	$-1
$0728	$D7FA	    			BRA	$-5
$072A	$0E42	    			MOVLW	66
$072C	$6E0A	    			MOVWF	STACK_10, 0
$072E	$2E0A	    			DECFSZ	STACK_10, F, 0
$0730	$D7FE	    			BRA	$-1
;display.c,345 :: 			Lcd_Cmd(Lcd_Clear);
$0732	$0E01	    			MOVLW	1
$0734	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$0736	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,346 :: 			Lcd_Out(1,1,"Uno");
$073A	$0E01	    			MOVLW	1
$073C	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$073E	$0E01	    			MOVLW	1
$0740	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0742	$0E55	    			MOVLW	lstr20_display
$0744	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0746	$0E01	    			MOVLW	@lstr20_display
$0748	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$074A	$ECD9	F00C			CALL	_Lcd_Out
;display.c,347 :: 			delay_ms(1000);
$074E	$0E06	    			MOVLW	6
$0750	$6E0C	    			MOVWF	STACK_12, 0
$0752	$0EFF	    			MOVLW	255
$0754	$6E0B	    			MOVWF	STACK_11, 0
$0756	$0EFF	    			MOVLW	255
$0758	$6E0A	    			MOVWF	STACK_10, 0
$075A	$2E0C	    			DECFSZ	STACK_12, F, 0
$075C	$D001	    			BRA	$+2
$075E	$D007	    			BRA	$+8
$0760	$2E0B	    			DECFSZ	STACK_11, F, 0
$0762	$D001	    			BRA	$+2
$0764	$D003	    			BRA	$+4
$0766	$2E0A	    			DECFSZ	STACK_10, F, 0
$0768	$D7FE	    			BRA	$-1
$076A	$D7FA	    			BRA	$-5
$076C	$D7F6	    			BRA	$-9
$076E	$0E1A	    			MOVLW	26
$0770	$6E0B	    			MOVWF	STACK_11, 0
$0772	$0EFF	    			MOVLW	255
$0774	$6E0A	    			MOVWF	STACK_10, 0
$0776	$2E0B	    			DECFSZ	STACK_11, F, 0
$0778	$D001	    			BRA	$+2
$077A	$D003	    			BRA	$+4
$077C	$2E0A	    			DECFSZ	STACK_10, F, 0
$077E	$D7FE	    			BRA	$-1
$0780	$D7FA	    			BRA	$-5
$0782	$0E42	    			MOVLW	66
$0784	$6E0A	    			MOVWF	STACK_10, 0
$0786	$2E0A	    			DECFSZ	STACK_10, F, 0
$0788	$D7FE	    			BRA	$-1
;display.c,348 :: 			Lcd_Out(1,1,"Adelante¡¡¡");
$078A	$0E01	    			MOVLW	1
$078C	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$078E	$0E01	    			MOVLW	1
$0790	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0792	$0E59	    			MOVLW	lstr21_display
$0794	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0796	$0E01	    			MOVLW	@lstr21_display
$0798	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$079A	$ECD9	F00C			CALL	_Lcd_Out
;display.c,351 :: 			INTCON =0xB0;//activamos las interrupciones
$079E	$0EB0	    			MOVLW	176
$07A0	$6EF2	    			MOVWF	INTCON, 0
;display.c,352 :: 			auxpwm=0; //reseteamos el valor para el control de ancho de pulso
$07A2	$6A28	    			CLRF	_auxpwm, 0
$07A4	$6A29	    			CLRF	_auxpwm+1, 0
;display.c,353 :: 			contador=0; //reseteamos el contador para el tiempo.
$07A6	$6A19	    			CLRF	_contador, 0
$07A8	$6A1A	    			CLRF	_contador+1, 0
$07AA	$6A1B	    			CLRF	_contador+2, 0
$07AC	$6A1C	    			CLRF	_contador+3, 0
;display.c,354 :: 			detInterrupcion=-1; //reseteamos el valor para la detección de las interrupciones
$07AE	$0EFF	    			MOVLW	255
$07B0	$6E16	    			MOVWF	_detInterrupcion, 0
$07B2	$0EFF	    			MOVLW	255
$07B4	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,356 :: 			tiempovuelta=1;
$07B6	$0E00	    			MOVLW	0
$07B8	$6E1F	    			MOVWF	_tiempovuelta, 0
$07BA	$0E00	    			MOVLW	0
$07BC	$6E20	    			MOVWF	_tiempovuelta+1, 0
$07BE	$0E00	    			MOVLW	0
$07C0	$6E21	    			MOVWF	_tiempovuelta+2, 0
$07C2	$0E7F	    			MOVLW	127
$07C4	$6E22	    			MOVWF	_tiempovuelta+3, 0
;display.c,357 :: 			interrupcionesvuelta=0;
$07C6	$6A23	    			CLRF	_interrupcionesvuelta, 0
$07C8	$6A24	    			CLRF	_interrupcionesvuelta+1, 0
;display.c,360 :: 			delay_ms(1000);
$07CA	$0E06	    			MOVLW	6
$07CC	$6E0C	    			MOVWF	STACK_12, 0
$07CE	$0EFF	    			MOVLW	255
$07D0	$6E0B	    			MOVWF	STACK_11, 0
$07D2	$0EFF	    			MOVLW	255
$07D4	$6E0A	    			MOVWF	STACK_10, 0
$07D6	$2E0C	    			DECFSZ	STACK_12, F, 0
$07D8	$D001	    			BRA	$+2
$07DA	$D007	    			BRA	$+8
$07DC	$2E0B	    			DECFSZ	STACK_11, F, 0
$07DE	$D001	    			BRA	$+2
$07E0	$D003	    			BRA	$+4
$07E2	$2E0A	    			DECFSZ	STACK_10, F, 0
$07E4	$D7FE	    			BRA	$-1
$07E6	$D7FA	    			BRA	$-5
$07E8	$D7F6	    			BRA	$-9
$07EA	$0E1A	    			MOVLW	26
$07EC	$6E0B	    			MOVWF	STACK_11, 0
$07EE	$0EFF	    			MOVLW	255
$07F0	$6E0A	    			MOVWF	STACK_10, 0
$07F2	$2E0B	    			DECFSZ	STACK_11, F, 0
$07F4	$D001	    			BRA	$+2
$07F6	$D003	    			BRA	$+4
$07F8	$2E0A	    			DECFSZ	STACK_10, F, 0
$07FA	$D7FE	    			BRA	$-1
$07FC	$D7FA	    			BRA	$-5
$07FE	$0E42	    			MOVLW	66
$0800	$6E0A	    			MOVWF	STACK_10, 0
$0802	$2E0A	    			DECFSZ	STACK_10, F, 0
$0804	$D7FE	    			BRA	$-1
;display.c,361 :: 			Lcd_Cmd(Lcd_Clear);
$0806	$0E01	    			MOVLW	1
$0808	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$080A	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,362 :: 			Lcd_Out(1,8,"Player");
$080E	$0E01	    			MOVLW	1
$0810	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0812	$0E08	    			MOVLW	8
$0814	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0816	$0E65	    			MOVLW	lstr22_display
$0818	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$081A	$0E01	    			MOVLW	@lstr22_display
$081C	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$081E	$ECD9	F00C			CALL	_Lcd_Out
;display.c,363 :: 			Lcd_Out(2,8,"Program");
$0822	$0E02	    			MOVLW	2
$0824	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0826	$0E08	    			MOVLW	8
$0828	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$082A	$0E6C	    			MOVLW	lstr23_display
$082C	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$082E	$0E01	    			MOVLW	@lstr23_display
$0830	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0832	$ECD9	F00C			CALL	_Lcd_Out
;display.c,364 :: 			WordToStr(numeroVueltasJugador,textolcd1);
$0836	$C015	F06E			MOVFF	_numeroVueltasJugador, FARG_WordToStr+0
$083A	$0E00	    			MOVLW	0
$083C	$6E6F	    			MOVWF	FARG_WordToStr+1, 0
$083E	$C1A7	F070			MOVFF	main_textolcd1_L0, FARG_WordToStr+2
$0842	$C1A8	F071			MOVFF	main_textolcd1_L0+1, FARG_WordToStr+3
$0846	$ECDE	F00A			CALL	_WordToStr
;display.c,365 :: 			WordToStr(numeroVueltasCoche,textolcd2);
$084A	$C018	F06E			MOVFF	_numeroVueltasCoche, FARG_WordToStr+0
$084E	$0E00	    			MOVLW	0
$0850	$6E6F	    			MOVWF	FARG_WordToStr+1, 0
$0852	$C1A9	F070			MOVFF	main_textolcd2_L0, FARG_WordToStr+2
$0856	$C1AA	F071			MOVFF	main_textolcd2_L0+1, FARG_WordToStr+3
$085A	$ECDE	F00A			CALL	_WordToStr
;display.c,367 :: 			Lcd_Out(1,1,textolcd1);
$085E	$0E01	    			MOVLW	1
$0860	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0862	$0E01	    			MOVLW	1
$0864	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0866	$C1A7	F070			MOVFF	main_textolcd1_L0, FARG_Lcd_Out+2
$086A	$C1A8	F071			MOVFF	main_textolcd1_L0+1, FARG_Lcd_Out+3
$086E	$ECD9	F00C			CALL	_Lcd_Out
;display.c,369 :: 			Lcd_Out(2,1,textolcd2);
$0872	$0E02	    			MOVLW	2
$0874	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0876	$0E01	    			MOVLW	1
$0878	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$087A	$C1A9	F070			MOVFF	main_textolcd2_L0, FARG_Lcd_Out+2
$087E	$C1AA	F071			MOVFF	main_textolcd2_L0+1, FARG_Lcd_Out+3
$0882	$ECD9	F00C			CALL	_Lcd_Out
;display.c,371 :: 			decision(191,nivel);
$0886	$0EBF	    			MOVLW	191
$0888	$6E2E	    			MOVWF	FARG_decision+0, 0
$088A	$0E00	    			MOVLW	0
$088C	$6E2F	    			MOVWF	FARG_decision+1, 0
$088E	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$0892	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$0896	$EC37	F009			CALL	_decision
;display.c,372 :: 			contador = 0;
$089A	$6A19	    			CLRF	_contador, 0
$089C	$6A1A	    			CLRF	_contador+1, 0
$089E	$6A1B	    			CLRF	_contador+2, 0
$08A0	$6A1C	    			CLRF	_contador+3, 0
;display.c,373 :: 			fallo = 0;
$08A2	$0101	    			MOVLB	1
$08A4	$6BAB	    			CLRF	main_fallo_L0, 1
;display.c,374 :: 			while ((numeroVueltasCoche > 0) && (numeroVueltasJugador > 0) && (!fallo))
$08A6	$	L_main_56:
$08A6	$0101	    			MOVLB	1
$08A8	$5018	    			MOVF	_numeroVueltasCoche, 0, 0
$08AA	$0800	    			SUBLW	0
$08AC	$B0D8	    			BTFSC	STATUS, C, 0
$08AE	$D116	    			BRA	L_main_57
$08B0	$5015	    			MOVF	_numeroVueltasJugador, 0, 0
$08B2	$0800	    			SUBLW	0
$08B4	$B0D8	    			BTFSC	STATUS, C, 0
$08B6	$D112	    			BRA	L_main_57
$08B8	$53AB	    			MOVF	main_fallo_L0, 1, 1
$08BA	$A4D8	    			BTFSS	STATUS, Z, 0
$08BC	$D10F	    			BRA	L_main_57
$08BE	$	L857_ex_L_main_57:
;display.c,378 :: 			if (contador >= 200) fallo =1; //contador llega a 100 en cinco segundos
$08BE	$0E00	    			MOVLW	0
$08C0	$5C1C	    			SUBWF	_contador+3, 0, 0
$08C2	$E108	    			BNZ	L_main_90
$08C4	$0E00	    			MOVLW	0
$08C6	$5C1B	    			SUBWF	_contador+2, 0, 0
$08C8	$E105	    			BNZ	L_main_90
$08CA	$0E00	    			MOVLW	0
$08CC	$5C1A	    			SUBWF	_contador+1, 0, 0
$08CE	$E102	    			BNZ	L_main_90
$08D0	$0EC8	    			MOVLW	200
$08D2	$5C19	    			SUBWF	_contador, 0, 0
$08D4	$	L_main_90:
$08D4	$0101	    			MOVLB	1
$08D6	$E302	    			BNC	L_main_60
$08D8	$0E01	    			MOVLW	1
$08DA	$6FAB	    			MOVWF	main_fallo_L0, 1
$08DC	$	L_main_60:
;display.c,380 :: 			if(detInterrupcion)
$08DC	$0101	    			MOVLB	1
$08DE	$5016	    			MOVF	_detInterrupcion, 0, 0
$08E0	$1017	    			IORWF	_detInterrupcion+1, 0, 0
$08E2	$B4D8	    			BTFSC	STATUS, Z, 0
$08E4	$D0FA	    			BRA	L_main_61
;display.c,381 :: 			{ switch (detInterrupcion)
$08E6	$D0B5	    			BRA	L_main_62
;display.c,382 :: 			{ case 1 : decision(175,nivel);      //sensor 3  180       correcto
$08E8	$	L_main_64:
$08E8	$0101	    			MOVLB	1
$08EA	$0EAF	    			MOVLW	175
$08EC	$6E2E	    			MOVWF	FARG_decision+0, 0
$08EE	$0E00	    			MOVLW	0
$08F0	$6E2F	    			MOVWF	FARG_decision+1, 0
$08F2	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$08F6	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$08FA	$EC37	F009			CALL	_decision
;display.c,383 :: 			detInterrupcion=-1;
$08FE	$0EFF	    			MOVLW	255
$0900	$6E16	    			MOVWF	_detInterrupcion, 0
$0902	$0EFF	    			MOVLW	255
$0904	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,385 :: 			break;
$0906	$D0E9	    			BRA	L_main_63
;display.c,386 :: 			case 2 : decision(175,nivel);    //sensor 4    175      correcto
$0908	$	L_main_65:
$0908	$0EAF	    			MOVLW	175
$090A	$6E2E	    			MOVWF	FARG_decision+0, 0
$090C	$0E00	    			MOVLW	0
$090E	$6E2F	    			MOVWF	FARG_decision+1, 0
$0910	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$0914	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$0918	$EC37	F009			CALL	_decision
;display.c,387 :: 			detInterrupcion=-1;
$091C	$0EFF	    			MOVLW	255
$091E	$6E16	    			MOVWF	_detInterrupcion, 0
$0920	$0EFF	    			MOVLW	255
$0922	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,389 :: 			break;
$0924	$D0DA	    			BRA	L_main_63
;display.c,390 :: 			case 3 : decision(172,nivel);    //sensor 5   178      correcto
$0926	$	L_main_66:
$0926	$0EAC	    			MOVLW	172
$0928	$6E2E	    			MOVWF	FARG_decision+0, 0
$092A	$0E00	    			MOVLW	0
$092C	$6E2F	    			MOVWF	FARG_decision+1, 0
$092E	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$0932	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$0936	$EC37	F009			CALL	_decision
;display.c,391 :: 			detInterrupcion=-1;
$093A	$0EFF	    			MOVLW	255
$093C	$6E16	    			MOVWF	_detInterrupcion, 0
$093E	$0EFF	    			MOVLW	255
$0940	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,393 :: 			break;
$0942	$D0CB	    			BRA	L_main_63
;display.c,394 :: 			case 4 : decision(200,nivel);    //sensor 6   200      correcto
$0944	$	L_main_67:
$0944	$0EC8	    			MOVLW	200
$0946	$6E2E	    			MOVWF	FARG_decision+0, 0
$0948	$0E00	    			MOVLW	0
$094A	$6E2F	    			MOVWF	FARG_decision+1, 0
$094C	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$0950	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$0954	$EC37	F009			CALL	_decision
;display.c,395 :: 			detInterrupcion=-1;
$0958	$0EFF	    			MOVLW	255
$095A	$6E16	    			MOVWF	_detInterrupcion, 0
$095C	$0EFF	    			MOVLW	255
$095E	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,397 :: 			break;
$0960	$D0BC	    			BRA	L_main_63
;display.c,398 :: 			case 5 : decision(150,nivel);   //sensor 7    190      correcto
$0962	$	L_main_68:
$0962	$0E96	    			MOVLW	150
$0964	$6E2E	    			MOVWF	FARG_decision+0, 0
$0966	$0E00	    			MOVLW	0
$0968	$6E2F	    			MOVWF	FARG_decision+1, 0
$096A	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$096E	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$0972	$EC37	F009			CALL	_decision
;display.c,399 :: 			detInterrupcion=-1;
$0976	$0EFF	    			MOVLW	255
$0978	$6E16	    			MOVWF	_detInterrupcion, 0
$097A	$0EFF	    			MOVLW	255
$097C	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,401 :: 			break;
$097E	$D0AD	    			BRA	L_main_63
;display.c,402 :: 			case 6 : decision(165,nivel);   //sendor 8   185 correcto
$0980	$	L_main_69:
$0980	$0EA5	    			MOVLW	165
$0982	$6E2E	    			MOVWF	FARG_decision+0, 0
$0984	$0E00	    			MOVLW	0
$0986	$6E2F	    			MOVWF	FARG_decision+1, 0
$0988	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$098C	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$0990	$EC37	F009			CALL	_decision
;display.c,403 :: 			detInterrupcion=-1;
$0994	$0EFF	    			MOVLW	255
$0996	$6E16	    			MOVWF	_detInterrupcion, 0
$0998	$0EFF	    			MOVLW	255
$099A	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,405 :: 			break;
$099C	$D09E	    			BRA	L_main_63
;display.c,406 :: 			case 7 : decision(180,nivel);  //sensor 9       180 correcto
$099E	$	L_main_70:
$099E	$0EB4	    			MOVLW	180
$09A0	$6E2E	    			MOVWF	FARG_decision+0, 0
$09A2	$0E00	    			MOVLW	0
$09A4	$6E2F	    			MOVWF	FARG_decision+1, 0
$09A6	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$09AA	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$09AE	$EC37	F009			CALL	_decision
;display.c,407 :: 			detInterrupcion=-1;
$09B2	$0EFF	    			MOVLW	255
$09B4	$6E16	    			MOVWF	_detInterrupcion, 0
$09B6	$0EFF	    			MOVLW	255
$09B8	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,409 :: 			break;
$09BA	$D08F	    			BRA	L_main_63
;display.c,410 :: 			case 8 : decision(178,nivel);
$09BC	$	L_main_71:
$09BC	$0EB2	    			MOVLW	178
$09BE	$6E2E	    			MOVWF	FARG_decision+0, 0
$09C0	$0E00	    			MOVLW	0
$09C2	$6E2F	    			MOVWF	FARG_decision+1, 0
$09C4	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$09C8	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$09CC	$EC37	F009			CALL	_decision
;display.c,412 :: 			detInterrupcion=-1;    //sensor 10     198 correcto
$09D0	$0EFF	    			MOVLW	255
$09D2	$6E16	    			MOVWF	_detInterrupcion, 0
$09D4	$0EFF	    			MOVLW	255
$09D6	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,413 :: 			break;
$09D8	$D080	    			BRA	L_main_63
;display.c,414 :: 			case 9 : IntToStr(numeroVueltasJugador,textolcd1);
$09DA	$	L_main_72:
$09DA	$C015	F02E			MOVFF	_numeroVueltasJugador, FARG_IntToStr+0
$09DE	$0E00	    			MOVLW	0
$09E0	$6E2F	    			MOVWF	FARG_IntToStr+1, 0
$09E2	$C1A7	F030			MOVFF	main_textolcd1_L0, FARG_IntToStr+2
$09E6	$C1A8	F031			MOVFF	main_textolcd1_L0+1, FARG_IntToStr+3
$09EA	$EC3E	F00B			CALL	_IntToStr
;display.c,415 :: 			Lcd_Out(1,1,textolcd1);
$09EE	$0E01	    			MOVLW	1
$09F0	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$09F2	$0E01	    			MOVLW	1
$09F4	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$09F6	$C1A7	F070			MOVFF	main_textolcd1_L0, FARG_Lcd_Out+2
$09FA	$C1A8	F071			MOVFF	main_textolcd1_L0+1, FARG_Lcd_Out+3
$09FE	$ECD9	F00C			CALL	_Lcd_Out
;display.c,416 :: 			detInterrupcion=-1;
$0A02	$0EFF	    			MOVLW	255
$0A04	$6E16	    			MOVWF	_detInterrupcion, 0
$0A06	$0EFF	    			MOVLW	255
$0A08	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,417 :: 			break;
$0A0A	$D067	    			BRA	L_main_63
;display.c,418 :: 			case 10 : IntToStr(numeroVueltasCoche,textolcd2);
$0A0C	$	L_main_73:
$0A0C	$C018	F02E			MOVFF	_numeroVueltasCoche, FARG_IntToStr+0
$0A10	$0E00	    			MOVLW	0
$0A12	$6E2F	    			MOVWF	FARG_IntToStr+1, 0
$0A14	$C1A9	F030			MOVFF	main_textolcd2_L0, FARG_IntToStr+2
$0A18	$C1AA	F031			MOVFF	main_textolcd2_L0+1, FARG_IntToStr+3
$0A1C	$EC3E	F00B			CALL	_IntToStr
;display.c,419 :: 			decision(191,nivel);
$0A20	$0EBF	    			MOVLW	191
$0A22	$6E2E	    			MOVWF	FARG_decision+0, 0
$0A24	$0E00	    			MOVLW	0
$0A26	$6E2F	    			MOVWF	FARG_decision+1, 0
$0A28	$C1AC	F030			MOVFF	main_nivel_L0, FARG_decision+2
$0A2C	$C1AD	F031			MOVFF	main_nivel_L0+1, FARG_decision+3
$0A30	$EC37	F009			CALL	_decision
;display.c,420 :: 			Lcd_Out(2,1,textolcd2);
$0A34	$0E02	    			MOVLW	2
$0A36	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0A38	$0E01	    			MOVLW	1
$0A3A	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0A3C	$C1A9	F070			MOVFF	main_textolcd2_L0, FARG_Lcd_Out+2
$0A40	$C1AA	F071			MOVFF	main_textolcd2_L0+1, FARG_Lcd_Out+3
$0A44	$ECD9	F00C			CALL	_Lcd_Out
;display.c,421 :: 			detInterrupcion=-1;
$0A48	$0EFF	    			MOVLW	255
$0A4A	$6E16	    			MOVWF	_detInterrupcion, 0
$0A4C	$0EFF	    			MOVLW	255
$0A4E	$6E17	    			MOVWF	_detInterrupcion+1, 0
;display.c,422 :: 			break;
$0A50	$D044	    			BRA	L_main_63
;display.c,425 :: 			} //fin switch
$0A52	$	L_main_62:
$0A52	$0E00	    			MOVLW	0
$0A54	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0A56	$E102	    			BNZ	L_main_91
$0A58	$0E01	    			MOVLW	1
$0A5A	$1816	    			XORWF	_detInterrupcion, 0, 0
$0A5C	$	L_main_91:
$0A5C	$B4D8	    			BTFSC	STATUS, Z, 0
$0A5E	$D744	    			BRA	L_main_64
$0A60	$0E00	    			MOVLW	0
$0A62	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0A64	$E102	    			BNZ	L_main_92
$0A66	$0E02	    			MOVLW	2
$0A68	$1816	    			XORWF	_detInterrupcion, 0, 0
$0A6A	$	L_main_92:
$0A6A	$B4D8	    			BTFSC	STATUS, Z, 0
$0A6C	$D74D	    			BRA	L_main_65
$0A6E	$0E00	    			MOVLW	0
$0A70	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0A72	$E102	    			BNZ	L_main_93
$0A74	$0E03	    			MOVLW	3
$0A76	$1816	    			XORWF	_detInterrupcion, 0, 0
$0A78	$	L_main_93:
$0A78	$B4D8	    			BTFSC	STATUS, Z, 0
$0A7A	$D755	    			BRA	L_main_66
$0A7C	$0E00	    			MOVLW	0
$0A7E	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0A80	$E102	    			BNZ	L_main_94
$0A82	$0E04	    			MOVLW	4
$0A84	$1816	    			XORWF	_detInterrupcion, 0, 0
$0A86	$	L_main_94:
$0A86	$B4D8	    			BTFSC	STATUS, Z, 0
$0A88	$D75D	    			BRA	L_main_67
$0A8A	$0E00	    			MOVLW	0
$0A8C	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0A8E	$E102	    			BNZ	L_main_95
$0A90	$0E05	    			MOVLW	5
$0A92	$1816	    			XORWF	_detInterrupcion, 0, 0
$0A94	$	L_main_95:
$0A94	$B4D8	    			BTFSC	STATUS, Z, 0
$0A96	$D765	    			BRA	L_main_68
$0A98	$0E00	    			MOVLW	0
$0A9A	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0A9C	$E102	    			BNZ	L_main_96
$0A9E	$0E06	    			MOVLW	6
$0AA0	$1816	    			XORWF	_detInterrupcion, 0, 0
$0AA2	$	L_main_96:
$0AA2	$B4D8	    			BTFSC	STATUS, Z, 0
$0AA4	$D76D	    			BRA	L_main_69
$0AA6	$0E00	    			MOVLW	0
$0AA8	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0AAA	$E102	    			BNZ	L_main_97
$0AAC	$0E07	    			MOVLW	7
$0AAE	$1816	    			XORWF	_detInterrupcion, 0, 0
$0AB0	$	L_main_97:
$0AB0	$B4D8	    			BTFSC	STATUS, Z, 0
$0AB2	$D775	    			BRA	L_main_70
$0AB4	$0E00	    			MOVLW	0
$0AB6	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0AB8	$E102	    			BNZ	L_main_98
$0ABA	$0E08	    			MOVLW	8
$0ABC	$1816	    			XORWF	_detInterrupcion, 0, 0
$0ABE	$	L_main_98:
$0ABE	$B4D8	    			BTFSC	STATUS, Z, 0
$0AC0	$D77D	    			BRA	L_main_71
$0AC2	$0E00	    			MOVLW	0
$0AC4	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0AC6	$E102	    			BNZ	L_main_99
$0AC8	$0E09	    			MOVLW	9
$0ACA	$1816	    			XORWF	_detInterrupcion, 0, 0
$0ACC	$	L_main_99:
$0ACC	$E086	    			BZ	L_main_72
$0ACE	$0E00	    			MOVLW	0
$0AD0	$1817	    			XORWF	_detInterrupcion+1, 0, 0
$0AD2	$E102	    			BNZ	L_main_100
$0AD4	$0E0A	    			MOVLW	10
$0AD6	$1816	    			XORWF	_detInterrupcion, 0, 0
$0AD8	$	L_main_100:
$0AD8	$E099	    			BZ	L_main_73
$0ADA	$	L_main_63:
;display.c,427 :: 			}//fin del if
$0ADA	$	L_main_61:
;display.c,431 :: 			}
$0ADA	$D6E5	    			BRA	L_main_56
$0ADC	$	L_main_57:
;display.c,432 :: 			Lcd_Cmd(Lcd_Clear);
$0ADC	$0E01	    			MOVLW	1
$0ADE	$6E74	    			MOVWF	FARG_Lcd_Cmd+0, 0
$0AE0	$EC8F	F00C			CALL	_Lcd_Cmd
;display.c,433 :: 			Pwm_Change_Duty(0); //freanamos el coche
$0AE4	$6A74	    			CLRF	FARG_PWM_Change_Duty+0, 0
$0AE6	$EC5A	F00D			CALL	_PWM_Change_Duty
;display.c,434 :: 			if(numeroVueltasCoche ==0)
$0AEA	$5018	    			MOVF	_numeroVueltasCoche, 0, 0
$0AEC	$0A00	    			XORLW	0
$0AEE	$E10A	    			BNZ	L_main_74
;display.c,435 :: 			Lcd_Out(1,1,"Has perdido");
$0AF0	$0E01	    			MOVLW	1
$0AF2	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0AF4	$0E01	    			MOVLW	1
$0AF6	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0AF8	$0E74	    			MOVLW	lstr24_display
$0AFA	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0AFC	$0E01	    			MOVLW	@lstr24_display
$0AFE	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0B00	$ECD9	F00C			CALL	_Lcd_Out
$0B04	$	L_main_74:
;display.c,436 :: 			if(numeroVueltasJugador ==0)
$0B04	$5015	    			MOVF	_numeroVueltasJugador, 0, 0
$0B06	$0A00	    			XORLW	0
$0B08	$E10A	    			BNZ	L_main_75
;display.c,437 :: 			Lcd_Out(1,1,"Has ganado");
$0B0A	$0E01	    			MOVLW	1
$0B0C	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0B0E	$0E01	    			MOVLW	1
$0B10	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0B12	$0E80	    			MOVLW	lstr25_display
$0B14	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0B16	$0E01	    			MOVLW	@lstr25_display
$0B18	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0B1A	$ECD9	F00C			CALL	_Lcd_Out
$0B1E	$	L_main_75:
;display.c,438 :: 			if (fallo)
$0B1E	$0101	    			MOVLB	1
$0B20	$53AB	    			MOVF	main_fallo_L0, 1, 1
$0B22	$E014	    			BZ	L_main_76
;display.c,440 :: 			Lcd_Out (1,1,"Has cometido");
$0B24	$0E01	    			MOVLW	1
$0B26	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0B28	$0E01	    			MOVLW	1
$0B2A	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0B2C	$0E8B	    			MOVLW	lstr26_display
$0B2E	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0B30	$0E01	    			MOVLW	@lstr26_display
$0B32	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0B34	$ECD9	F00C			CALL	_Lcd_Out
;display.c,441 :: 			Lcd_Out(2,1,"falta, pierdes");
$0B38	$0E02	    			MOVLW	2
$0B3A	$6E6E	    			MOVWF	FARG_Lcd_Out+0, 0
$0B3C	$0E01	    			MOVLW	1
$0B3E	$6E6F	    			MOVWF	FARG_Lcd_Out+1, 0
$0B40	$0E98	    			MOVLW	lstr27_display
$0B42	$6E70	    			MOVWF	FARG_Lcd_Out+2, 0
$0B44	$0E01	    			MOVLW	@lstr27_display
$0B46	$6E71	    			MOVWF	FARG_Lcd_Out+3, 0
$0B48	$ECD9	F00C			CALL	_Lcd_Out
;display.c,442 :: 			}
$0B4C	$	L_main_76:
;display.c,443 :: 			}
$0B4C	$D7FF	    			BRA	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0008		interrupt
$02AE		main
$0B4E		seleccionarNivel
$0D20		recalibrar
$0ECE		numeroVueltas
$1052		Mul_32x32_FP
$117A		Lcd_Init
$126E		decision
$134C		Double2Int
$1422		Compare_Double
$14F2		Div_16x16_S
$15BC		WordToStr
$167C		IntToStr
$1736		Div_8x8_S
$17EC		decelerar
$1888		acelerar
$191E		Lcd_Cmd
$19B2		Lcd_Out
$1A3A		NRM3232
$1AB4		PWM_Change_Duty
$1B24		Mul_16x16_S
$1B8C		Div_16x16_S_L
$1BEE		configuracion
$1C42		Int2Double
$1C86		Div_16x16_U
$1CC2		Word2Double
$1CEE		Delay_5500us
$1D0C		SETIOV3224
$1D2A		SETFUN32
$1D46		SETFOV32
$1D60		RES032
$1D70		Delay_50us
$1D7C		FIXSIGN32
$1D86		PWM_Start
$1D90		PWM_Init
$1D98		Delay_1us


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0008		_interrupt:
$0094		L_interrupt_12:
$00A4		L_interrupt_16:
$00CE		L_interrupt_17:
$00FA		L_interrupt_18:
$0126		L_interrupt_14:
$0132		L_interrupt_87:
$0140		L_interrupt_88:
$014E		L_interrupt_89:
$0152		L_interrupt_15:
$019C		L_interrupt_13:
$01B2		L_interrupt_19:
$01C8		L_interrupt_20:
$01DE		L_interrupt_21:
$01F4		L_interrupt_22:
$020A		L_interrupt_23:
$0220		L_interrupt_24:
$0236		L_interrupt_25:
$024C		L_interrupt_26:
$0266		L_interrupt_27:
$026C		L_Interrupt_end:
$02AE		_main:
$08A6		L_main_56:
$08BE		L857_ex_L_main_57:
$08D4		L_main_90:
$08DC		L_main_60:
$08E8		L_main_64:
$0908		L_main_65:
$0926		L_main_66:
$0944		L_main_67:
$0962		L_main_68:
$0980		L_main_69:
$099E		L_main_70:
$09BC		L_main_71:
$09DA		L_main_72:
$0A0C		L_main_73:
$0A52		L_main_62:
$0A5C		L_main_91:
$0A6A		L_main_92:
$0A78		L_main_93:
$0A86		L_main_94:
$0A94		L_main_95:
$0AA2		L_main_96:
$0AB0		L_main_97:
$0ABE		L_main_98:
$0ACC		L_main_99:
$0AD8		L_main_100:
$0ADA		L_main_61:
$0ADA		L_main_63:
$0ADC		L_main_57:
$0B04		L_main_74:
$0B1E		L_main_75:
$0B4C		L_main_76:
$0B4E		_seleccionarNivel:
$0C08		L_seleccionarNivel_28:
$0C64		L_seleccionarNivel_30:
$0C7E		L_seleccionarNivel_32:
$0CBE		L_seleccionarNivel_31:
$0CC2		L_seleccionarNivel_35:
$0CDA		L_seleccionarNivel_36:
$0CF0		L_seleccionarNivel_37:
$0D06		L_seleccionarNivel_33:
$0D18		L_seleccionarNivel_34:
$0D1A		L_seleccionarNivel_29:
$0D20		_recalibrar:
$0E14		L_recalibrar_44:
$0E44		L_recalibrar_47:
$0E48		L_recalibrar_48:
$0E4A		L_recalibrar_46:
$0E8A		L_recalibrar_51:
$0E8E		L_recalibrar_52:
$0E90		L_recalibrar_50:
$0E90		L_recalibrar_54:
$0E94		L_recalibrar_49:
$0E94		L_recalibrar_53:
$0E94		L_recalibrar_55:
$0E96		L_recalibrar_45:
$0ECE		_numeroVueltas:
$0F86		L_numeroVueltas_38:
$0F9A		L_numeroVueltas_41:
$0FD8		L_numeroVueltas_40:
$0FE4		L_numeroVueltas_43:
$1022		L_numeroVueltas_42:
$104C		L_numeroVueltas_39:
$1052		_Mul_32x32_FP:
$1054		FPM32:
$1062		M32BNE0:
$1080		MTUN32:
$1088		MOK32:
$112E		MROUND32:
$1154		MUL32OK:
$115E		MULJPRES032:
$1168		MULJPSETFOV32:
$1172		MULJPSETFUN32:
$1178		MULEEE:
$117A		_Lcd_Init:
$126E		_decision:
$127C		L_decision_83:
$1288		L_decision_84:
$1304		L_decision_8:
$1318		L_decision_85:
$132A		L_decision_9:
$133C		L_decision_86:
$134A		L_decision_10:
$134A		L_decision_11:
$134C		_Double2Int:
$134E		INT3216:
$1398		TSHIFT3216:
$13A0		SHIFT3216:
$13AC		SHIFT3216OK:
$13C6		INT3216OK:
$13DA		IRES016:
$13E2		SETIOV16:
$1400		JPJSETIOV3224:
$140C		INT3216EOK:
$1414		INT3216EER:
$1418		INT3216EEE:
$1422		_Compare_Double:
$1448		COMPARE_YNOTZERO:
$1452		COMPARE_XNOTZERO:
$145C		COMPARE_NOTZERO:
$147E		COMPARE_TESTALL:
$1492		COMPARE_C1:
$14A6		COMPARE_C2:
$14BA		COMPARE_C3:
$14CA		GT_FALSE:
$14D6		GT_TRUE:
$14E2		COMPARE_GT:
$14E6		COMPARE_LT:
$14EA		COMPARE_EQU:
$14F2		_Div_16x16_S:
$15BC		_WordToStr:
$161A		L_WordToStr_4:
$1628		L_WordToStr_51:
$167A		L_WordToStr_5:
$167C		_IntToStr:
$1696		L_IntToStr_52:
$16AA		L_IntToStr_12:
$16C2		L_IntToStr_13:
$16F6		L_IntToStr_14:
$1708		L_IntToStr_16:
$1722		L_IntToStr_17:
$1734		L_IntToStr_15:
$1736		_Div_8x8_S:
$17EC		_decelerar:
$17FE		L_decelerar_79:
$180A		L_decelerar_80:
$1828		L_decelerar_81:
$1834		L_decelerar_5:
$1834		L_decelerar_6:
$1854		L_decelerar_82:
$1876		L_decelerar_7:
$1888		_acelerar:
$18BE		L_acelerar_77:
$18CA		L_acelerar_2:
$18CA		L_acelerar_3:
$18EA		L_acelerar_78:
$190C		L_acelerar_4:
$191E		_Lcd_Cmd:
$193A		L_Lcd_Cmd_0:
$1962		L_Lcd_Cmd_1:
$1964		L_Lcd_Cmd_2:
$196E		L_Lcd_Cmd_3:
$1996		L_Lcd_Cmd_4:
$1998		L_Lcd_Cmd_5:
$19AC		L_Lcd_Cmd_6:
$19B0		L_Lcd_Cmd_7:
$19B2		_Lcd_Out:
$19B4		L_Lcd_Out_19:
$19BA		L_Lcd_Out_20:
$19C0		L_Lcd_Out_21:
$19C6		L_Lcd_Out_22:
$19CC		L_Lcd_Out_23:
$19D2		L_Lcd_Out_17:
$19EC		L_Lcd_Out_18:
$1A06		L_Lcd_Out_24:
$1A34		L_Lcd_Out_25:
$1A3A		_NRM3232:
$1A6E		NORM3232:
$1A7C		NORM3232A:
$1A92		JPNRES032:
$1A9E		JPNSETFUN32:
$1AAA		JMPNFIXSIGN32:
$1AB2		NORM32EEE:
$1AB4		_PWM_Change_Duty:
$1ADA		L_PWM_Change_Duty_4:
$1AE8		L_PWM_Change_Duty_5:
$1B24		_Mul_16x16_S:
$1B8C		_Div_16x16_S_L:
$1BEE		_configuracion:
$1C42		_Int2Double:
$1C52		FLO1632:
$1C74		FLO1632EEE:
$1C86		_Div_16x16_U:
$1CC2		_Word2Double:
$1CD2		FLO16U32:
$1CEE		_Delay_5500us:
$1D0C		_SETIOV3224:
$1D26		SETIOV3224EEE:
$1D2A		_SETFUN32:
$1D42		SETFUN32EEE:
$1D46		_SETFOV32:
$1D5C		SETFOV32EEE:
$1D60		_RES032:
$1D70		_Delay_50us:
$1D7C		_FIXSIGN32:
$1D86		_PWM_Start:
$1D90		_PWM_Init:
$1D98		_Delay_1us:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		STACK_0
$0001		STACK_1
$0002		STACK_2
$0003		STACK_3
$0004		STACK_4
$0005		STACK_5
$0006		STACK_6
$0007		STACK_7
$0008		STACK_8
$0009		STACK_9
$000A		STACK_10
$000B		STACK_11
$000C		STACK_12
$000D		STACK_13
$000E		STACK_14
$000F		STACK_15
$0010		STACK_16
$0011		STACK_17
$0012		STACK_18
$0013		STACK_19
$0014		STACK_20
$0015		_numeroVueltasJugador
$0016		_detInterrupcion
$0018		_numeroVueltasCoche
$0019		_contador
$001D		_nivelInterrupt
$001F		_tiempovuelta
$0023		_interrupcionesvuelta
$0025		Lcd_main_global_portaddress
$0027		Lcd_cmd_status
$0028		_auxpwm
$002A		?saveFSR0
$002C		?saveFSR1
$002E		FARG_decision+0
$002E		FARG_IntToStr+0
$002E		lstr1_display
$002E		lstr5_display
$002E		lstr7_display
$0030		FARG_decision+2
$0030		FARG_IntToStr+2
$0032		IntToStr_i_L0
$0032		lstr6_display
$0033		IntToStr_negative_L0
$0034		IntToStr_inword_L0
$003B		lstr8_display
$003F		lstr2_display
$0044		numeroVueltas_vueltas_L0
$0045		numeroVueltas_auxVueltas_L0
$0046		lstr9_display
$0047		lstr3_display
$004F		lstr4_display
$0054		lstr10_display
$0057		seleccionarNivel_nivel_L0
$005C		lstr11_display
$0064		lstr12_display
$006E		FARG_acelerar+0
$006E		FARG_decelerar+0
$006E		FARG_Lcd_Init+0
$006E		FARG_Lcd_Out+0
$006E		FARG_PWM_Init+0
$006E		FARG_WordToStr+0
$006F		FARG_Lcd_Out+1
$0070		acelerar_cincoporciento_L0
$0070		decelerar_cincoporciento_L0
$0070		FARG_Lcd_Out+2
$0070		FARG_WordToStr+2
$0072		Lcd_Out_i_L0
$0072		WordToStr_pos_L0
$0074		FARG_Lcd_Cmd+0
$0074		FARG_PWM_Change_Duty+0
$0101		lstr13_display
$0111		lstr14_display
$0124		lstr15_display
$012C		lstr16_display
$013A		lstr17_display
$014C		lstr18_display
$0151		lstr19_display
$0155		lstr20_display
$0159		lstr21_display
$0165		lstr22_display
$016C		lstr23_display
$0174		lstr24_display
$0180		lstr25_display
$018B		lstr26_display
$0198		lstr27_display
$01A7		main_textolcd1_L0
$01A9		main_textolcd2_L0
$01AB		main_fallo_L0
$01AC		main_nivel_L0
$0F80		PORTA
$0F81		PORTB
$0F82		PORTC
$0F83		PORTD
$0F92		TRISA
$0F93		TRISB
$0F94		TRISC
$0F95		TRISD
$0FBD		CCP1CON
$0FBE		CCPR1L
$0FC1		ADCON1
$0FCA		T2CON
$0FCB		PR2
$0FD5		T0CON
$0FD6		TMR0L
$0FD8		STATUS
$0FD9		FSR2L
$0FDA		FSR2H
$0FDB		PLUSW2
$0FDC		PREINC2
$0FDD		POSTDEC2
$0FDE		POSTINC2
$0FDF		INDF2
$0FE0		BSR
$0FE1		FSR1L
$0FE2		FSR1H
$0FE3		PLUSW1
$0FE4		PREINC1
$0FE5		POSTDEC1
$0FE6		POSTINC1
$0FE7		INDF1
$0FE8		WREG
$0FE9		FSR0L
$0FEA		FSR0H
$0FEB		PLUSW0
$0FEC		PREINC0
$0FED		POSTDEC0
$0FEE		POSTINC0
$0FEF		INDF0
$0FF2		INTCON
$0FF3		PRODL
$0FF4		PRODH
$0FF5		TABLAT
$0FF6		TBLPTRL
$0FF7		TBLPTRH
$0FF8		TBLPTRU
$0FF9		PCL
$0FFA		PCLATH
$0FFB		PCLATU
$0FFD		TOSL
$0FFE		TOSH
$0FFF		TOSU


